
Gesture.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000dcc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000026  00800060  00000dcc  00000e60  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000004  00800086  00800086  00000e86  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000e86  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000eb8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d8  00000000  00000000  00000ef4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000019b7  00000000  00000000  00000fcc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007bd  00000000  00000000  00002983  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000c66  00000000  00000000  00003140  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000021c  00000000  00000000  00003da8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004f9  00000000  00000000  00003fc4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000014ed  00000000  00000000  000044bd  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c8  00000000  00000000  000059aa  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 1d 03 	jmp	0x63a	; 0x63a <__vector_9>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec ec       	ldi	r30, 0xCC	; 204
  68:	fd e0       	ldi	r31, 0x0D	; 13
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a6 38       	cpi	r26, 0x86	; 134
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a6 e8       	ldi	r26, 0x86	; 134
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	aa 38       	cpi	r26, 0x8A	; 138
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 90 03 	call	0x720	; 0x720 <main>
  8a:	0c 94 e4 06 	jmp	0xdc8	; 0xdc8 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <pinChange>:
}

void Lcd4_Shift_Left()
{
	Lcd4_Cmd(0x01);
	Lcd4_Cmd(0x08);
  92:	67 2b       	or	r22, r23
  94:	09 f0       	breq	.+2      	; 0x98 <pinChange+0x6>
  96:	df c0       	rjmp	.+446    	; 0x256 <pinChange+0x1c4>
  98:	00 97       	sbiw	r24, 0x00	; 0
  9a:	21 f4       	brne	.+8      	; 0xa4 <pinChange+0x12>
  9c:	8b b3       	in	r24, 0x1b	; 27
  9e:	8e 7f       	andi	r24, 0xFE	; 254
  a0:	8b bb       	out	0x1b, r24	; 27
  a2:	08 95       	ret
  a4:	81 30       	cpi	r24, 0x01	; 1
  a6:	91 05       	cpc	r25, r1
  a8:	21 f4       	brne	.+8      	; 0xb2 <pinChange+0x20>
  aa:	8b b3       	in	r24, 0x1b	; 27
  ac:	8d 7f       	andi	r24, 0xFD	; 253
  ae:	8b bb       	out	0x1b, r24	; 27
  b0:	08 95       	ret
  b2:	82 30       	cpi	r24, 0x02	; 2
  b4:	91 05       	cpc	r25, r1
  b6:	21 f4       	brne	.+8      	; 0xc0 <pinChange+0x2e>
  b8:	8b b3       	in	r24, 0x1b	; 27
  ba:	8b 7f       	andi	r24, 0xFB	; 251
  bc:	8b bb       	out	0x1b, r24	; 27
  be:	08 95       	ret
  c0:	83 30       	cpi	r24, 0x03	; 3
  c2:	91 05       	cpc	r25, r1
  c4:	21 f4       	brne	.+8      	; 0xce <pinChange+0x3c>
  c6:	8b b3       	in	r24, 0x1b	; 27
  c8:	87 7f       	andi	r24, 0xF7	; 247
  ca:	8b bb       	out	0x1b, r24	; 27
  cc:	08 95       	ret
  ce:	84 30       	cpi	r24, 0x04	; 4
  d0:	91 05       	cpc	r25, r1
  d2:	21 f4       	brne	.+8      	; 0xdc <pinChange+0x4a>
  d4:	8b b3       	in	r24, 0x1b	; 27
  d6:	8f 7e       	andi	r24, 0xEF	; 239
  d8:	8b bb       	out	0x1b, r24	; 27
  da:	08 95       	ret
  dc:	85 30       	cpi	r24, 0x05	; 5
  de:	91 05       	cpc	r25, r1
  e0:	21 f4       	brne	.+8      	; 0xea <pinChange+0x58>
  e2:	8b b3       	in	r24, 0x1b	; 27
  e4:	8f 7d       	andi	r24, 0xDF	; 223
  e6:	8b bb       	out	0x1b, r24	; 27
  e8:	08 95       	ret
  ea:	86 30       	cpi	r24, 0x06	; 6
  ec:	91 05       	cpc	r25, r1
  ee:	21 f4       	brne	.+8      	; 0xf8 <pinChange+0x66>
  f0:	8b b3       	in	r24, 0x1b	; 27
  f2:	8f 7b       	andi	r24, 0xBF	; 191
  f4:	8b bb       	out	0x1b, r24	; 27
  f6:	08 95       	ret
  f8:	87 30       	cpi	r24, 0x07	; 7
  fa:	91 05       	cpc	r25, r1
  fc:	21 f4       	brne	.+8      	; 0x106 <pinChange+0x74>
  fe:	8b b3       	in	r24, 0x1b	; 27
 100:	8f 77       	andi	r24, 0x7F	; 127
 102:	8b bb       	out	0x1b, r24	; 27
 104:	08 95       	ret
 106:	8a 30       	cpi	r24, 0x0A	; 10
 108:	91 05       	cpc	r25, r1
 10a:	21 f4       	brne	.+8      	; 0x114 <pinChange+0x82>
 10c:	88 b3       	in	r24, 0x18	; 24
 10e:	8e 7f       	andi	r24, 0xFE	; 254
 110:	88 bb       	out	0x18, r24	; 24
 112:	08 95       	ret
 114:	8b 30       	cpi	r24, 0x0B	; 11
 116:	91 05       	cpc	r25, r1
 118:	21 f4       	brne	.+8      	; 0x122 <pinChange+0x90>
 11a:	88 b3       	in	r24, 0x18	; 24
 11c:	8d 7f       	andi	r24, 0xFD	; 253
 11e:	88 bb       	out	0x18, r24	; 24
 120:	08 95       	ret
 122:	8c 30       	cpi	r24, 0x0C	; 12
 124:	91 05       	cpc	r25, r1
 126:	21 f4       	brne	.+8      	; 0x130 <pinChange+0x9e>
 128:	88 b3       	in	r24, 0x18	; 24
 12a:	8b 7f       	andi	r24, 0xFB	; 251
 12c:	88 bb       	out	0x18, r24	; 24
 12e:	08 95       	ret
 130:	8d 30       	cpi	r24, 0x0D	; 13
 132:	91 05       	cpc	r25, r1
 134:	21 f4       	brne	.+8      	; 0x13e <pinChange+0xac>
 136:	88 b3       	in	r24, 0x18	; 24
 138:	87 7f       	andi	r24, 0xF7	; 247
 13a:	88 bb       	out	0x18, r24	; 24
 13c:	08 95       	ret
 13e:	8e 30       	cpi	r24, 0x0E	; 14
 140:	91 05       	cpc	r25, r1
 142:	21 f4       	brne	.+8      	; 0x14c <pinChange+0xba>
 144:	88 b3       	in	r24, 0x18	; 24
 146:	8f 7e       	andi	r24, 0xEF	; 239
 148:	88 bb       	out	0x18, r24	; 24
 14a:	08 95       	ret
 14c:	8f 30       	cpi	r24, 0x0F	; 15
 14e:	91 05       	cpc	r25, r1
 150:	21 f4       	brne	.+8      	; 0x15a <pinChange+0xc8>
 152:	88 b3       	in	r24, 0x18	; 24
 154:	8f 7d       	andi	r24, 0xDF	; 223
 156:	88 bb       	out	0x18, r24	; 24
 158:	08 95       	ret
 15a:	80 31       	cpi	r24, 0x10	; 16
 15c:	91 05       	cpc	r25, r1
 15e:	21 f4       	brne	.+8      	; 0x168 <pinChange+0xd6>
 160:	88 b3       	in	r24, 0x18	; 24
 162:	8f 7b       	andi	r24, 0xBF	; 191
 164:	88 bb       	out	0x18, r24	; 24
 166:	08 95       	ret
 168:	81 31       	cpi	r24, 0x11	; 17
 16a:	91 05       	cpc	r25, r1
 16c:	21 f4       	brne	.+8      	; 0x176 <pinChange+0xe4>
 16e:	88 b3       	in	r24, 0x18	; 24
 170:	8f 77       	andi	r24, 0x7F	; 127
 172:	88 bb       	out	0x18, r24	; 24
 174:	08 95       	ret
 176:	84 31       	cpi	r24, 0x14	; 20
 178:	91 05       	cpc	r25, r1
 17a:	21 f4       	brne	.+8      	; 0x184 <pinChange+0xf2>
 17c:	85 b3       	in	r24, 0x15	; 21
 17e:	8e 7f       	andi	r24, 0xFE	; 254
 180:	85 bb       	out	0x15, r24	; 21
 182:	08 95       	ret
 184:	85 31       	cpi	r24, 0x15	; 21
 186:	91 05       	cpc	r25, r1
 188:	21 f4       	brne	.+8      	; 0x192 <pinChange+0x100>
 18a:	85 b3       	in	r24, 0x15	; 21
 18c:	8d 7f       	andi	r24, 0xFD	; 253
 18e:	85 bb       	out	0x15, r24	; 21
 190:	08 95       	ret
 192:	86 31       	cpi	r24, 0x16	; 22
 194:	91 05       	cpc	r25, r1
 196:	21 f4       	brne	.+8      	; 0x1a0 <pinChange+0x10e>
 198:	85 b3       	in	r24, 0x15	; 21
 19a:	8b 7f       	andi	r24, 0xFB	; 251
 19c:	85 bb       	out	0x15, r24	; 21
 19e:	08 95       	ret
 1a0:	87 31       	cpi	r24, 0x17	; 23
 1a2:	91 05       	cpc	r25, r1
 1a4:	21 f4       	brne	.+8      	; 0x1ae <pinChange+0x11c>
 1a6:	85 b3       	in	r24, 0x15	; 21
 1a8:	87 7f       	andi	r24, 0xF7	; 247
 1aa:	85 bb       	out	0x15, r24	; 21
 1ac:	08 95       	ret
 1ae:	88 31       	cpi	r24, 0x18	; 24
 1b0:	91 05       	cpc	r25, r1
 1b2:	21 f4       	brne	.+8      	; 0x1bc <pinChange+0x12a>
 1b4:	85 b3       	in	r24, 0x15	; 21
 1b6:	8f 7e       	andi	r24, 0xEF	; 239
 1b8:	85 bb       	out	0x15, r24	; 21
 1ba:	08 95       	ret
 1bc:	89 31       	cpi	r24, 0x19	; 25
 1be:	91 05       	cpc	r25, r1
 1c0:	21 f4       	brne	.+8      	; 0x1ca <pinChange+0x138>
 1c2:	85 b3       	in	r24, 0x15	; 21
 1c4:	8f 7d       	andi	r24, 0xDF	; 223
 1c6:	85 bb       	out	0x15, r24	; 21
 1c8:	08 95       	ret
 1ca:	8a 31       	cpi	r24, 0x1A	; 26
 1cc:	91 05       	cpc	r25, r1
 1ce:	21 f4       	brne	.+8      	; 0x1d8 <pinChange+0x146>
 1d0:	85 b3       	in	r24, 0x15	; 21
 1d2:	8f 7b       	andi	r24, 0xBF	; 191
 1d4:	85 bb       	out	0x15, r24	; 21
 1d6:	08 95       	ret
 1d8:	8b 31       	cpi	r24, 0x1B	; 27
 1da:	91 05       	cpc	r25, r1
 1dc:	21 f4       	brne	.+8      	; 0x1e6 <pinChange+0x154>
 1de:	85 b3       	in	r24, 0x15	; 21
 1e0:	8f 77       	andi	r24, 0x7F	; 127
 1e2:	85 bb       	out	0x15, r24	; 21
 1e4:	08 95       	ret
 1e6:	8e 31       	cpi	r24, 0x1E	; 30
 1e8:	91 05       	cpc	r25, r1
 1ea:	21 f4       	brne	.+8      	; 0x1f4 <pinChange+0x162>
 1ec:	82 b3       	in	r24, 0x12	; 18
 1ee:	8e 7f       	andi	r24, 0xFE	; 254
 1f0:	82 bb       	out	0x12, r24	; 18
 1f2:	08 95       	ret
 1f4:	8f 31       	cpi	r24, 0x1F	; 31
 1f6:	91 05       	cpc	r25, r1
 1f8:	21 f4       	brne	.+8      	; 0x202 <pinChange+0x170>
 1fa:	82 b3       	in	r24, 0x12	; 18
 1fc:	8d 7f       	andi	r24, 0xFD	; 253
 1fe:	82 bb       	out	0x12, r24	; 18
 200:	08 95       	ret
 202:	80 32       	cpi	r24, 0x20	; 32
 204:	91 05       	cpc	r25, r1
 206:	21 f4       	brne	.+8      	; 0x210 <pinChange+0x17e>
 208:	82 b3       	in	r24, 0x12	; 18
 20a:	8b 7f       	andi	r24, 0xFB	; 251
 20c:	82 bb       	out	0x12, r24	; 18
 20e:	08 95       	ret
 210:	81 32       	cpi	r24, 0x21	; 33
 212:	91 05       	cpc	r25, r1
 214:	21 f4       	brne	.+8      	; 0x21e <pinChange+0x18c>
 216:	82 b3       	in	r24, 0x12	; 18
 218:	87 7f       	andi	r24, 0xF7	; 247
 21a:	82 bb       	out	0x12, r24	; 18
 21c:	08 95       	ret
 21e:	82 32       	cpi	r24, 0x22	; 34
 220:	91 05       	cpc	r25, r1
 222:	21 f4       	brne	.+8      	; 0x22c <pinChange+0x19a>
 224:	82 b3       	in	r24, 0x12	; 18
 226:	8f 7e       	andi	r24, 0xEF	; 239
 228:	82 bb       	out	0x12, r24	; 18
 22a:	08 95       	ret
 22c:	83 32       	cpi	r24, 0x23	; 35
 22e:	91 05       	cpc	r25, r1
 230:	21 f4       	brne	.+8      	; 0x23a <pinChange+0x1a8>
 232:	82 b3       	in	r24, 0x12	; 18
 234:	8f 7d       	andi	r24, 0xDF	; 223
 236:	82 bb       	out	0x12, r24	; 18
 238:	08 95       	ret
 23a:	84 32       	cpi	r24, 0x24	; 36
 23c:	91 05       	cpc	r25, r1
 23e:	21 f4       	brne	.+8      	; 0x248 <pinChange+0x1b6>
 240:	82 b3       	in	r24, 0x12	; 18
 242:	8f 7b       	andi	r24, 0xBF	; 191
 244:	82 bb       	out	0x12, r24	; 18
 246:	08 95       	ret
 248:	85 97       	sbiw	r24, 0x25	; 37
 24a:	09 f0       	breq	.+2      	; 0x24e <pinChange+0x1bc>
 24c:	e1 c0       	rjmp	.+450    	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
 24e:	82 b3       	in	r24, 0x12	; 18
 250:	8f 77       	andi	r24, 0x7F	; 127
 252:	82 bb       	out	0x12, r24	; 18
 254:	08 95       	ret
 256:	00 97       	sbiw	r24, 0x00	; 0
 258:	21 f4       	brne	.+8      	; 0x262 <pinChange+0x1d0>
 25a:	8b b3       	in	r24, 0x1b	; 27
 25c:	81 60       	ori	r24, 0x01	; 1
 25e:	8b bb       	out	0x1b, r24	; 27
 260:	08 95       	ret
 262:	81 30       	cpi	r24, 0x01	; 1
 264:	91 05       	cpc	r25, r1
 266:	21 f4       	brne	.+8      	; 0x270 <pinChange+0x1de>
 268:	8b b3       	in	r24, 0x1b	; 27
 26a:	82 60       	ori	r24, 0x02	; 2
 26c:	8b bb       	out	0x1b, r24	; 27
 26e:	08 95       	ret
 270:	82 30       	cpi	r24, 0x02	; 2
 272:	91 05       	cpc	r25, r1
 274:	21 f4       	brne	.+8      	; 0x27e <pinChange+0x1ec>
 276:	8b b3       	in	r24, 0x1b	; 27
 278:	84 60       	ori	r24, 0x04	; 4
 27a:	8b bb       	out	0x1b, r24	; 27
 27c:	08 95       	ret
 27e:	83 30       	cpi	r24, 0x03	; 3
 280:	91 05       	cpc	r25, r1
 282:	21 f4       	brne	.+8      	; 0x28c <pinChange+0x1fa>
 284:	8b b3       	in	r24, 0x1b	; 27
 286:	88 60       	ori	r24, 0x08	; 8
 288:	8b bb       	out	0x1b, r24	; 27
 28a:	08 95       	ret
 28c:	84 30       	cpi	r24, 0x04	; 4
 28e:	91 05       	cpc	r25, r1
 290:	21 f4       	brne	.+8      	; 0x29a <pinChange+0x208>
 292:	8b b3       	in	r24, 0x1b	; 27
 294:	80 61       	ori	r24, 0x10	; 16
 296:	8b bb       	out	0x1b, r24	; 27
 298:	08 95       	ret
 29a:	85 30       	cpi	r24, 0x05	; 5
 29c:	91 05       	cpc	r25, r1
 29e:	21 f4       	brne	.+8      	; 0x2a8 <pinChange+0x216>
 2a0:	8b b3       	in	r24, 0x1b	; 27
 2a2:	80 62       	ori	r24, 0x20	; 32
 2a4:	8b bb       	out	0x1b, r24	; 27
 2a6:	08 95       	ret
 2a8:	86 30       	cpi	r24, 0x06	; 6
 2aa:	91 05       	cpc	r25, r1
 2ac:	21 f4       	brne	.+8      	; 0x2b6 <pinChange+0x224>
 2ae:	8b b3       	in	r24, 0x1b	; 27
 2b0:	80 64       	ori	r24, 0x40	; 64
 2b2:	8b bb       	out	0x1b, r24	; 27
 2b4:	08 95       	ret
 2b6:	87 30       	cpi	r24, 0x07	; 7
 2b8:	91 05       	cpc	r25, r1
 2ba:	21 f4       	brne	.+8      	; 0x2c4 <pinChange+0x232>
 2bc:	8b b3       	in	r24, 0x1b	; 27
 2be:	80 68       	ori	r24, 0x80	; 128
 2c0:	8b bb       	out	0x1b, r24	; 27
 2c2:	08 95       	ret
 2c4:	8a 30       	cpi	r24, 0x0A	; 10
 2c6:	91 05       	cpc	r25, r1
 2c8:	21 f4       	brne	.+8      	; 0x2d2 <pinChange+0x240>
 2ca:	88 b3       	in	r24, 0x18	; 24
 2cc:	81 60       	ori	r24, 0x01	; 1
 2ce:	88 bb       	out	0x18, r24	; 24
 2d0:	08 95       	ret
 2d2:	8b 30       	cpi	r24, 0x0B	; 11
 2d4:	91 05       	cpc	r25, r1
 2d6:	21 f4       	brne	.+8      	; 0x2e0 <pinChange+0x24e>
 2d8:	88 b3       	in	r24, 0x18	; 24
 2da:	82 60       	ori	r24, 0x02	; 2
 2dc:	88 bb       	out	0x18, r24	; 24
 2de:	08 95       	ret
 2e0:	8c 30       	cpi	r24, 0x0C	; 12
 2e2:	91 05       	cpc	r25, r1
 2e4:	21 f4       	brne	.+8      	; 0x2ee <pinChange+0x25c>
 2e6:	88 b3       	in	r24, 0x18	; 24
 2e8:	84 60       	ori	r24, 0x04	; 4
 2ea:	88 bb       	out	0x18, r24	; 24
 2ec:	08 95       	ret
 2ee:	8d 30       	cpi	r24, 0x0D	; 13
 2f0:	91 05       	cpc	r25, r1
 2f2:	21 f4       	brne	.+8      	; 0x2fc <pinChange+0x26a>
 2f4:	88 b3       	in	r24, 0x18	; 24
 2f6:	88 60       	ori	r24, 0x08	; 8
 2f8:	88 bb       	out	0x18, r24	; 24
 2fa:	08 95       	ret
 2fc:	8e 30       	cpi	r24, 0x0E	; 14
 2fe:	91 05       	cpc	r25, r1
 300:	21 f4       	brne	.+8      	; 0x30a <pinChange+0x278>
 302:	88 b3       	in	r24, 0x18	; 24
 304:	80 61       	ori	r24, 0x10	; 16
 306:	88 bb       	out	0x18, r24	; 24
 308:	08 95       	ret
 30a:	8f 30       	cpi	r24, 0x0F	; 15
 30c:	91 05       	cpc	r25, r1
 30e:	21 f4       	brne	.+8      	; 0x318 <pinChange+0x286>
 310:	88 b3       	in	r24, 0x18	; 24
 312:	80 62       	ori	r24, 0x20	; 32
 314:	88 bb       	out	0x18, r24	; 24
 316:	08 95       	ret
 318:	80 31       	cpi	r24, 0x10	; 16
 31a:	91 05       	cpc	r25, r1
 31c:	21 f4       	brne	.+8      	; 0x326 <pinChange+0x294>
 31e:	88 b3       	in	r24, 0x18	; 24
 320:	80 64       	ori	r24, 0x40	; 64
 322:	88 bb       	out	0x18, r24	; 24
 324:	08 95       	ret
 326:	81 31       	cpi	r24, 0x11	; 17
 328:	91 05       	cpc	r25, r1
 32a:	21 f4       	brne	.+8      	; 0x334 <pinChange+0x2a2>
 32c:	88 b3       	in	r24, 0x18	; 24
 32e:	80 68       	ori	r24, 0x80	; 128
 330:	88 bb       	out	0x18, r24	; 24
 332:	08 95       	ret
 334:	84 31       	cpi	r24, 0x14	; 20
 336:	91 05       	cpc	r25, r1
 338:	21 f4       	brne	.+8      	; 0x342 <pinChange+0x2b0>
 33a:	85 b3       	in	r24, 0x15	; 21
 33c:	81 60       	ori	r24, 0x01	; 1
 33e:	85 bb       	out	0x15, r24	; 21
 340:	08 95       	ret
 342:	85 31       	cpi	r24, 0x15	; 21
 344:	91 05       	cpc	r25, r1
 346:	21 f4       	brne	.+8      	; 0x350 <pinChange+0x2be>
 348:	85 b3       	in	r24, 0x15	; 21
 34a:	82 60       	ori	r24, 0x02	; 2
 34c:	85 bb       	out	0x15, r24	; 21
 34e:	08 95       	ret
 350:	86 31       	cpi	r24, 0x16	; 22
 352:	91 05       	cpc	r25, r1
 354:	21 f4       	brne	.+8      	; 0x35e <pinChange+0x2cc>
 356:	85 b3       	in	r24, 0x15	; 21
 358:	84 60       	ori	r24, 0x04	; 4
 35a:	85 bb       	out	0x15, r24	; 21
 35c:	08 95       	ret
 35e:	87 31       	cpi	r24, 0x17	; 23
 360:	91 05       	cpc	r25, r1
 362:	21 f4       	brne	.+8      	; 0x36c <pinChange+0x2da>
 364:	85 b3       	in	r24, 0x15	; 21
 366:	88 60       	ori	r24, 0x08	; 8
 368:	85 bb       	out	0x15, r24	; 21
 36a:	08 95       	ret
 36c:	88 31       	cpi	r24, 0x18	; 24
 36e:	91 05       	cpc	r25, r1
 370:	21 f4       	brne	.+8      	; 0x37a <pinChange+0x2e8>
 372:	85 b3       	in	r24, 0x15	; 21
 374:	80 61       	ori	r24, 0x10	; 16
 376:	85 bb       	out	0x15, r24	; 21
 378:	08 95       	ret
 37a:	89 31       	cpi	r24, 0x19	; 25
 37c:	91 05       	cpc	r25, r1
 37e:	21 f4       	brne	.+8      	; 0x388 <pinChange+0x2f6>
 380:	85 b3       	in	r24, 0x15	; 21
 382:	80 62       	ori	r24, 0x20	; 32
 384:	85 bb       	out	0x15, r24	; 21
 386:	08 95       	ret
 388:	8a 31       	cpi	r24, 0x1A	; 26
 38a:	91 05       	cpc	r25, r1
 38c:	21 f4       	brne	.+8      	; 0x396 <pinChange+0x304>
 38e:	85 b3       	in	r24, 0x15	; 21
 390:	80 64       	ori	r24, 0x40	; 64
 392:	85 bb       	out	0x15, r24	; 21
 394:	08 95       	ret
 396:	8b 31       	cpi	r24, 0x1B	; 27
 398:	91 05       	cpc	r25, r1
 39a:	21 f4       	brne	.+8      	; 0x3a4 <pinChange+0x312>
 39c:	85 b3       	in	r24, 0x15	; 21
 39e:	80 68       	ori	r24, 0x80	; 128
 3a0:	85 bb       	out	0x15, r24	; 21
 3a2:	08 95       	ret
 3a4:	8e 31       	cpi	r24, 0x1E	; 30
 3a6:	91 05       	cpc	r25, r1
 3a8:	21 f4       	brne	.+8      	; 0x3b2 <pinChange+0x320>
 3aa:	82 b3       	in	r24, 0x12	; 18
 3ac:	81 60       	ori	r24, 0x01	; 1
 3ae:	82 bb       	out	0x12, r24	; 18
 3b0:	08 95       	ret
 3b2:	8f 31       	cpi	r24, 0x1F	; 31
 3b4:	91 05       	cpc	r25, r1
 3b6:	21 f4       	brne	.+8      	; 0x3c0 <pinChange+0x32e>
 3b8:	82 b3       	in	r24, 0x12	; 18
 3ba:	82 60       	ori	r24, 0x02	; 2
 3bc:	82 bb       	out	0x12, r24	; 18
 3be:	08 95       	ret
 3c0:	80 32       	cpi	r24, 0x20	; 32
 3c2:	91 05       	cpc	r25, r1
 3c4:	21 f4       	brne	.+8      	; 0x3ce <pinChange+0x33c>
 3c6:	82 b3       	in	r24, 0x12	; 18
 3c8:	84 60       	ori	r24, 0x04	; 4
 3ca:	82 bb       	out	0x12, r24	; 18
 3cc:	08 95       	ret
 3ce:	81 32       	cpi	r24, 0x21	; 33
 3d0:	91 05       	cpc	r25, r1
 3d2:	21 f4       	brne	.+8      	; 0x3dc <pinChange+0x34a>
 3d4:	82 b3       	in	r24, 0x12	; 18
 3d6:	88 60       	ori	r24, 0x08	; 8
 3d8:	82 bb       	out	0x12, r24	; 18
 3da:	08 95       	ret
 3dc:	82 32       	cpi	r24, 0x22	; 34
 3de:	91 05       	cpc	r25, r1
 3e0:	21 f4       	brne	.+8      	; 0x3ea <pinChange+0x358>
 3e2:	82 b3       	in	r24, 0x12	; 18
 3e4:	80 61       	ori	r24, 0x10	; 16
 3e6:	82 bb       	out	0x12, r24	; 18
 3e8:	08 95       	ret
 3ea:	83 32       	cpi	r24, 0x23	; 35
 3ec:	91 05       	cpc	r25, r1
 3ee:	21 f4       	brne	.+8      	; 0x3f8 <pinChange+0x366>
 3f0:	82 b3       	in	r24, 0x12	; 18
 3f2:	80 62       	ori	r24, 0x20	; 32
 3f4:	82 bb       	out	0x12, r24	; 18
 3f6:	08 95       	ret
 3f8:	84 32       	cpi	r24, 0x24	; 36
 3fa:	91 05       	cpc	r25, r1
 3fc:	21 f4       	brne	.+8      	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 3fe:	82 b3       	in	r24, 0x12	; 18
 400:	80 64       	ori	r24, 0x40	; 64
 402:	82 bb       	out	0x12, r24	; 18
 404:	08 95       	ret
 406:	85 97       	sbiw	r24, 0x25	; 37
 408:	19 f4       	brne	.+6      	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
 40a:	82 b3       	in	r24, 0x12	; 18
 40c:	80 68       	ori	r24, 0x80	; 128
 40e:	82 bb       	out	0x12, r24	; 18
 410:	08 95       	ret

00000412 <Lcd4_Port>:
 412:	cf 93       	push	r28
 414:	c8 2f       	mov	r28, r24
 416:	80 ff       	sbrs	r24, 0
 418:	07 c0       	rjmp	.+14     	; 0x428 <Lcd4_Port+0x16>
 41a:	61 e0       	ldi	r22, 0x01	; 1
 41c:	70 e0       	ldi	r23, 0x00	; 0
 41e:	82 e2       	ldi	r24, 0x22	; 34
 420:	90 e0       	ldi	r25, 0x00	; 0
 422:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 426:	06 c0       	rjmp	.+12     	; 0x434 <Lcd4_Port+0x22>
 428:	60 e0       	ldi	r22, 0x00	; 0
 42a:	70 e0       	ldi	r23, 0x00	; 0
 42c:	82 e2       	ldi	r24, 0x22	; 34
 42e:	90 e0       	ldi	r25, 0x00	; 0
 430:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 434:	c1 ff       	sbrs	r28, 1
 436:	07 c0       	rjmp	.+14     	; 0x446 <Lcd4_Port+0x34>
 438:	61 e0       	ldi	r22, 0x01	; 1
 43a:	70 e0       	ldi	r23, 0x00	; 0
 43c:	83 e2       	ldi	r24, 0x23	; 35
 43e:	90 e0       	ldi	r25, 0x00	; 0
 440:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 444:	06 c0       	rjmp	.+12     	; 0x452 <Lcd4_Port+0x40>
 446:	60 e0       	ldi	r22, 0x00	; 0
 448:	70 e0       	ldi	r23, 0x00	; 0
 44a:	83 e2       	ldi	r24, 0x23	; 35
 44c:	90 e0       	ldi	r25, 0x00	; 0
 44e:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 452:	c2 ff       	sbrs	r28, 2
 454:	07 c0       	rjmp	.+14     	; 0x464 <Lcd4_Port+0x52>
 456:	61 e0       	ldi	r22, 0x01	; 1
 458:	70 e0       	ldi	r23, 0x00	; 0
 45a:	84 e2       	ldi	r24, 0x24	; 36
 45c:	90 e0       	ldi	r25, 0x00	; 0
 45e:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 462:	06 c0       	rjmp	.+12     	; 0x470 <Lcd4_Port+0x5e>
 464:	60 e0       	ldi	r22, 0x00	; 0
 466:	70 e0       	ldi	r23, 0x00	; 0
 468:	84 e2       	ldi	r24, 0x24	; 36
 46a:	90 e0       	ldi	r25, 0x00	; 0
 46c:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 470:	c3 ff       	sbrs	r28, 3
 472:	07 c0       	rjmp	.+14     	; 0x482 <Lcd4_Port+0x70>
 474:	61 e0       	ldi	r22, 0x01	; 1
 476:	70 e0       	ldi	r23, 0x00	; 0
 478:	85 e2       	ldi	r24, 0x25	; 37
 47a:	90 e0       	ldi	r25, 0x00	; 0
 47c:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 480:	06 c0       	rjmp	.+12     	; 0x48e <Lcd4_Port+0x7c>
 482:	60 e0       	ldi	r22, 0x00	; 0
 484:	70 e0       	ldi	r23, 0x00	; 0
 486:	85 e2       	ldi	r24, 0x25	; 37
 488:	90 e0       	ldi	r25, 0x00	; 0
 48a:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 48e:	cf 91       	pop	r28
 490:	08 95       	ret

00000492 <Lcd4_Cmd>:
 492:	cf 93       	push	r28
 494:	c8 2f       	mov	r28, r24
 496:	60 e0       	ldi	r22, 0x00	; 0
 498:	70 e0       	ldi	r23, 0x00	; 0
 49a:	8a e1       	ldi	r24, 0x1A	; 26
 49c:	90 e0       	ldi	r25, 0x00	; 0
 49e:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 4a2:	8c 2f       	mov	r24, r28
 4a4:	0e 94 09 02 	call	0x412	; 0x412 <Lcd4_Port>
 4a8:	61 e0       	ldi	r22, 0x01	; 1
 4aa:	70 e0       	ldi	r23, 0x00	; 0
 4ac:	8b e1       	ldi	r24, 0x1B	; 27
 4ae:	90 e0       	ldi	r25, 0x00	; 0
 4b0:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 4b4:	89 ef       	ldi	r24, 0xF9	; 249
 4b6:	90 e0       	ldi	r25, 0x00	; 0
 4b8:	01 97       	sbiw	r24, 0x01	; 1
 4ba:	f1 f7       	brne	.-4      	; 0x4b8 <Lcd4_Cmd+0x26>
 4bc:	00 c0       	rjmp	.+0      	; 0x4be <Lcd4_Cmd+0x2c>
 4be:	00 00       	nop
 4c0:	60 e0       	ldi	r22, 0x00	; 0
 4c2:	70 e0       	ldi	r23, 0x00	; 0
 4c4:	8b e1       	ldi	r24, 0x1B	; 27
 4c6:	90 e0       	ldi	r25, 0x00	; 0
 4c8:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 4cc:	89 ef       	ldi	r24, 0xF9	; 249
 4ce:	90 e0       	ldi	r25, 0x00	; 0
 4d0:	01 97       	sbiw	r24, 0x01	; 1
 4d2:	f1 f7       	brne	.-4      	; 0x4d0 <Lcd4_Cmd+0x3e>
 4d4:	00 c0       	rjmp	.+0      	; 0x4d6 <Lcd4_Cmd+0x44>
 4d6:	00 00       	nop
 4d8:	cf 91       	pop	r28
 4da:	08 95       	ret

000004dc <Lcd4_Set_Cursor>:
 4dc:	cf 93       	push	r28
 4de:	81 30       	cpi	r24, 0x01	; 1
 4e0:	61 f4       	brne	.+24     	; 0x4fa <Lcd4_Set_Cursor+0x1e>
 4e2:	80 e8       	ldi	r24, 0x80	; 128
 4e4:	86 0f       	add	r24, r22
 4e6:	c6 2f       	mov	r28, r22
 4e8:	cf 70       	andi	r28, 0x0F	; 15
 4ea:	82 95       	swap	r24
 4ec:	8f 70       	andi	r24, 0x0F	; 15
 4ee:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Cmd>
 4f2:	8c 2f       	mov	r24, r28
 4f4:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Cmd>
 4f8:	0d c0       	rjmp	.+26     	; 0x514 <Lcd4_Set_Cursor+0x38>
 4fa:	82 30       	cpi	r24, 0x02	; 2
 4fc:	59 f4       	brne	.+22     	; 0x514 <Lcd4_Set_Cursor+0x38>
 4fe:	80 ec       	ldi	r24, 0xC0	; 192
 500:	86 0f       	add	r24, r22
 502:	c6 2f       	mov	r28, r22
 504:	cf 70       	andi	r28, 0x0F	; 15
 506:	82 95       	swap	r24
 508:	8f 70       	andi	r24, 0x0F	; 15
 50a:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Cmd>
 50e:	8c 2f       	mov	r24, r28
 510:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Cmd>
 514:	cf 91       	pop	r28
 516:	08 95       	ret

00000518 <Lcd4_Init>:
 518:	80 e0       	ldi	r24, 0x00	; 0
 51a:	0e 94 09 02 	call	0x412	; 0x412 <Lcd4_Port>
 51e:	87 e8       	ldi	r24, 0x87	; 135
 520:	93 e1       	ldi	r25, 0x13	; 19
 522:	01 97       	sbiw	r24, 0x01	; 1
 524:	f1 f7       	brne	.-4      	; 0x522 <Lcd4_Init+0xa>
 526:	00 c0       	rjmp	.+0      	; 0x528 <Lcd4_Init+0x10>
 528:	00 00       	nop
 52a:	83 e0       	ldi	r24, 0x03	; 3
 52c:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Cmd>
 530:	81 ee       	ldi	r24, 0xE1	; 225
 532:	94 e0       	ldi	r25, 0x04	; 4
 534:	01 97       	sbiw	r24, 0x01	; 1
 536:	f1 f7       	brne	.-4      	; 0x534 <Lcd4_Init+0x1c>
 538:	00 c0       	rjmp	.+0      	; 0x53a <Lcd4_Init+0x22>
 53a:	00 00       	nop
 53c:	83 e0       	ldi	r24, 0x03	; 3
 53e:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Cmd>
 542:	8d eb       	ldi	r24, 0xBD	; 189
 544:	9a e0       	ldi	r25, 0x0A	; 10
 546:	01 97       	sbiw	r24, 0x01	; 1
 548:	f1 f7       	brne	.-4      	; 0x546 <Lcd4_Init+0x2e>
 54a:	00 c0       	rjmp	.+0      	; 0x54c <Lcd4_Init+0x34>
 54c:	00 00       	nop
 54e:	83 e0       	ldi	r24, 0x03	; 3
 550:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Cmd>
 554:	82 e0       	ldi	r24, 0x02	; 2
 556:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Cmd>
 55a:	82 e0       	ldi	r24, 0x02	; 2
 55c:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Cmd>
 560:	88 e0       	ldi	r24, 0x08	; 8
 562:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Cmd>
 566:	80 e0       	ldi	r24, 0x00	; 0
 568:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Cmd>
 56c:	8c e0       	ldi	r24, 0x0C	; 12
 56e:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Cmd>
 572:	80 e0       	ldi	r24, 0x00	; 0
 574:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Cmd>
 578:	86 e0       	ldi	r24, 0x06	; 6
 57a:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Cmd>
 57e:	08 95       	ret

00000580 <Lcd4_Write_Char>:
 580:	cf 93       	push	r28
 582:	df 93       	push	r29
 584:	d8 2f       	mov	r29, r24
 586:	df 70       	andi	r29, 0x0F	; 15
 588:	c8 2f       	mov	r28, r24
 58a:	c0 7f       	andi	r28, 0xF0	; 240
 58c:	61 e0       	ldi	r22, 0x01	; 1
 58e:	70 e0       	ldi	r23, 0x00	; 0
 590:	8a e1       	ldi	r24, 0x1A	; 26
 592:	90 e0       	ldi	r25, 0x00	; 0
 594:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 598:	8c 2f       	mov	r24, r28
 59a:	82 95       	swap	r24
 59c:	8f 70       	andi	r24, 0x0F	; 15
 59e:	0e 94 09 02 	call	0x412	; 0x412 <Lcd4_Port>
 5a2:	61 e0       	ldi	r22, 0x01	; 1
 5a4:	70 e0       	ldi	r23, 0x00	; 0
 5a6:	8b e1       	ldi	r24, 0x1B	; 27
 5a8:	90 e0       	ldi	r25, 0x00	; 0
 5aa:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 5ae:	89 ef       	ldi	r24, 0xF9	; 249
 5b0:	90 e0       	ldi	r25, 0x00	; 0
 5b2:	01 97       	sbiw	r24, 0x01	; 1
 5b4:	f1 f7       	brne	.-4      	; 0x5b2 <Lcd4_Write_Char+0x32>
 5b6:	00 c0       	rjmp	.+0      	; 0x5b8 <Lcd4_Write_Char+0x38>
 5b8:	00 00       	nop
 5ba:	60 e0       	ldi	r22, 0x00	; 0
 5bc:	70 e0       	ldi	r23, 0x00	; 0
 5be:	8b e1       	ldi	r24, 0x1B	; 27
 5c0:	90 e0       	ldi	r25, 0x00	; 0
 5c2:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 5c6:	89 ef       	ldi	r24, 0xF9	; 249
 5c8:	90 e0       	ldi	r25, 0x00	; 0
 5ca:	01 97       	sbiw	r24, 0x01	; 1
 5cc:	f1 f7       	brne	.-4      	; 0x5ca <Lcd4_Write_Char+0x4a>
 5ce:	00 c0       	rjmp	.+0      	; 0x5d0 <Lcd4_Write_Char+0x50>
 5d0:	00 00       	nop
 5d2:	8d 2f       	mov	r24, r29
 5d4:	0e 94 09 02 	call	0x412	; 0x412 <Lcd4_Port>
 5d8:	61 e0       	ldi	r22, 0x01	; 1
 5da:	70 e0       	ldi	r23, 0x00	; 0
 5dc:	8b e1       	ldi	r24, 0x1B	; 27
 5de:	90 e0       	ldi	r25, 0x00	; 0
 5e0:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 5e4:	89 ef       	ldi	r24, 0xF9	; 249
 5e6:	90 e0       	ldi	r25, 0x00	; 0
 5e8:	01 97       	sbiw	r24, 0x01	; 1
 5ea:	f1 f7       	brne	.-4      	; 0x5e8 <Lcd4_Write_Char+0x68>
 5ec:	00 c0       	rjmp	.+0      	; 0x5ee <Lcd4_Write_Char+0x6e>
 5ee:	00 00       	nop
 5f0:	60 e0       	ldi	r22, 0x00	; 0
 5f2:	70 e0       	ldi	r23, 0x00	; 0
 5f4:	8b e1       	ldi	r24, 0x1B	; 27
 5f6:	90 e0       	ldi	r25, 0x00	; 0
 5f8:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 5fc:	89 ef       	ldi	r24, 0xF9	; 249
 5fe:	90 e0       	ldi	r25, 0x00	; 0
 600:	01 97       	sbiw	r24, 0x01	; 1
 602:	f1 f7       	brne	.-4      	; 0x600 <Lcd4_Write_Char+0x80>
 604:	00 c0       	rjmp	.+0      	; 0x606 <Lcd4_Write_Char+0x86>
 606:	00 00       	nop
 608:	df 91       	pop	r29
 60a:	cf 91       	pop	r28
 60c:	08 95       	ret

0000060e <Lcd4_Write_String>:
 60e:	0f 93       	push	r16
 610:	1f 93       	push	r17
 612:	cf 93       	push	r28
 614:	df 93       	push	r29
 616:	8c 01       	movw	r16, r24
 618:	c0 e0       	ldi	r28, 0x00	; 0
 61a:	d0 e0       	ldi	r29, 0x00	; 0
 61c:	03 c0       	rjmp	.+6      	; 0x624 <Lcd4_Write_String+0x16>
 61e:	0e 94 c0 02 	call	0x580	; 0x580 <Lcd4_Write_Char>
 622:	21 96       	adiw	r28, 0x01	; 1
 624:	f8 01       	movw	r30, r16
 626:	ec 0f       	add	r30, r28
 628:	fd 1f       	adc	r31, r29
 62a:	80 81       	ld	r24, Z
 62c:	81 11       	cpse	r24, r1
 62e:	f7 cf       	rjmp	.-18     	; 0x61e <Lcd4_Write_String+0x10>
 630:	df 91       	pop	r29
 632:	cf 91       	pop	r28
 634:	1f 91       	pop	r17
 636:	0f 91       	pop	r16
 638:	08 95       	ret

0000063a <__vector_9>:
#include "lcd.h"

volatile int overflowCount;
volatile int timeElapsed = 0;

ISR(TIMER1_OVF_vect) {
 63a:	1f 92       	push	r1
 63c:	0f 92       	push	r0
 63e:	0f b6       	in	r0, 0x3f	; 63
 640:	0f 92       	push	r0
 642:	11 24       	eor	r1, r1
 644:	8f 93       	push	r24
 646:	9f 93       	push	r25
	overflowCount++;
 648:	80 91 88 00 	lds	r24, 0x0088	; 0x800088 <overflowCount>
 64c:	90 91 89 00 	lds	r25, 0x0089	; 0x800089 <overflowCount+0x1>
 650:	01 96       	adiw	r24, 0x01	; 1
 652:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <overflowCount+0x1>
 656:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <overflowCount>
	if (overflowCount >= 16) {
 65a:	80 91 88 00 	lds	r24, 0x0088	; 0x800088 <overflowCount>
 65e:	90 91 89 00 	lds	r25, 0x0089	; 0x800089 <overflowCount+0x1>
 662:	40 97       	sbiw	r24, 0x10	; 16
 664:	6c f0       	brlt	.+26     	; 0x680 <__vector_9+0x46>
		timeElapsed += 1;
 666:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__data_end>
 66a:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__data_end+0x1>
 66e:	01 96       	adiw	r24, 0x01	; 1
 670:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__data_end+0x1>
 674:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__data_end>
		overflowCount = 0;
 678:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <overflowCount+0x1>
 67c:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <overflowCount>
	}
}
 680:	9f 91       	pop	r25
 682:	8f 91       	pop	r24
 684:	0f 90       	pop	r0
 686:	0f be       	out	0x3f, r0	; 63
 688:	0f 90       	pop	r0
 68a:	1f 90       	pop	r1
 68c:	18 95       	reti

0000068e <USART_init>:

void USART_init(void) {
	UCSRA = 0b00000010; // double speed (/8)
 68e:	82 e0       	ldi	r24, 0x02	; 2
 690:	8b b9       	out	0x0b, r24	; 11
	UCSRB = 0b00001000; // only tx
 692:	88 e0       	ldi	r24, 0x08	; 8
 694:	8a b9       	out	0x0a, r24	; 10
	UCSRC = 0b10000110; // async, no parity, 1 stop, 8 data
 696:	86 e8       	ldi	r24, 0x86	; 134
 698:	80 bd       	out	0x20, r24	; 32
	
	UBRRH = 0;
 69a:	10 bc       	out	0x20, r1	; 32
	UBRRL = 12; // baud rate 9600 bps
 69c:	8c e0       	ldi	r24, 0x0C	; 12
 69e:	89 b9       	out	0x09, r24	; 9
 6a0:	08 95       	ret

000006a2 <read_adc>:
double read_adc()
{
	int v_adch=0, v_adcl=0, temp;
	double step_size = 0.0048828125, value;
	
	v_adcl = (int) ADCL;
 6a2:	84 b1       	in	r24, 0x04	; 4
 6a4:	90 e0       	ldi	r25, 0x00	; 0
	v_adch = (int) ADCH;
 6a6:	65 b1       	in	r22, 0x05	; 5
 6a8:	70 e0       	ldi	r23, 0x00	; 0
	
	PORTB = ADCH;
 6aa:	25 b1       	in	r18, 0x05	; 5
 6ac:	28 bb       	out	0x18, r18	; 24
	
	value = v_adch*4 + v_adcl/64;
 6ae:	66 0f       	add	r22, r22
 6b0:	77 1f       	adc	r23, r23
 6b2:	66 0f       	add	r22, r22
 6b4:	77 1f       	adc	r23, r23
 6b6:	08 2e       	mov	r0, r24
 6b8:	89 2f       	mov	r24, r25
 6ba:	00 0c       	add	r0, r0
 6bc:	88 1f       	adc	r24, r24
 6be:	99 0b       	sbc	r25, r25
 6c0:	00 0c       	add	r0, r0
 6c2:	88 1f       	adc	r24, r24
 6c4:	99 1f       	adc	r25, r25
 6c6:	68 0f       	add	r22, r24
 6c8:	79 1f       	adc	r23, r25
 6ca:	07 2e       	mov	r0, r23
 6cc:	00 0c       	add	r0, r0
 6ce:	88 0b       	sbc	r24, r24
 6d0:	99 0b       	sbc	r25, r25
 6d2:	0e 94 8d 05 	call	0xb1a	; 0xb1a <__floatsisf>
	value = value*step_size;
 6d6:	20 e0       	ldi	r18, 0x00	; 0
 6d8:	30 e0       	ldi	r19, 0x00	; 0
 6da:	40 ea       	ldi	r20, 0xA0	; 160
 6dc:	5b e3       	ldi	r21, 0x3B	; 59
 6de:	0e 94 42 06 	call	0xc84	; 0xc84 <__mulsf3>
	
	temp = (int)(value * 100 + .5);
 6e2:	20 e0       	ldi	r18, 0x00	; 0
 6e4:	30 e0       	ldi	r19, 0x00	; 0
 6e6:	48 ec       	ldi	r20, 0xC8	; 200
 6e8:	52 e4       	ldi	r21, 0x42	; 66
 6ea:	0e 94 42 06 	call	0xc84	; 0xc84 <__mulsf3>
 6ee:	20 e0       	ldi	r18, 0x00	; 0
 6f0:	30 e0       	ldi	r19, 0x00	; 0
 6f2:	40 e0       	ldi	r20, 0x00	; 0
 6f4:	5f e3       	ldi	r21, 0x3F	; 63
 6f6:	0e 94 72 04 	call	0x8e4	; 0x8e4 <__addsf3>
 6fa:	0e 94 55 05 	call	0xaaa	; 0xaaa <__fixsfsi>
	value = (double) temp/100;
 6fe:	07 2e       	mov	r0, r23
 700:	00 0c       	add	r0, r0
 702:	88 0b       	sbc	r24, r24
 704:	99 0b       	sbc	r25, r25
 706:	0e 94 8d 05 	call	0xb1a	; 0xb1a <__floatsisf>
 70a:	20 e0       	ldi	r18, 0x00	; 0
 70c:	30 e0       	ldi	r19, 0x00	; 0
 70e:	48 ec       	ldi	r20, 0xC8	; 200
 710:	52 e4       	ldi	r21, 0x42	; 66
 712:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <__divsf3>
	
	return value;
}
 716:	08 95       	ret

00000718 <UART_send>:

void UART_send(unsigned char data) {
	while ((UCSRA & (1 << UDRE)) == 0x00);
 718:	5d 9b       	sbis	0x0b, 5	; 11
 71a:	fe cf       	rjmp	.-4      	; 0x718 <UART_send>
	UDR = data;
 71c:	8c b9       	out	0x0c, r24	; 12
 71e:	08 95       	ret

00000720 <main>:
}

int main(void)
{
 720:	cf 93       	push	r28
 722:	df 93       	push	r29
 724:	cd b7       	in	r28, 0x3d	; 61
 726:	de b7       	in	r29, 0x3e	; 62
 728:	2a 97       	sbiw	r28, 0x0a	; 10
 72a:	0f b6       	in	r0, 0x3f	; 63
 72c:	f8 94       	cli
 72e:	de bf       	out	0x3e, r29	; 62
 730:	0f be       	out	0x3f, r0	; 63
 732:	cd bf       	out	0x3d, r28	; 61
	float voltage;
	int result, i;
	int fingerInSight = 0;
	int totalFingers = 0;
	timeElapsed = 0;
 734:	10 92 87 00 	sts	0x0087, r1	; 0x800087 <__data_end+0x1>
 738:	10 92 86 00 	sts	0x0086, r1	; 0x800086 <__data_end>
	char val[5];
	int full,floating;
	overflowCount = 0;
 73c:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <overflowCount+0x1>
 740:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <overflowCount>
	char numberArr[5];
	DDRB = 0xFF;
 744:	8f ef       	ldi	r24, 0xFF	; 255
 746:	87 bb       	out	0x17, r24	; 23
	DDRD = 0xFF;
 748:	81 bb       	out	0x11, r24	; 17
	DDRC = 0xFF;
 74a:	84 bb       	out	0x14, r24	; 20
	// configure ADC
	ADMUX = 0b01100111; // 3.0, Right, ADC7
 74c:	87 e6       	ldi	r24, 0x67	; 103
 74e:	87 b9       	out	0x07, r24	; 7
	ADCSRA = 0b10000110; // 64
 750:	86 e8       	ldi	r24, 0x86	; 134
 752:	86 b9       	out	0x06, r24	; 6
	Lcd4_Init();
 754:	0e 94 8c 02 	call	0x518	; 0x518 <Lcd4_Init>
	// configure timer
	TCCR1A = 0b00000000; // normal mode
 758:	1f bc       	out	0x2f, r1	; 47
	TCCR1B = 0b00000001; // no prescaler
 75a:	81 e0       	ldi	r24, 0x01	; 1
 75c:	8e bd       	out	0x2e, r24	; 46
	TIMSK = 0b00000100; // timer 1
 75e:	84 e0       	ldi	r24, 0x04	; 4
 760:	89 bf       	out	0x39, r24	; 57
	sei();
 762:	78 94       	sei
	// set comm
	USART_init();
 764:	0e 94 47 03 	call	0x68e	; 0x68e <USART_init>
int main(void)
{
	float voltage;
	int result, i;
	int fingerInSight = 0;
	int totalFingers = 0;
 768:	e1 2c       	mov	r14, r1
 76a:	f1 2c       	mov	r15, r1

int main(void)
{
	float voltage;
	int result, i;
	int fingerInSight = 0;
 76c:	00 e0       	ldi	r16, 0x00	; 0
 76e:	10 e0       	ldi	r17, 0x00	; 0
	USART_init();
	
	while(1)
	{
		// start conversion, loop until end
		ADCSRA |= (1 << ADSC);
 770:	86 b1       	in	r24, 0x06	; 6
 772:	80 64       	ori	r24, 0x40	; 64
 774:	86 b9       	out	0x06, r24	; 6
		while (ADCSRA & (1 << ADSC)) {;}
 776:	36 99       	sbic	0x06, 6	; 6
 778:	fe cf       	rjmp	.-4      	; 0x776 <main+0x56>
		
		// voltage calculation from ADC output
		//result = ADC;
		//voltage = (result * 5.0) / 1024;
		voltage = read_adc();
 77a:	0e 94 51 03 	call	0x6a2	; 0x6a2 <read_adc>
 77e:	4b 01       	movw	r8, r22
 780:	5c 01       	movw	r10, r24
		
		// object detection
		if (!fingerInSight && voltage < 2) {
 782:	01 15       	cp	r16, r1
 784:	11 05       	cpc	r17, r1
 786:	89 f4       	brne	.+34     	; 0x7aa <main+0x8a>
 788:	20 e0       	ldi	r18, 0x00	; 0
 78a:	30 e0       	ldi	r19, 0x00	; 0
 78c:	40 e0       	ldi	r20, 0x00	; 0
 78e:	50 e4       	ldi	r21, 0x40	; 64
 790:	0e 94 de 04 	call	0x9bc	; 0x9bc <__cmpsf2>
 794:	88 23       	and	r24, r24
 796:	4c f4       	brge	.+18     	; 0x7aa <main+0x8a>
			totalFingers += 1;
 798:	8f ef       	ldi	r24, 0xFF	; 255
 79a:	e8 1a       	sub	r14, r24
 79c:	f8 0a       	sbc	r15, r24
			timeElapsed = 0;
 79e:	10 92 87 00 	sts	0x0087, r1	; 0x800087 <__data_end+0x1>
 7a2:	10 92 86 00 	sts	0x0086, r1	; 0x800086 <__data_end>
			fingerInSight = 1;
 7a6:	01 e0       	ldi	r16, 0x01	; 1
 7a8:	10 e0       	ldi	r17, 0x00	; 0
		}
		if (fingerInSight && voltage > 2){
 7aa:	01 15       	cp	r16, r1
 7ac:	11 05       	cpc	r17, r1
 7ae:	81 f0       	breq	.+32     	; 0x7d0 <main+0xb0>
 7b0:	20 e0       	ldi	r18, 0x00	; 0
 7b2:	30 e0       	ldi	r19, 0x00	; 0
 7b4:	40 e0       	ldi	r20, 0x00	; 0
 7b6:	50 e4       	ldi	r21, 0x40	; 64
 7b8:	c5 01       	movw	r24, r10
 7ba:	b4 01       	movw	r22, r8
 7bc:	0e 94 3d 06 	call	0xc7a	; 0xc7a <__gesf2>
 7c0:	18 16       	cp	r1, r24
 7c2:	34 f4       	brge	.+12     	; 0x7d0 <main+0xb0>
			timeElapsed = 0;
 7c4:	10 92 87 00 	sts	0x0087, r1	; 0x800087 <__data_end+0x1>
 7c8:	10 92 86 00 	sts	0x0086, r1	; 0x800086 <__data_end>
			fingerInSight = 0;
 7cc:	00 e0       	ldi	r16, 0x00	; 0
 7ce:	10 e0       	ldi	r17, 0x00	; 0
		}
		
		full = (int)voltage;
 7d0:	c5 01       	movw	r24, r10
 7d2:	b4 01       	movw	r22, r8
 7d4:	0e 94 55 05 	call	0xaaa	; 0xaaa <__fixsfsi>
 7d8:	2b 01       	movw	r4, r22
 7da:	3c 01       	movw	r6, r24
		voltage = (voltage-full)*100;
 7dc:	07 2e       	mov	r0, r23
 7de:	00 0c       	add	r0, r0
 7e0:	88 0b       	sbc	r24, r24
 7e2:	99 0b       	sbc	r25, r25
 7e4:	0e 94 8d 05 	call	0xb1a	; 0xb1a <__floatsisf>
 7e8:	9b 01       	movw	r18, r22
 7ea:	ac 01       	movw	r20, r24
 7ec:	c5 01       	movw	r24, r10
 7ee:	b4 01       	movw	r22, r8
 7f0:	0e 94 71 04 	call	0x8e2	; 0x8e2 <__subsf3>
 7f4:	20 e0       	ldi	r18, 0x00	; 0
 7f6:	30 e0       	ldi	r19, 0x00	; 0
 7f8:	48 ec       	ldi	r20, 0xC8	; 200
 7fa:	52 e4       	ldi	r21, 0x42	; 66
 7fc:	0e 94 42 06 	call	0xc84	; 0xc84 <__mulsf3>
		floating = (int)voltage;
 800:	0e 94 55 05 	call	0xaaa	; 0xaaa <__fixsfsi>
 804:	4b 01       	movw	r8, r22
 806:	5c 01       	movw	r10, r24
		
		Lcd4_Set_Cursor(2, 1);
 808:	61 e0       	ldi	r22, 0x01	; 1
 80a:	82 e0       	ldi	r24, 0x02	; 2
 80c:	0e 94 6e 02 	call	0x4dc	; 0x4dc <Lcd4_Set_Cursor>
		Lcd4_Write_String("Voltage: ");
 810:	80 e6       	ldi	r24, 0x60	; 96
 812:	90 e0       	ldi	r25, 0x00	; 0
 814:	0e 94 07 03 	call	0x60e	; 0x60e <Lcd4_Write_String>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
 818:	4a e0       	ldi	r20, 0x0A	; 10
 81a:	be 01       	movw	r22, r28
 81c:	6f 5f       	subi	r22, 0xFF	; 255
 81e:	7f 4f       	sbci	r23, 0xFF	; 255
 820:	c2 01       	movw	r24, r4
 822:	0e 94 af 06 	call	0xd5e	; 0xd5e <__itoa_ncheck>
		
		itoa(full, val, 10);
		Lcd4_Write_String(val);
 826:	ce 01       	movw	r24, r28
 828:	01 96       	adiw	r24, 0x01	; 1
 82a:	0e 94 07 03 	call	0x60e	; 0x60e <Lcd4_Write_String>
		
		Lcd4_Write_String(".");
 82e:	8a e6       	ldi	r24, 0x6A	; 106
 830:	90 e0       	ldi	r25, 0x00	; 0
 832:	0e 94 07 03 	call	0x60e	; 0x60e <Lcd4_Write_String>
 836:	4a e0       	ldi	r20, 0x0A	; 10
 838:	be 01       	movw	r22, r28
 83a:	6f 5f       	subi	r22, 0xFF	; 255
 83c:	7f 4f       	sbci	r23, 0xFF	; 255
 83e:	c4 01       	movw	r24, r8
 840:	0e 94 af 06 	call	0xd5e	; 0xd5e <__itoa_ncheck>
		
		itoa(floating, val, 10);
		Lcd4_Write_String(val);
 844:	ce 01       	movw	r24, r28
 846:	01 96       	adiw	r24, 0x01	; 1
 848:	0e 94 07 03 	call	0x60e	; 0x60e <Lcd4_Write_String>
		// display in LCD
		Lcd4_Set_Cursor(1, 1);
 84c:	61 e0       	ldi	r22, 0x01	; 1
 84e:	81 e0       	ldi	r24, 0x01	; 1
 850:	0e 94 6e 02 	call	0x4dc	; 0x4dc <Lcd4_Set_Cursor>
		if (timeElapsed > 6 && fingerInSight) {
 854:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__data_end>
 858:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__data_end+0x1>
 85c:	07 97       	sbiw	r24, 0x07	; 7
 85e:	54 f0       	brlt	.+20     	; 0x874 <__stack+0x15>
 860:	01 15       	cp	r16, r1
 862:	11 05       	cpc	r17, r1
 864:	39 f0       	breq	.+14     	; 0x874 <__stack+0x15>
			// halt
			Lcd4_Write_String("    RESET    ");
 866:	8c e6       	ldi	r24, 0x6C	; 108
 868:	90 e0       	ldi	r25, 0x00	; 0
 86a:	0e 94 07 03 	call	0x60e	; 0x60e <Lcd4_Write_String>
			totalFingers = 0;
 86e:	e1 2c       	mov	r14, r1
 870:	f1 2c       	mov	r15, r1
 872:	7e cf       	rjmp	.-260    	; 0x770 <main+0x50>
		}
		else if (timeElapsed > 6 && !fingerInSight && totalFingers > 0) {
 874:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__data_end>
 878:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__data_end+0x1>
 87c:	07 97       	sbiw	r24, 0x07	; 7
 87e:	0c f1       	brlt	.+66     	; 0x8c2 <__stack+0x63>
 880:	01 15       	cp	r16, r1
 882:	11 05       	cpc	r17, r1
 884:	f1 f4       	brne	.+60     	; 0x8c2 <__stack+0x63>
 886:	1e 14       	cp	r1, r14
 888:	1f 04       	cpc	r1, r15
 88a:	dc f4       	brge	.+54     	; 0x8c2 <__stack+0x63>
 88c:	4a e0       	ldi	r20, 0x0A	; 10
 88e:	be 01       	movw	r22, r28
 890:	6a 5f       	subi	r22, 0xFA	; 250
 892:	7f 4f       	sbci	r23, 0xFF	; 255
 894:	c7 01       	movw	r24, r14
 896:	0e 94 af 06 	call	0xd5e	; 0xd5e <__itoa_ncheck>
			// final result to terminal
			itoa(totalFingers, numberArr, 10);
			for (i=0; numberArr[i] != '\0'; i++)
 89a:	e1 2c       	mov	r14, r1
 89c:	f1 2c       	mov	r15, r1
 89e:	05 c0       	rjmp	.+10     	; 0x8aa <__stack+0x4b>
				UART_send(numberArr[i]);
 8a0:	0e 94 8c 03 	call	0x718	; 0x718 <UART_send>
			totalFingers = 0;
		}
		else if (timeElapsed > 6 && !fingerInSight && totalFingers > 0) {
			// final result to terminal
			itoa(totalFingers, numberArr, 10);
			for (i=0; numberArr[i] != '\0'; i++)
 8a4:	8f ef       	ldi	r24, 0xFF	; 255
 8a6:	e8 1a       	sub	r14, r24
 8a8:	f8 0a       	sbc	r15, r24
 8aa:	e6 e0       	ldi	r30, 0x06	; 6
 8ac:	f0 e0       	ldi	r31, 0x00	; 0
 8ae:	ec 0f       	add	r30, r28
 8b0:	fd 1f       	adc	r31, r29
 8b2:	ee 0d       	add	r30, r14
 8b4:	ff 1d       	adc	r31, r15
 8b6:	80 81       	ld	r24, Z
 8b8:	81 11       	cpse	r24, r1
 8ba:	f2 cf       	rjmp	.-28     	; 0x8a0 <__stack+0x41>
				UART_send(numberArr[i]);
			totalFingers = 0;
 8bc:	e1 2c       	mov	r14, r1
 8be:	f1 2c       	mov	r15, r1
 8c0:	57 cf       	rjmp	.-338    	; 0x770 <main+0x50>
 8c2:	4a e0       	ldi	r20, 0x0A	; 10
 8c4:	be 01       	movw	r22, r28
 8c6:	6a 5f       	subi	r22, 0xFA	; 250
 8c8:	7f 4f       	sbci	r23, 0xFF	; 255
 8ca:	c7 01       	movw	r24, r14
 8cc:	0e 94 af 06 	call	0xd5e	; 0xd5e <__itoa_ncheck>
		}
		else {
			itoa(totalFingers, numberArr, 10);
			Lcd4_Write_String("  fingers: ");
 8d0:	8a e7       	ldi	r24, 0x7A	; 122
 8d2:	90 e0       	ldi	r25, 0x00	; 0
 8d4:	0e 94 07 03 	call	0x60e	; 0x60e <Lcd4_Write_String>
			Lcd4_Write_String(numberArr);
 8d8:	ce 01       	movw	r24, r28
 8da:	06 96       	adiw	r24, 0x06	; 6
 8dc:	0e 94 07 03 	call	0x60e	; 0x60e <Lcd4_Write_String>
 8e0:	47 cf       	rjmp	.-370    	; 0x770 <main+0x50>

000008e2 <__subsf3>:
 8e2:	50 58       	subi	r21, 0x80	; 128

000008e4 <__addsf3>:
 8e4:	bb 27       	eor	r27, r27
 8e6:	aa 27       	eor	r26, r26
 8e8:	0e 94 89 04 	call	0x912	; 0x912 <__addsf3x>
 8ec:	0c 94 03 06 	jmp	0xc06	; 0xc06 <__fp_round>
 8f0:	0e 94 f5 05 	call	0xbea	; 0xbea <__fp_pscA>
 8f4:	38 f0       	brcs	.+14     	; 0x904 <__addsf3+0x20>
 8f6:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <__fp_pscB>
 8fa:	20 f0       	brcs	.+8      	; 0x904 <__addsf3+0x20>
 8fc:	39 f4       	brne	.+14     	; 0x90c <__addsf3+0x28>
 8fe:	9f 3f       	cpi	r25, 0xFF	; 255
 900:	19 f4       	brne	.+6      	; 0x908 <__addsf3+0x24>
 902:	26 f4       	brtc	.+8      	; 0x90c <__addsf3+0x28>
 904:	0c 94 f2 05 	jmp	0xbe4	; 0xbe4 <__fp_nan>
 908:	0e f4       	brtc	.+2      	; 0x90c <__addsf3+0x28>
 90a:	e0 95       	com	r30
 90c:	e7 fb       	bst	r30, 7
 90e:	0c 94 ec 05 	jmp	0xbd8	; 0xbd8 <__fp_inf>

00000912 <__addsf3x>:
 912:	e9 2f       	mov	r30, r25
 914:	0e 94 14 06 	call	0xc28	; 0xc28 <__fp_split3>
 918:	58 f3       	brcs	.-42     	; 0x8f0 <__addsf3+0xc>
 91a:	ba 17       	cp	r27, r26
 91c:	62 07       	cpc	r22, r18
 91e:	73 07       	cpc	r23, r19
 920:	84 07       	cpc	r24, r20
 922:	95 07       	cpc	r25, r21
 924:	20 f0       	brcs	.+8      	; 0x92e <__addsf3x+0x1c>
 926:	79 f4       	brne	.+30     	; 0x946 <__addsf3x+0x34>
 928:	a6 f5       	brtc	.+104    	; 0x992 <__addsf3x+0x80>
 92a:	0c 94 36 06 	jmp	0xc6c	; 0xc6c <__fp_zero>
 92e:	0e f4       	brtc	.+2      	; 0x932 <__addsf3x+0x20>
 930:	e0 95       	com	r30
 932:	0b 2e       	mov	r0, r27
 934:	ba 2f       	mov	r27, r26
 936:	a0 2d       	mov	r26, r0
 938:	0b 01       	movw	r0, r22
 93a:	b9 01       	movw	r22, r18
 93c:	90 01       	movw	r18, r0
 93e:	0c 01       	movw	r0, r24
 940:	ca 01       	movw	r24, r20
 942:	a0 01       	movw	r20, r0
 944:	11 24       	eor	r1, r1
 946:	ff 27       	eor	r31, r31
 948:	59 1b       	sub	r21, r25
 94a:	99 f0       	breq	.+38     	; 0x972 <__addsf3x+0x60>
 94c:	59 3f       	cpi	r21, 0xF9	; 249
 94e:	50 f4       	brcc	.+20     	; 0x964 <__addsf3x+0x52>
 950:	50 3e       	cpi	r21, 0xE0	; 224
 952:	68 f1       	brcs	.+90     	; 0x9ae <__addsf3x+0x9c>
 954:	1a 16       	cp	r1, r26
 956:	f0 40       	sbci	r31, 0x00	; 0
 958:	a2 2f       	mov	r26, r18
 95a:	23 2f       	mov	r18, r19
 95c:	34 2f       	mov	r19, r20
 95e:	44 27       	eor	r20, r20
 960:	58 5f       	subi	r21, 0xF8	; 248
 962:	f3 cf       	rjmp	.-26     	; 0x94a <__addsf3x+0x38>
 964:	46 95       	lsr	r20
 966:	37 95       	ror	r19
 968:	27 95       	ror	r18
 96a:	a7 95       	ror	r26
 96c:	f0 40       	sbci	r31, 0x00	; 0
 96e:	53 95       	inc	r21
 970:	c9 f7       	brne	.-14     	; 0x964 <__addsf3x+0x52>
 972:	7e f4       	brtc	.+30     	; 0x992 <__addsf3x+0x80>
 974:	1f 16       	cp	r1, r31
 976:	ba 0b       	sbc	r27, r26
 978:	62 0b       	sbc	r22, r18
 97a:	73 0b       	sbc	r23, r19
 97c:	84 0b       	sbc	r24, r20
 97e:	ba f0       	brmi	.+46     	; 0x9ae <__addsf3x+0x9c>
 980:	91 50       	subi	r25, 0x01	; 1
 982:	a1 f0       	breq	.+40     	; 0x9ac <__addsf3x+0x9a>
 984:	ff 0f       	add	r31, r31
 986:	bb 1f       	adc	r27, r27
 988:	66 1f       	adc	r22, r22
 98a:	77 1f       	adc	r23, r23
 98c:	88 1f       	adc	r24, r24
 98e:	c2 f7       	brpl	.-16     	; 0x980 <__addsf3x+0x6e>
 990:	0e c0       	rjmp	.+28     	; 0x9ae <__addsf3x+0x9c>
 992:	ba 0f       	add	r27, r26
 994:	62 1f       	adc	r22, r18
 996:	73 1f       	adc	r23, r19
 998:	84 1f       	adc	r24, r20
 99a:	48 f4       	brcc	.+18     	; 0x9ae <__addsf3x+0x9c>
 99c:	87 95       	ror	r24
 99e:	77 95       	ror	r23
 9a0:	67 95       	ror	r22
 9a2:	b7 95       	ror	r27
 9a4:	f7 95       	ror	r31
 9a6:	9e 3f       	cpi	r25, 0xFE	; 254
 9a8:	08 f0       	brcs	.+2      	; 0x9ac <__addsf3x+0x9a>
 9aa:	b0 cf       	rjmp	.-160    	; 0x90c <__addsf3+0x28>
 9ac:	93 95       	inc	r25
 9ae:	88 0f       	add	r24, r24
 9b0:	08 f0       	brcs	.+2      	; 0x9b4 <__addsf3x+0xa2>
 9b2:	99 27       	eor	r25, r25
 9b4:	ee 0f       	add	r30, r30
 9b6:	97 95       	ror	r25
 9b8:	87 95       	ror	r24
 9ba:	08 95       	ret

000009bc <__cmpsf2>:
 9bc:	0e 94 c8 05 	call	0xb90	; 0xb90 <__fp_cmp>
 9c0:	08 f4       	brcc	.+2      	; 0x9c4 <__cmpsf2+0x8>
 9c2:	81 e0       	ldi	r24, 0x01	; 1
 9c4:	08 95       	ret

000009c6 <__divsf3>:
 9c6:	0e 94 f7 04 	call	0x9ee	; 0x9ee <__divsf3x>
 9ca:	0c 94 03 06 	jmp	0xc06	; 0xc06 <__fp_round>
 9ce:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <__fp_pscB>
 9d2:	58 f0       	brcs	.+22     	; 0x9ea <__divsf3+0x24>
 9d4:	0e 94 f5 05 	call	0xbea	; 0xbea <__fp_pscA>
 9d8:	40 f0       	brcs	.+16     	; 0x9ea <__divsf3+0x24>
 9da:	29 f4       	brne	.+10     	; 0x9e6 <__divsf3+0x20>
 9dc:	5f 3f       	cpi	r21, 0xFF	; 255
 9de:	29 f0       	breq	.+10     	; 0x9ea <__divsf3+0x24>
 9e0:	0c 94 ec 05 	jmp	0xbd8	; 0xbd8 <__fp_inf>
 9e4:	51 11       	cpse	r21, r1
 9e6:	0c 94 37 06 	jmp	0xc6e	; 0xc6e <__fp_szero>
 9ea:	0c 94 f2 05 	jmp	0xbe4	; 0xbe4 <__fp_nan>

000009ee <__divsf3x>:
 9ee:	0e 94 14 06 	call	0xc28	; 0xc28 <__fp_split3>
 9f2:	68 f3       	brcs	.-38     	; 0x9ce <__divsf3+0x8>

000009f4 <__divsf3_pse>:
 9f4:	99 23       	and	r25, r25
 9f6:	b1 f3       	breq	.-20     	; 0x9e4 <__divsf3+0x1e>
 9f8:	55 23       	and	r21, r21
 9fa:	91 f3       	breq	.-28     	; 0x9e0 <__divsf3+0x1a>
 9fc:	95 1b       	sub	r25, r21
 9fe:	55 0b       	sbc	r21, r21
 a00:	bb 27       	eor	r27, r27
 a02:	aa 27       	eor	r26, r26
 a04:	62 17       	cp	r22, r18
 a06:	73 07       	cpc	r23, r19
 a08:	84 07       	cpc	r24, r20
 a0a:	38 f0       	brcs	.+14     	; 0xa1a <__divsf3_pse+0x26>
 a0c:	9f 5f       	subi	r25, 0xFF	; 255
 a0e:	5f 4f       	sbci	r21, 0xFF	; 255
 a10:	22 0f       	add	r18, r18
 a12:	33 1f       	adc	r19, r19
 a14:	44 1f       	adc	r20, r20
 a16:	aa 1f       	adc	r26, r26
 a18:	a9 f3       	breq	.-22     	; 0xa04 <__divsf3_pse+0x10>
 a1a:	35 d0       	rcall	.+106    	; 0xa86 <__divsf3_pse+0x92>
 a1c:	0e 2e       	mov	r0, r30
 a1e:	3a f0       	brmi	.+14     	; 0xa2e <__divsf3_pse+0x3a>
 a20:	e0 e8       	ldi	r30, 0x80	; 128
 a22:	32 d0       	rcall	.+100    	; 0xa88 <__divsf3_pse+0x94>
 a24:	91 50       	subi	r25, 0x01	; 1
 a26:	50 40       	sbci	r21, 0x00	; 0
 a28:	e6 95       	lsr	r30
 a2a:	00 1c       	adc	r0, r0
 a2c:	ca f7       	brpl	.-14     	; 0xa20 <__divsf3_pse+0x2c>
 a2e:	2b d0       	rcall	.+86     	; 0xa86 <__divsf3_pse+0x92>
 a30:	fe 2f       	mov	r31, r30
 a32:	29 d0       	rcall	.+82     	; 0xa86 <__divsf3_pse+0x92>
 a34:	66 0f       	add	r22, r22
 a36:	77 1f       	adc	r23, r23
 a38:	88 1f       	adc	r24, r24
 a3a:	bb 1f       	adc	r27, r27
 a3c:	26 17       	cp	r18, r22
 a3e:	37 07       	cpc	r19, r23
 a40:	48 07       	cpc	r20, r24
 a42:	ab 07       	cpc	r26, r27
 a44:	b0 e8       	ldi	r27, 0x80	; 128
 a46:	09 f0       	breq	.+2      	; 0xa4a <__divsf3_pse+0x56>
 a48:	bb 0b       	sbc	r27, r27
 a4a:	80 2d       	mov	r24, r0
 a4c:	bf 01       	movw	r22, r30
 a4e:	ff 27       	eor	r31, r31
 a50:	93 58       	subi	r25, 0x83	; 131
 a52:	5f 4f       	sbci	r21, 0xFF	; 255
 a54:	3a f0       	brmi	.+14     	; 0xa64 <__divsf3_pse+0x70>
 a56:	9e 3f       	cpi	r25, 0xFE	; 254
 a58:	51 05       	cpc	r21, r1
 a5a:	78 f0       	brcs	.+30     	; 0xa7a <__divsf3_pse+0x86>
 a5c:	0c 94 ec 05 	jmp	0xbd8	; 0xbd8 <__fp_inf>
 a60:	0c 94 37 06 	jmp	0xc6e	; 0xc6e <__fp_szero>
 a64:	5f 3f       	cpi	r21, 0xFF	; 255
 a66:	e4 f3       	brlt	.-8      	; 0xa60 <__divsf3_pse+0x6c>
 a68:	98 3e       	cpi	r25, 0xE8	; 232
 a6a:	d4 f3       	brlt	.-12     	; 0xa60 <__divsf3_pse+0x6c>
 a6c:	86 95       	lsr	r24
 a6e:	77 95       	ror	r23
 a70:	67 95       	ror	r22
 a72:	b7 95       	ror	r27
 a74:	f7 95       	ror	r31
 a76:	9f 5f       	subi	r25, 0xFF	; 255
 a78:	c9 f7       	brne	.-14     	; 0xa6c <__divsf3_pse+0x78>
 a7a:	88 0f       	add	r24, r24
 a7c:	91 1d       	adc	r25, r1
 a7e:	96 95       	lsr	r25
 a80:	87 95       	ror	r24
 a82:	97 f9       	bld	r25, 7
 a84:	08 95       	ret
 a86:	e1 e0       	ldi	r30, 0x01	; 1
 a88:	66 0f       	add	r22, r22
 a8a:	77 1f       	adc	r23, r23
 a8c:	88 1f       	adc	r24, r24
 a8e:	bb 1f       	adc	r27, r27
 a90:	62 17       	cp	r22, r18
 a92:	73 07       	cpc	r23, r19
 a94:	84 07       	cpc	r24, r20
 a96:	ba 07       	cpc	r27, r26
 a98:	20 f0       	brcs	.+8      	; 0xaa2 <__divsf3_pse+0xae>
 a9a:	62 1b       	sub	r22, r18
 a9c:	73 0b       	sbc	r23, r19
 a9e:	84 0b       	sbc	r24, r20
 aa0:	ba 0b       	sbc	r27, r26
 aa2:	ee 1f       	adc	r30, r30
 aa4:	88 f7       	brcc	.-30     	; 0xa88 <__divsf3_pse+0x94>
 aa6:	e0 95       	com	r30
 aa8:	08 95       	ret

00000aaa <__fixsfsi>:
 aaa:	0e 94 5c 05 	call	0xab8	; 0xab8 <__fixunssfsi>
 aae:	68 94       	set
 ab0:	b1 11       	cpse	r27, r1
 ab2:	0c 94 37 06 	jmp	0xc6e	; 0xc6e <__fp_szero>
 ab6:	08 95       	ret

00000ab8 <__fixunssfsi>:
 ab8:	0e 94 1c 06 	call	0xc38	; 0xc38 <__fp_splitA>
 abc:	88 f0       	brcs	.+34     	; 0xae0 <__fixunssfsi+0x28>
 abe:	9f 57       	subi	r25, 0x7F	; 127
 ac0:	98 f0       	brcs	.+38     	; 0xae8 <__fixunssfsi+0x30>
 ac2:	b9 2f       	mov	r27, r25
 ac4:	99 27       	eor	r25, r25
 ac6:	b7 51       	subi	r27, 0x17	; 23
 ac8:	b0 f0       	brcs	.+44     	; 0xaf6 <__fixunssfsi+0x3e>
 aca:	e1 f0       	breq	.+56     	; 0xb04 <__fixunssfsi+0x4c>
 acc:	66 0f       	add	r22, r22
 ace:	77 1f       	adc	r23, r23
 ad0:	88 1f       	adc	r24, r24
 ad2:	99 1f       	adc	r25, r25
 ad4:	1a f0       	brmi	.+6      	; 0xadc <__fixunssfsi+0x24>
 ad6:	ba 95       	dec	r27
 ad8:	c9 f7       	brne	.-14     	; 0xacc <__fixunssfsi+0x14>
 ada:	14 c0       	rjmp	.+40     	; 0xb04 <__fixunssfsi+0x4c>
 adc:	b1 30       	cpi	r27, 0x01	; 1
 ade:	91 f0       	breq	.+36     	; 0xb04 <__fixunssfsi+0x4c>
 ae0:	0e 94 36 06 	call	0xc6c	; 0xc6c <__fp_zero>
 ae4:	b1 e0       	ldi	r27, 0x01	; 1
 ae6:	08 95       	ret
 ae8:	0c 94 36 06 	jmp	0xc6c	; 0xc6c <__fp_zero>
 aec:	67 2f       	mov	r22, r23
 aee:	78 2f       	mov	r23, r24
 af0:	88 27       	eor	r24, r24
 af2:	b8 5f       	subi	r27, 0xF8	; 248
 af4:	39 f0       	breq	.+14     	; 0xb04 <__fixunssfsi+0x4c>
 af6:	b9 3f       	cpi	r27, 0xF9	; 249
 af8:	cc f3       	brlt	.-14     	; 0xaec <__fixunssfsi+0x34>
 afa:	86 95       	lsr	r24
 afc:	77 95       	ror	r23
 afe:	67 95       	ror	r22
 b00:	b3 95       	inc	r27
 b02:	d9 f7       	brne	.-10     	; 0xafa <__fixunssfsi+0x42>
 b04:	3e f4       	brtc	.+14     	; 0xb14 <__fixunssfsi+0x5c>
 b06:	90 95       	com	r25
 b08:	80 95       	com	r24
 b0a:	70 95       	com	r23
 b0c:	61 95       	neg	r22
 b0e:	7f 4f       	sbci	r23, 0xFF	; 255
 b10:	8f 4f       	sbci	r24, 0xFF	; 255
 b12:	9f 4f       	sbci	r25, 0xFF	; 255
 b14:	08 95       	ret

00000b16 <__floatunsisf>:
 b16:	e8 94       	clt
 b18:	09 c0       	rjmp	.+18     	; 0xb2c <__floatsisf+0x12>

00000b1a <__floatsisf>:
 b1a:	97 fb       	bst	r25, 7
 b1c:	3e f4       	brtc	.+14     	; 0xb2c <__floatsisf+0x12>
 b1e:	90 95       	com	r25
 b20:	80 95       	com	r24
 b22:	70 95       	com	r23
 b24:	61 95       	neg	r22
 b26:	7f 4f       	sbci	r23, 0xFF	; 255
 b28:	8f 4f       	sbci	r24, 0xFF	; 255
 b2a:	9f 4f       	sbci	r25, 0xFF	; 255
 b2c:	99 23       	and	r25, r25
 b2e:	a9 f0       	breq	.+42     	; 0xb5a <__floatsisf+0x40>
 b30:	f9 2f       	mov	r31, r25
 b32:	96 e9       	ldi	r25, 0x96	; 150
 b34:	bb 27       	eor	r27, r27
 b36:	93 95       	inc	r25
 b38:	f6 95       	lsr	r31
 b3a:	87 95       	ror	r24
 b3c:	77 95       	ror	r23
 b3e:	67 95       	ror	r22
 b40:	b7 95       	ror	r27
 b42:	f1 11       	cpse	r31, r1
 b44:	f8 cf       	rjmp	.-16     	; 0xb36 <__floatsisf+0x1c>
 b46:	fa f4       	brpl	.+62     	; 0xb86 <__floatsisf+0x6c>
 b48:	bb 0f       	add	r27, r27
 b4a:	11 f4       	brne	.+4      	; 0xb50 <__floatsisf+0x36>
 b4c:	60 ff       	sbrs	r22, 0
 b4e:	1b c0       	rjmp	.+54     	; 0xb86 <__floatsisf+0x6c>
 b50:	6f 5f       	subi	r22, 0xFF	; 255
 b52:	7f 4f       	sbci	r23, 0xFF	; 255
 b54:	8f 4f       	sbci	r24, 0xFF	; 255
 b56:	9f 4f       	sbci	r25, 0xFF	; 255
 b58:	16 c0       	rjmp	.+44     	; 0xb86 <__floatsisf+0x6c>
 b5a:	88 23       	and	r24, r24
 b5c:	11 f0       	breq	.+4      	; 0xb62 <__floatsisf+0x48>
 b5e:	96 e9       	ldi	r25, 0x96	; 150
 b60:	11 c0       	rjmp	.+34     	; 0xb84 <__floatsisf+0x6a>
 b62:	77 23       	and	r23, r23
 b64:	21 f0       	breq	.+8      	; 0xb6e <__floatsisf+0x54>
 b66:	9e e8       	ldi	r25, 0x8E	; 142
 b68:	87 2f       	mov	r24, r23
 b6a:	76 2f       	mov	r23, r22
 b6c:	05 c0       	rjmp	.+10     	; 0xb78 <__floatsisf+0x5e>
 b6e:	66 23       	and	r22, r22
 b70:	71 f0       	breq	.+28     	; 0xb8e <__floatsisf+0x74>
 b72:	96 e8       	ldi	r25, 0x86	; 134
 b74:	86 2f       	mov	r24, r22
 b76:	70 e0       	ldi	r23, 0x00	; 0
 b78:	60 e0       	ldi	r22, 0x00	; 0
 b7a:	2a f0       	brmi	.+10     	; 0xb86 <__floatsisf+0x6c>
 b7c:	9a 95       	dec	r25
 b7e:	66 0f       	add	r22, r22
 b80:	77 1f       	adc	r23, r23
 b82:	88 1f       	adc	r24, r24
 b84:	da f7       	brpl	.-10     	; 0xb7c <__floatsisf+0x62>
 b86:	88 0f       	add	r24, r24
 b88:	96 95       	lsr	r25
 b8a:	87 95       	ror	r24
 b8c:	97 f9       	bld	r25, 7
 b8e:	08 95       	ret

00000b90 <__fp_cmp>:
 b90:	99 0f       	add	r25, r25
 b92:	00 08       	sbc	r0, r0
 b94:	55 0f       	add	r21, r21
 b96:	aa 0b       	sbc	r26, r26
 b98:	e0 e8       	ldi	r30, 0x80	; 128
 b9a:	fe ef       	ldi	r31, 0xFE	; 254
 b9c:	16 16       	cp	r1, r22
 b9e:	17 06       	cpc	r1, r23
 ba0:	e8 07       	cpc	r30, r24
 ba2:	f9 07       	cpc	r31, r25
 ba4:	c0 f0       	brcs	.+48     	; 0xbd6 <__fp_cmp+0x46>
 ba6:	12 16       	cp	r1, r18
 ba8:	13 06       	cpc	r1, r19
 baa:	e4 07       	cpc	r30, r20
 bac:	f5 07       	cpc	r31, r21
 bae:	98 f0       	brcs	.+38     	; 0xbd6 <__fp_cmp+0x46>
 bb0:	62 1b       	sub	r22, r18
 bb2:	73 0b       	sbc	r23, r19
 bb4:	84 0b       	sbc	r24, r20
 bb6:	95 0b       	sbc	r25, r21
 bb8:	39 f4       	brne	.+14     	; 0xbc8 <__fp_cmp+0x38>
 bba:	0a 26       	eor	r0, r26
 bbc:	61 f0       	breq	.+24     	; 0xbd6 <__fp_cmp+0x46>
 bbe:	23 2b       	or	r18, r19
 bc0:	24 2b       	or	r18, r20
 bc2:	25 2b       	or	r18, r21
 bc4:	21 f4       	brne	.+8      	; 0xbce <__fp_cmp+0x3e>
 bc6:	08 95       	ret
 bc8:	0a 26       	eor	r0, r26
 bca:	09 f4       	brne	.+2      	; 0xbce <__fp_cmp+0x3e>
 bcc:	a1 40       	sbci	r26, 0x01	; 1
 bce:	a6 95       	lsr	r26
 bd0:	8f ef       	ldi	r24, 0xFF	; 255
 bd2:	81 1d       	adc	r24, r1
 bd4:	81 1d       	adc	r24, r1
 bd6:	08 95       	ret

00000bd8 <__fp_inf>:
 bd8:	97 f9       	bld	r25, 7
 bda:	9f 67       	ori	r25, 0x7F	; 127
 bdc:	80 e8       	ldi	r24, 0x80	; 128
 bde:	70 e0       	ldi	r23, 0x00	; 0
 be0:	60 e0       	ldi	r22, 0x00	; 0
 be2:	08 95       	ret

00000be4 <__fp_nan>:
 be4:	9f ef       	ldi	r25, 0xFF	; 255
 be6:	80 ec       	ldi	r24, 0xC0	; 192
 be8:	08 95       	ret

00000bea <__fp_pscA>:
 bea:	00 24       	eor	r0, r0
 bec:	0a 94       	dec	r0
 bee:	16 16       	cp	r1, r22
 bf0:	17 06       	cpc	r1, r23
 bf2:	18 06       	cpc	r1, r24
 bf4:	09 06       	cpc	r0, r25
 bf6:	08 95       	ret

00000bf8 <__fp_pscB>:
 bf8:	00 24       	eor	r0, r0
 bfa:	0a 94       	dec	r0
 bfc:	12 16       	cp	r1, r18
 bfe:	13 06       	cpc	r1, r19
 c00:	14 06       	cpc	r1, r20
 c02:	05 06       	cpc	r0, r21
 c04:	08 95       	ret

00000c06 <__fp_round>:
 c06:	09 2e       	mov	r0, r25
 c08:	03 94       	inc	r0
 c0a:	00 0c       	add	r0, r0
 c0c:	11 f4       	brne	.+4      	; 0xc12 <__fp_round+0xc>
 c0e:	88 23       	and	r24, r24
 c10:	52 f0       	brmi	.+20     	; 0xc26 <__fp_round+0x20>
 c12:	bb 0f       	add	r27, r27
 c14:	40 f4       	brcc	.+16     	; 0xc26 <__fp_round+0x20>
 c16:	bf 2b       	or	r27, r31
 c18:	11 f4       	brne	.+4      	; 0xc1e <__fp_round+0x18>
 c1a:	60 ff       	sbrs	r22, 0
 c1c:	04 c0       	rjmp	.+8      	; 0xc26 <__fp_round+0x20>
 c1e:	6f 5f       	subi	r22, 0xFF	; 255
 c20:	7f 4f       	sbci	r23, 0xFF	; 255
 c22:	8f 4f       	sbci	r24, 0xFF	; 255
 c24:	9f 4f       	sbci	r25, 0xFF	; 255
 c26:	08 95       	ret

00000c28 <__fp_split3>:
 c28:	57 fd       	sbrc	r21, 7
 c2a:	90 58       	subi	r25, 0x80	; 128
 c2c:	44 0f       	add	r20, r20
 c2e:	55 1f       	adc	r21, r21
 c30:	59 f0       	breq	.+22     	; 0xc48 <__fp_splitA+0x10>
 c32:	5f 3f       	cpi	r21, 0xFF	; 255
 c34:	71 f0       	breq	.+28     	; 0xc52 <__fp_splitA+0x1a>
 c36:	47 95       	ror	r20

00000c38 <__fp_splitA>:
 c38:	88 0f       	add	r24, r24
 c3a:	97 fb       	bst	r25, 7
 c3c:	99 1f       	adc	r25, r25
 c3e:	61 f0       	breq	.+24     	; 0xc58 <__fp_splitA+0x20>
 c40:	9f 3f       	cpi	r25, 0xFF	; 255
 c42:	79 f0       	breq	.+30     	; 0xc62 <__fp_splitA+0x2a>
 c44:	87 95       	ror	r24
 c46:	08 95       	ret
 c48:	12 16       	cp	r1, r18
 c4a:	13 06       	cpc	r1, r19
 c4c:	14 06       	cpc	r1, r20
 c4e:	55 1f       	adc	r21, r21
 c50:	f2 cf       	rjmp	.-28     	; 0xc36 <__fp_split3+0xe>
 c52:	46 95       	lsr	r20
 c54:	f1 df       	rcall	.-30     	; 0xc38 <__fp_splitA>
 c56:	08 c0       	rjmp	.+16     	; 0xc68 <__fp_splitA+0x30>
 c58:	16 16       	cp	r1, r22
 c5a:	17 06       	cpc	r1, r23
 c5c:	18 06       	cpc	r1, r24
 c5e:	99 1f       	adc	r25, r25
 c60:	f1 cf       	rjmp	.-30     	; 0xc44 <__fp_splitA+0xc>
 c62:	86 95       	lsr	r24
 c64:	71 05       	cpc	r23, r1
 c66:	61 05       	cpc	r22, r1
 c68:	08 94       	sec
 c6a:	08 95       	ret

00000c6c <__fp_zero>:
 c6c:	e8 94       	clt

00000c6e <__fp_szero>:
 c6e:	bb 27       	eor	r27, r27
 c70:	66 27       	eor	r22, r22
 c72:	77 27       	eor	r23, r23
 c74:	cb 01       	movw	r24, r22
 c76:	97 f9       	bld	r25, 7
 c78:	08 95       	ret

00000c7a <__gesf2>:
 c7a:	0e 94 c8 05 	call	0xb90	; 0xb90 <__fp_cmp>
 c7e:	08 f4       	brcc	.+2      	; 0xc82 <__gesf2+0x8>
 c80:	8f ef       	ldi	r24, 0xFF	; 255
 c82:	08 95       	ret

00000c84 <__mulsf3>:
 c84:	0e 94 55 06 	call	0xcaa	; 0xcaa <__mulsf3x>
 c88:	0c 94 03 06 	jmp	0xc06	; 0xc06 <__fp_round>
 c8c:	0e 94 f5 05 	call	0xbea	; 0xbea <__fp_pscA>
 c90:	38 f0       	brcs	.+14     	; 0xca0 <__mulsf3+0x1c>
 c92:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <__fp_pscB>
 c96:	20 f0       	brcs	.+8      	; 0xca0 <__mulsf3+0x1c>
 c98:	95 23       	and	r25, r21
 c9a:	11 f0       	breq	.+4      	; 0xca0 <__mulsf3+0x1c>
 c9c:	0c 94 ec 05 	jmp	0xbd8	; 0xbd8 <__fp_inf>
 ca0:	0c 94 f2 05 	jmp	0xbe4	; 0xbe4 <__fp_nan>
 ca4:	11 24       	eor	r1, r1
 ca6:	0c 94 37 06 	jmp	0xc6e	; 0xc6e <__fp_szero>

00000caa <__mulsf3x>:
 caa:	0e 94 14 06 	call	0xc28	; 0xc28 <__fp_split3>
 cae:	70 f3       	brcs	.-36     	; 0xc8c <__mulsf3+0x8>

00000cb0 <__mulsf3_pse>:
 cb0:	95 9f       	mul	r25, r21
 cb2:	c1 f3       	breq	.-16     	; 0xca4 <__mulsf3+0x20>
 cb4:	95 0f       	add	r25, r21
 cb6:	50 e0       	ldi	r21, 0x00	; 0
 cb8:	55 1f       	adc	r21, r21
 cba:	62 9f       	mul	r22, r18
 cbc:	f0 01       	movw	r30, r0
 cbe:	72 9f       	mul	r23, r18
 cc0:	bb 27       	eor	r27, r27
 cc2:	f0 0d       	add	r31, r0
 cc4:	b1 1d       	adc	r27, r1
 cc6:	63 9f       	mul	r22, r19
 cc8:	aa 27       	eor	r26, r26
 cca:	f0 0d       	add	r31, r0
 ccc:	b1 1d       	adc	r27, r1
 cce:	aa 1f       	adc	r26, r26
 cd0:	64 9f       	mul	r22, r20
 cd2:	66 27       	eor	r22, r22
 cd4:	b0 0d       	add	r27, r0
 cd6:	a1 1d       	adc	r26, r1
 cd8:	66 1f       	adc	r22, r22
 cda:	82 9f       	mul	r24, r18
 cdc:	22 27       	eor	r18, r18
 cde:	b0 0d       	add	r27, r0
 ce0:	a1 1d       	adc	r26, r1
 ce2:	62 1f       	adc	r22, r18
 ce4:	73 9f       	mul	r23, r19
 ce6:	b0 0d       	add	r27, r0
 ce8:	a1 1d       	adc	r26, r1
 cea:	62 1f       	adc	r22, r18
 cec:	83 9f       	mul	r24, r19
 cee:	a0 0d       	add	r26, r0
 cf0:	61 1d       	adc	r22, r1
 cf2:	22 1f       	adc	r18, r18
 cf4:	74 9f       	mul	r23, r20
 cf6:	33 27       	eor	r19, r19
 cf8:	a0 0d       	add	r26, r0
 cfa:	61 1d       	adc	r22, r1
 cfc:	23 1f       	adc	r18, r19
 cfe:	84 9f       	mul	r24, r20
 d00:	60 0d       	add	r22, r0
 d02:	21 1d       	adc	r18, r1
 d04:	82 2f       	mov	r24, r18
 d06:	76 2f       	mov	r23, r22
 d08:	6a 2f       	mov	r22, r26
 d0a:	11 24       	eor	r1, r1
 d0c:	9f 57       	subi	r25, 0x7F	; 127
 d0e:	50 40       	sbci	r21, 0x00	; 0
 d10:	9a f0       	brmi	.+38     	; 0xd38 <__mulsf3_pse+0x88>
 d12:	f1 f0       	breq	.+60     	; 0xd50 <__mulsf3_pse+0xa0>
 d14:	88 23       	and	r24, r24
 d16:	4a f0       	brmi	.+18     	; 0xd2a <__mulsf3_pse+0x7a>
 d18:	ee 0f       	add	r30, r30
 d1a:	ff 1f       	adc	r31, r31
 d1c:	bb 1f       	adc	r27, r27
 d1e:	66 1f       	adc	r22, r22
 d20:	77 1f       	adc	r23, r23
 d22:	88 1f       	adc	r24, r24
 d24:	91 50       	subi	r25, 0x01	; 1
 d26:	50 40       	sbci	r21, 0x00	; 0
 d28:	a9 f7       	brne	.-22     	; 0xd14 <__mulsf3_pse+0x64>
 d2a:	9e 3f       	cpi	r25, 0xFE	; 254
 d2c:	51 05       	cpc	r21, r1
 d2e:	80 f0       	brcs	.+32     	; 0xd50 <__mulsf3_pse+0xa0>
 d30:	0c 94 ec 05 	jmp	0xbd8	; 0xbd8 <__fp_inf>
 d34:	0c 94 37 06 	jmp	0xc6e	; 0xc6e <__fp_szero>
 d38:	5f 3f       	cpi	r21, 0xFF	; 255
 d3a:	e4 f3       	brlt	.-8      	; 0xd34 <__mulsf3_pse+0x84>
 d3c:	98 3e       	cpi	r25, 0xE8	; 232
 d3e:	d4 f3       	brlt	.-12     	; 0xd34 <__mulsf3_pse+0x84>
 d40:	86 95       	lsr	r24
 d42:	77 95       	ror	r23
 d44:	67 95       	ror	r22
 d46:	b7 95       	ror	r27
 d48:	f7 95       	ror	r31
 d4a:	e7 95       	ror	r30
 d4c:	9f 5f       	subi	r25, 0xFF	; 255
 d4e:	c1 f7       	brne	.-16     	; 0xd40 <__mulsf3_pse+0x90>
 d50:	fe 2b       	or	r31, r30
 d52:	88 0f       	add	r24, r24
 d54:	91 1d       	adc	r25, r1
 d56:	96 95       	lsr	r25
 d58:	87 95       	ror	r24
 d5a:	97 f9       	bld	r25, 7
 d5c:	08 95       	ret

00000d5e <__itoa_ncheck>:
 d5e:	bb 27       	eor	r27, r27
 d60:	4a 30       	cpi	r20, 0x0A	; 10
 d62:	31 f4       	brne	.+12     	; 0xd70 <__itoa_ncheck+0x12>
 d64:	99 23       	and	r25, r25
 d66:	22 f4       	brpl	.+8      	; 0xd70 <__itoa_ncheck+0x12>
 d68:	bd e2       	ldi	r27, 0x2D	; 45
 d6a:	90 95       	com	r25
 d6c:	81 95       	neg	r24
 d6e:	9f 4f       	sbci	r25, 0xFF	; 255
 d70:	0c 94 bb 06 	jmp	0xd76	; 0xd76 <__utoa_common>

00000d74 <__utoa_ncheck>:
 d74:	bb 27       	eor	r27, r27

00000d76 <__utoa_common>:
 d76:	fb 01       	movw	r30, r22
 d78:	55 27       	eor	r21, r21
 d7a:	aa 27       	eor	r26, r26
 d7c:	88 0f       	add	r24, r24
 d7e:	99 1f       	adc	r25, r25
 d80:	aa 1f       	adc	r26, r26
 d82:	a4 17       	cp	r26, r20
 d84:	10 f0       	brcs	.+4      	; 0xd8a <__utoa_common+0x14>
 d86:	a4 1b       	sub	r26, r20
 d88:	83 95       	inc	r24
 d8a:	50 51       	subi	r21, 0x10	; 16
 d8c:	b9 f7       	brne	.-18     	; 0xd7c <__utoa_common+0x6>
 d8e:	a0 5d       	subi	r26, 0xD0	; 208
 d90:	aa 33       	cpi	r26, 0x3A	; 58
 d92:	08 f0       	brcs	.+2      	; 0xd96 <__utoa_common+0x20>
 d94:	a9 5d       	subi	r26, 0xD9	; 217
 d96:	a1 93       	st	Z+, r26
 d98:	00 97       	sbiw	r24, 0x00	; 0
 d9a:	79 f7       	brne	.-34     	; 0xd7a <__utoa_common+0x4>
 d9c:	b1 11       	cpse	r27, r1
 d9e:	b1 93       	st	Z+, r27
 da0:	11 92       	st	Z+, r1
 da2:	cb 01       	movw	r24, r22
 da4:	0c 94 d4 06 	jmp	0xda8	; 0xda8 <strrev>

00000da8 <strrev>:
 da8:	dc 01       	movw	r26, r24
 daa:	fc 01       	movw	r30, r24
 dac:	67 2f       	mov	r22, r23
 dae:	71 91       	ld	r23, Z+
 db0:	77 23       	and	r23, r23
 db2:	e1 f7       	brne	.-8      	; 0xdac <strrev+0x4>
 db4:	32 97       	sbiw	r30, 0x02	; 2
 db6:	04 c0       	rjmp	.+8      	; 0xdc0 <strrev+0x18>
 db8:	7c 91       	ld	r23, X
 dba:	6d 93       	st	X+, r22
 dbc:	70 83       	st	Z, r23
 dbe:	62 91       	ld	r22, -Z
 dc0:	ae 17       	cp	r26, r30
 dc2:	bf 07       	cpc	r27, r31
 dc4:	c8 f3       	brcs	.-14     	; 0xdb8 <strrev+0x10>
 dc6:	08 95       	ret

00000dc8 <_exit>:
 dc8:	f8 94       	cli

00000dca <__stop_program>:
 dca:	ff cf       	rjmp	.-2      	; 0xdca <__stop_program>
