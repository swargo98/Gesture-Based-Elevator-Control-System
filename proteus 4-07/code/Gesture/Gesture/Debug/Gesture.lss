
Gesture.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000e30  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000010  00800060  00000e30  00000ec4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000004  00800070  00800070  00000ed4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000ed4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000f04  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d8  00000000  00000000  00000f40  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000019f3  00000000  00000000  00001018  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007ae  00000000  00000000  00002a0b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000cce  00000000  00000000  000031b9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000021c  00000000  00000000  00003e88  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004f9  00000000  00000000  000040a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000165f  00000000  00000000  0000459d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c8  00000000  00000000  00005bfc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 1d 03 	jmp	0x63a	; 0x63a <__vector_9>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e0 e3       	ldi	r30, 0x30	; 48
  68:	fe e0       	ldi	r31, 0x0E	; 14
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 37       	cpi	r26, 0x70	; 112
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a0 e7       	ldi	r26, 0x70	; 112
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a4 37       	cpi	r26, 0x74	; 116
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 90 03 	call	0x720	; 0x720 <main>
  8a:	0c 94 16 07 	jmp	0xe2c	; 0xe2c <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <pinChange>:
}

void Lcd4_Shift_Left()
{
	Lcd4_Cmd(0x01);
	Lcd4_Cmd(0x08);
  92:	67 2b       	or	r22, r23
  94:	09 f0       	breq	.+2      	; 0x98 <pinChange+0x6>
  96:	df c0       	rjmp	.+446    	; 0x256 <pinChange+0x1c4>
  98:	00 97       	sbiw	r24, 0x00	; 0
  9a:	21 f4       	brne	.+8      	; 0xa4 <pinChange+0x12>
  9c:	8b b3       	in	r24, 0x1b	; 27
  9e:	8e 7f       	andi	r24, 0xFE	; 254
  a0:	8b bb       	out	0x1b, r24	; 27
  a2:	08 95       	ret
  a4:	81 30       	cpi	r24, 0x01	; 1
  a6:	91 05       	cpc	r25, r1
  a8:	21 f4       	brne	.+8      	; 0xb2 <pinChange+0x20>
  aa:	8b b3       	in	r24, 0x1b	; 27
  ac:	8d 7f       	andi	r24, 0xFD	; 253
  ae:	8b bb       	out	0x1b, r24	; 27
  b0:	08 95       	ret
  b2:	82 30       	cpi	r24, 0x02	; 2
  b4:	91 05       	cpc	r25, r1
  b6:	21 f4       	brne	.+8      	; 0xc0 <pinChange+0x2e>
  b8:	8b b3       	in	r24, 0x1b	; 27
  ba:	8b 7f       	andi	r24, 0xFB	; 251
  bc:	8b bb       	out	0x1b, r24	; 27
  be:	08 95       	ret
  c0:	83 30       	cpi	r24, 0x03	; 3
  c2:	91 05       	cpc	r25, r1
  c4:	21 f4       	brne	.+8      	; 0xce <pinChange+0x3c>
  c6:	8b b3       	in	r24, 0x1b	; 27
  c8:	87 7f       	andi	r24, 0xF7	; 247
  ca:	8b bb       	out	0x1b, r24	; 27
  cc:	08 95       	ret
  ce:	84 30       	cpi	r24, 0x04	; 4
  d0:	91 05       	cpc	r25, r1
  d2:	21 f4       	brne	.+8      	; 0xdc <pinChange+0x4a>
  d4:	8b b3       	in	r24, 0x1b	; 27
  d6:	8f 7e       	andi	r24, 0xEF	; 239
  d8:	8b bb       	out	0x1b, r24	; 27
  da:	08 95       	ret
  dc:	85 30       	cpi	r24, 0x05	; 5
  de:	91 05       	cpc	r25, r1
  e0:	21 f4       	brne	.+8      	; 0xea <pinChange+0x58>
  e2:	8b b3       	in	r24, 0x1b	; 27
  e4:	8f 7d       	andi	r24, 0xDF	; 223
  e6:	8b bb       	out	0x1b, r24	; 27
  e8:	08 95       	ret
  ea:	86 30       	cpi	r24, 0x06	; 6
  ec:	91 05       	cpc	r25, r1
  ee:	21 f4       	brne	.+8      	; 0xf8 <pinChange+0x66>
  f0:	8b b3       	in	r24, 0x1b	; 27
  f2:	8f 7b       	andi	r24, 0xBF	; 191
  f4:	8b bb       	out	0x1b, r24	; 27
  f6:	08 95       	ret
  f8:	87 30       	cpi	r24, 0x07	; 7
  fa:	91 05       	cpc	r25, r1
  fc:	21 f4       	brne	.+8      	; 0x106 <pinChange+0x74>
  fe:	8b b3       	in	r24, 0x1b	; 27
 100:	8f 77       	andi	r24, 0x7F	; 127
 102:	8b bb       	out	0x1b, r24	; 27
 104:	08 95       	ret
 106:	8a 30       	cpi	r24, 0x0A	; 10
 108:	91 05       	cpc	r25, r1
 10a:	21 f4       	brne	.+8      	; 0x114 <pinChange+0x82>
 10c:	88 b3       	in	r24, 0x18	; 24
 10e:	8e 7f       	andi	r24, 0xFE	; 254
 110:	88 bb       	out	0x18, r24	; 24
 112:	08 95       	ret
 114:	8b 30       	cpi	r24, 0x0B	; 11
 116:	91 05       	cpc	r25, r1
 118:	21 f4       	brne	.+8      	; 0x122 <pinChange+0x90>
 11a:	88 b3       	in	r24, 0x18	; 24
 11c:	8d 7f       	andi	r24, 0xFD	; 253
 11e:	88 bb       	out	0x18, r24	; 24
 120:	08 95       	ret
 122:	8c 30       	cpi	r24, 0x0C	; 12
 124:	91 05       	cpc	r25, r1
 126:	21 f4       	brne	.+8      	; 0x130 <pinChange+0x9e>
 128:	88 b3       	in	r24, 0x18	; 24
 12a:	8b 7f       	andi	r24, 0xFB	; 251
 12c:	88 bb       	out	0x18, r24	; 24
 12e:	08 95       	ret
 130:	8d 30       	cpi	r24, 0x0D	; 13
 132:	91 05       	cpc	r25, r1
 134:	21 f4       	brne	.+8      	; 0x13e <pinChange+0xac>
 136:	88 b3       	in	r24, 0x18	; 24
 138:	87 7f       	andi	r24, 0xF7	; 247
 13a:	88 bb       	out	0x18, r24	; 24
 13c:	08 95       	ret
 13e:	8e 30       	cpi	r24, 0x0E	; 14
 140:	91 05       	cpc	r25, r1
 142:	21 f4       	brne	.+8      	; 0x14c <pinChange+0xba>
 144:	88 b3       	in	r24, 0x18	; 24
 146:	8f 7e       	andi	r24, 0xEF	; 239
 148:	88 bb       	out	0x18, r24	; 24
 14a:	08 95       	ret
 14c:	8f 30       	cpi	r24, 0x0F	; 15
 14e:	91 05       	cpc	r25, r1
 150:	21 f4       	brne	.+8      	; 0x15a <pinChange+0xc8>
 152:	88 b3       	in	r24, 0x18	; 24
 154:	8f 7d       	andi	r24, 0xDF	; 223
 156:	88 bb       	out	0x18, r24	; 24
 158:	08 95       	ret
 15a:	80 31       	cpi	r24, 0x10	; 16
 15c:	91 05       	cpc	r25, r1
 15e:	21 f4       	brne	.+8      	; 0x168 <pinChange+0xd6>
 160:	88 b3       	in	r24, 0x18	; 24
 162:	8f 7b       	andi	r24, 0xBF	; 191
 164:	88 bb       	out	0x18, r24	; 24
 166:	08 95       	ret
 168:	81 31       	cpi	r24, 0x11	; 17
 16a:	91 05       	cpc	r25, r1
 16c:	21 f4       	brne	.+8      	; 0x176 <pinChange+0xe4>
 16e:	88 b3       	in	r24, 0x18	; 24
 170:	8f 77       	andi	r24, 0x7F	; 127
 172:	88 bb       	out	0x18, r24	; 24
 174:	08 95       	ret
 176:	84 31       	cpi	r24, 0x14	; 20
 178:	91 05       	cpc	r25, r1
 17a:	21 f4       	brne	.+8      	; 0x184 <pinChange+0xf2>
 17c:	85 b3       	in	r24, 0x15	; 21
 17e:	8e 7f       	andi	r24, 0xFE	; 254
 180:	85 bb       	out	0x15, r24	; 21
 182:	08 95       	ret
 184:	85 31       	cpi	r24, 0x15	; 21
 186:	91 05       	cpc	r25, r1
 188:	21 f4       	brne	.+8      	; 0x192 <pinChange+0x100>
 18a:	85 b3       	in	r24, 0x15	; 21
 18c:	8d 7f       	andi	r24, 0xFD	; 253
 18e:	85 bb       	out	0x15, r24	; 21
 190:	08 95       	ret
 192:	86 31       	cpi	r24, 0x16	; 22
 194:	91 05       	cpc	r25, r1
 196:	21 f4       	brne	.+8      	; 0x1a0 <pinChange+0x10e>
 198:	85 b3       	in	r24, 0x15	; 21
 19a:	8b 7f       	andi	r24, 0xFB	; 251
 19c:	85 bb       	out	0x15, r24	; 21
 19e:	08 95       	ret
 1a0:	87 31       	cpi	r24, 0x17	; 23
 1a2:	91 05       	cpc	r25, r1
 1a4:	21 f4       	brne	.+8      	; 0x1ae <pinChange+0x11c>
 1a6:	85 b3       	in	r24, 0x15	; 21
 1a8:	87 7f       	andi	r24, 0xF7	; 247
 1aa:	85 bb       	out	0x15, r24	; 21
 1ac:	08 95       	ret
 1ae:	88 31       	cpi	r24, 0x18	; 24
 1b0:	91 05       	cpc	r25, r1
 1b2:	21 f4       	brne	.+8      	; 0x1bc <pinChange+0x12a>
 1b4:	85 b3       	in	r24, 0x15	; 21
 1b6:	8f 7e       	andi	r24, 0xEF	; 239
 1b8:	85 bb       	out	0x15, r24	; 21
 1ba:	08 95       	ret
 1bc:	89 31       	cpi	r24, 0x19	; 25
 1be:	91 05       	cpc	r25, r1
 1c0:	21 f4       	brne	.+8      	; 0x1ca <pinChange+0x138>
 1c2:	85 b3       	in	r24, 0x15	; 21
 1c4:	8f 7d       	andi	r24, 0xDF	; 223
 1c6:	85 bb       	out	0x15, r24	; 21
 1c8:	08 95       	ret
 1ca:	8a 31       	cpi	r24, 0x1A	; 26
 1cc:	91 05       	cpc	r25, r1
 1ce:	21 f4       	brne	.+8      	; 0x1d8 <pinChange+0x146>
 1d0:	85 b3       	in	r24, 0x15	; 21
 1d2:	8f 7b       	andi	r24, 0xBF	; 191
 1d4:	85 bb       	out	0x15, r24	; 21
 1d6:	08 95       	ret
 1d8:	8b 31       	cpi	r24, 0x1B	; 27
 1da:	91 05       	cpc	r25, r1
 1dc:	21 f4       	brne	.+8      	; 0x1e6 <pinChange+0x154>
 1de:	85 b3       	in	r24, 0x15	; 21
 1e0:	8f 77       	andi	r24, 0x7F	; 127
 1e2:	85 bb       	out	0x15, r24	; 21
 1e4:	08 95       	ret
 1e6:	8e 31       	cpi	r24, 0x1E	; 30
 1e8:	91 05       	cpc	r25, r1
 1ea:	21 f4       	brne	.+8      	; 0x1f4 <pinChange+0x162>
 1ec:	82 b3       	in	r24, 0x12	; 18
 1ee:	8e 7f       	andi	r24, 0xFE	; 254
 1f0:	82 bb       	out	0x12, r24	; 18
 1f2:	08 95       	ret
 1f4:	8f 31       	cpi	r24, 0x1F	; 31
 1f6:	91 05       	cpc	r25, r1
 1f8:	21 f4       	brne	.+8      	; 0x202 <pinChange+0x170>
 1fa:	82 b3       	in	r24, 0x12	; 18
 1fc:	8d 7f       	andi	r24, 0xFD	; 253
 1fe:	82 bb       	out	0x12, r24	; 18
 200:	08 95       	ret
 202:	80 32       	cpi	r24, 0x20	; 32
 204:	91 05       	cpc	r25, r1
 206:	21 f4       	brne	.+8      	; 0x210 <pinChange+0x17e>
 208:	82 b3       	in	r24, 0x12	; 18
 20a:	8b 7f       	andi	r24, 0xFB	; 251
 20c:	82 bb       	out	0x12, r24	; 18
 20e:	08 95       	ret
 210:	81 32       	cpi	r24, 0x21	; 33
 212:	91 05       	cpc	r25, r1
 214:	21 f4       	brne	.+8      	; 0x21e <pinChange+0x18c>
 216:	82 b3       	in	r24, 0x12	; 18
 218:	87 7f       	andi	r24, 0xF7	; 247
 21a:	82 bb       	out	0x12, r24	; 18
 21c:	08 95       	ret
 21e:	82 32       	cpi	r24, 0x22	; 34
 220:	91 05       	cpc	r25, r1
 222:	21 f4       	brne	.+8      	; 0x22c <pinChange+0x19a>
 224:	82 b3       	in	r24, 0x12	; 18
 226:	8f 7e       	andi	r24, 0xEF	; 239
 228:	82 bb       	out	0x12, r24	; 18
 22a:	08 95       	ret
 22c:	83 32       	cpi	r24, 0x23	; 35
 22e:	91 05       	cpc	r25, r1
 230:	21 f4       	brne	.+8      	; 0x23a <pinChange+0x1a8>
 232:	82 b3       	in	r24, 0x12	; 18
 234:	8f 7d       	andi	r24, 0xDF	; 223
 236:	82 bb       	out	0x12, r24	; 18
 238:	08 95       	ret
 23a:	84 32       	cpi	r24, 0x24	; 36
 23c:	91 05       	cpc	r25, r1
 23e:	21 f4       	brne	.+8      	; 0x248 <pinChange+0x1b6>
 240:	82 b3       	in	r24, 0x12	; 18
 242:	8f 7b       	andi	r24, 0xBF	; 191
 244:	82 bb       	out	0x12, r24	; 18
 246:	08 95       	ret
 248:	85 97       	sbiw	r24, 0x25	; 37
 24a:	09 f0       	breq	.+2      	; 0x24e <pinChange+0x1bc>
 24c:	e1 c0       	rjmp	.+450    	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
 24e:	82 b3       	in	r24, 0x12	; 18
 250:	8f 77       	andi	r24, 0x7F	; 127
 252:	82 bb       	out	0x12, r24	; 18
 254:	08 95       	ret
 256:	00 97       	sbiw	r24, 0x00	; 0
 258:	21 f4       	brne	.+8      	; 0x262 <pinChange+0x1d0>
 25a:	8b b3       	in	r24, 0x1b	; 27
 25c:	81 60       	ori	r24, 0x01	; 1
 25e:	8b bb       	out	0x1b, r24	; 27
 260:	08 95       	ret
 262:	81 30       	cpi	r24, 0x01	; 1
 264:	91 05       	cpc	r25, r1
 266:	21 f4       	brne	.+8      	; 0x270 <pinChange+0x1de>
 268:	8b b3       	in	r24, 0x1b	; 27
 26a:	82 60       	ori	r24, 0x02	; 2
 26c:	8b bb       	out	0x1b, r24	; 27
 26e:	08 95       	ret
 270:	82 30       	cpi	r24, 0x02	; 2
 272:	91 05       	cpc	r25, r1
 274:	21 f4       	brne	.+8      	; 0x27e <pinChange+0x1ec>
 276:	8b b3       	in	r24, 0x1b	; 27
 278:	84 60       	ori	r24, 0x04	; 4
 27a:	8b bb       	out	0x1b, r24	; 27
 27c:	08 95       	ret
 27e:	83 30       	cpi	r24, 0x03	; 3
 280:	91 05       	cpc	r25, r1
 282:	21 f4       	brne	.+8      	; 0x28c <pinChange+0x1fa>
 284:	8b b3       	in	r24, 0x1b	; 27
 286:	88 60       	ori	r24, 0x08	; 8
 288:	8b bb       	out	0x1b, r24	; 27
 28a:	08 95       	ret
 28c:	84 30       	cpi	r24, 0x04	; 4
 28e:	91 05       	cpc	r25, r1
 290:	21 f4       	brne	.+8      	; 0x29a <pinChange+0x208>
 292:	8b b3       	in	r24, 0x1b	; 27
 294:	80 61       	ori	r24, 0x10	; 16
 296:	8b bb       	out	0x1b, r24	; 27
 298:	08 95       	ret
 29a:	85 30       	cpi	r24, 0x05	; 5
 29c:	91 05       	cpc	r25, r1
 29e:	21 f4       	brne	.+8      	; 0x2a8 <pinChange+0x216>
 2a0:	8b b3       	in	r24, 0x1b	; 27
 2a2:	80 62       	ori	r24, 0x20	; 32
 2a4:	8b bb       	out	0x1b, r24	; 27
 2a6:	08 95       	ret
 2a8:	86 30       	cpi	r24, 0x06	; 6
 2aa:	91 05       	cpc	r25, r1
 2ac:	21 f4       	brne	.+8      	; 0x2b6 <pinChange+0x224>
 2ae:	8b b3       	in	r24, 0x1b	; 27
 2b0:	80 64       	ori	r24, 0x40	; 64
 2b2:	8b bb       	out	0x1b, r24	; 27
 2b4:	08 95       	ret
 2b6:	87 30       	cpi	r24, 0x07	; 7
 2b8:	91 05       	cpc	r25, r1
 2ba:	21 f4       	brne	.+8      	; 0x2c4 <pinChange+0x232>
 2bc:	8b b3       	in	r24, 0x1b	; 27
 2be:	80 68       	ori	r24, 0x80	; 128
 2c0:	8b bb       	out	0x1b, r24	; 27
 2c2:	08 95       	ret
 2c4:	8a 30       	cpi	r24, 0x0A	; 10
 2c6:	91 05       	cpc	r25, r1
 2c8:	21 f4       	brne	.+8      	; 0x2d2 <pinChange+0x240>
 2ca:	88 b3       	in	r24, 0x18	; 24
 2cc:	81 60       	ori	r24, 0x01	; 1
 2ce:	88 bb       	out	0x18, r24	; 24
 2d0:	08 95       	ret
 2d2:	8b 30       	cpi	r24, 0x0B	; 11
 2d4:	91 05       	cpc	r25, r1
 2d6:	21 f4       	brne	.+8      	; 0x2e0 <pinChange+0x24e>
 2d8:	88 b3       	in	r24, 0x18	; 24
 2da:	82 60       	ori	r24, 0x02	; 2
 2dc:	88 bb       	out	0x18, r24	; 24
 2de:	08 95       	ret
 2e0:	8c 30       	cpi	r24, 0x0C	; 12
 2e2:	91 05       	cpc	r25, r1
 2e4:	21 f4       	brne	.+8      	; 0x2ee <pinChange+0x25c>
 2e6:	88 b3       	in	r24, 0x18	; 24
 2e8:	84 60       	ori	r24, 0x04	; 4
 2ea:	88 bb       	out	0x18, r24	; 24
 2ec:	08 95       	ret
 2ee:	8d 30       	cpi	r24, 0x0D	; 13
 2f0:	91 05       	cpc	r25, r1
 2f2:	21 f4       	brne	.+8      	; 0x2fc <pinChange+0x26a>
 2f4:	88 b3       	in	r24, 0x18	; 24
 2f6:	88 60       	ori	r24, 0x08	; 8
 2f8:	88 bb       	out	0x18, r24	; 24
 2fa:	08 95       	ret
 2fc:	8e 30       	cpi	r24, 0x0E	; 14
 2fe:	91 05       	cpc	r25, r1
 300:	21 f4       	brne	.+8      	; 0x30a <pinChange+0x278>
 302:	88 b3       	in	r24, 0x18	; 24
 304:	80 61       	ori	r24, 0x10	; 16
 306:	88 bb       	out	0x18, r24	; 24
 308:	08 95       	ret
 30a:	8f 30       	cpi	r24, 0x0F	; 15
 30c:	91 05       	cpc	r25, r1
 30e:	21 f4       	brne	.+8      	; 0x318 <pinChange+0x286>
 310:	88 b3       	in	r24, 0x18	; 24
 312:	80 62       	ori	r24, 0x20	; 32
 314:	88 bb       	out	0x18, r24	; 24
 316:	08 95       	ret
 318:	80 31       	cpi	r24, 0x10	; 16
 31a:	91 05       	cpc	r25, r1
 31c:	21 f4       	brne	.+8      	; 0x326 <pinChange+0x294>
 31e:	88 b3       	in	r24, 0x18	; 24
 320:	80 64       	ori	r24, 0x40	; 64
 322:	88 bb       	out	0x18, r24	; 24
 324:	08 95       	ret
 326:	81 31       	cpi	r24, 0x11	; 17
 328:	91 05       	cpc	r25, r1
 32a:	21 f4       	brne	.+8      	; 0x334 <pinChange+0x2a2>
 32c:	88 b3       	in	r24, 0x18	; 24
 32e:	80 68       	ori	r24, 0x80	; 128
 330:	88 bb       	out	0x18, r24	; 24
 332:	08 95       	ret
 334:	84 31       	cpi	r24, 0x14	; 20
 336:	91 05       	cpc	r25, r1
 338:	21 f4       	brne	.+8      	; 0x342 <pinChange+0x2b0>
 33a:	85 b3       	in	r24, 0x15	; 21
 33c:	81 60       	ori	r24, 0x01	; 1
 33e:	85 bb       	out	0x15, r24	; 21
 340:	08 95       	ret
 342:	85 31       	cpi	r24, 0x15	; 21
 344:	91 05       	cpc	r25, r1
 346:	21 f4       	brne	.+8      	; 0x350 <pinChange+0x2be>
 348:	85 b3       	in	r24, 0x15	; 21
 34a:	82 60       	ori	r24, 0x02	; 2
 34c:	85 bb       	out	0x15, r24	; 21
 34e:	08 95       	ret
 350:	86 31       	cpi	r24, 0x16	; 22
 352:	91 05       	cpc	r25, r1
 354:	21 f4       	brne	.+8      	; 0x35e <pinChange+0x2cc>
 356:	85 b3       	in	r24, 0x15	; 21
 358:	84 60       	ori	r24, 0x04	; 4
 35a:	85 bb       	out	0x15, r24	; 21
 35c:	08 95       	ret
 35e:	87 31       	cpi	r24, 0x17	; 23
 360:	91 05       	cpc	r25, r1
 362:	21 f4       	brne	.+8      	; 0x36c <pinChange+0x2da>
 364:	85 b3       	in	r24, 0x15	; 21
 366:	88 60       	ori	r24, 0x08	; 8
 368:	85 bb       	out	0x15, r24	; 21
 36a:	08 95       	ret
 36c:	88 31       	cpi	r24, 0x18	; 24
 36e:	91 05       	cpc	r25, r1
 370:	21 f4       	brne	.+8      	; 0x37a <pinChange+0x2e8>
 372:	85 b3       	in	r24, 0x15	; 21
 374:	80 61       	ori	r24, 0x10	; 16
 376:	85 bb       	out	0x15, r24	; 21
 378:	08 95       	ret
 37a:	89 31       	cpi	r24, 0x19	; 25
 37c:	91 05       	cpc	r25, r1
 37e:	21 f4       	brne	.+8      	; 0x388 <pinChange+0x2f6>
 380:	85 b3       	in	r24, 0x15	; 21
 382:	80 62       	ori	r24, 0x20	; 32
 384:	85 bb       	out	0x15, r24	; 21
 386:	08 95       	ret
 388:	8a 31       	cpi	r24, 0x1A	; 26
 38a:	91 05       	cpc	r25, r1
 38c:	21 f4       	brne	.+8      	; 0x396 <pinChange+0x304>
 38e:	85 b3       	in	r24, 0x15	; 21
 390:	80 64       	ori	r24, 0x40	; 64
 392:	85 bb       	out	0x15, r24	; 21
 394:	08 95       	ret
 396:	8b 31       	cpi	r24, 0x1B	; 27
 398:	91 05       	cpc	r25, r1
 39a:	21 f4       	brne	.+8      	; 0x3a4 <pinChange+0x312>
 39c:	85 b3       	in	r24, 0x15	; 21
 39e:	80 68       	ori	r24, 0x80	; 128
 3a0:	85 bb       	out	0x15, r24	; 21
 3a2:	08 95       	ret
 3a4:	8e 31       	cpi	r24, 0x1E	; 30
 3a6:	91 05       	cpc	r25, r1
 3a8:	21 f4       	brne	.+8      	; 0x3b2 <pinChange+0x320>
 3aa:	82 b3       	in	r24, 0x12	; 18
 3ac:	81 60       	ori	r24, 0x01	; 1
 3ae:	82 bb       	out	0x12, r24	; 18
 3b0:	08 95       	ret
 3b2:	8f 31       	cpi	r24, 0x1F	; 31
 3b4:	91 05       	cpc	r25, r1
 3b6:	21 f4       	brne	.+8      	; 0x3c0 <pinChange+0x32e>
 3b8:	82 b3       	in	r24, 0x12	; 18
 3ba:	82 60       	ori	r24, 0x02	; 2
 3bc:	82 bb       	out	0x12, r24	; 18
 3be:	08 95       	ret
 3c0:	80 32       	cpi	r24, 0x20	; 32
 3c2:	91 05       	cpc	r25, r1
 3c4:	21 f4       	brne	.+8      	; 0x3ce <pinChange+0x33c>
 3c6:	82 b3       	in	r24, 0x12	; 18
 3c8:	84 60       	ori	r24, 0x04	; 4
 3ca:	82 bb       	out	0x12, r24	; 18
 3cc:	08 95       	ret
 3ce:	81 32       	cpi	r24, 0x21	; 33
 3d0:	91 05       	cpc	r25, r1
 3d2:	21 f4       	brne	.+8      	; 0x3dc <pinChange+0x34a>
 3d4:	82 b3       	in	r24, 0x12	; 18
 3d6:	88 60       	ori	r24, 0x08	; 8
 3d8:	82 bb       	out	0x12, r24	; 18
 3da:	08 95       	ret
 3dc:	82 32       	cpi	r24, 0x22	; 34
 3de:	91 05       	cpc	r25, r1
 3e0:	21 f4       	brne	.+8      	; 0x3ea <pinChange+0x358>
 3e2:	82 b3       	in	r24, 0x12	; 18
 3e4:	80 61       	ori	r24, 0x10	; 16
 3e6:	82 bb       	out	0x12, r24	; 18
 3e8:	08 95       	ret
 3ea:	83 32       	cpi	r24, 0x23	; 35
 3ec:	91 05       	cpc	r25, r1
 3ee:	21 f4       	brne	.+8      	; 0x3f8 <pinChange+0x366>
 3f0:	82 b3       	in	r24, 0x12	; 18
 3f2:	80 62       	ori	r24, 0x20	; 32
 3f4:	82 bb       	out	0x12, r24	; 18
 3f6:	08 95       	ret
 3f8:	84 32       	cpi	r24, 0x24	; 36
 3fa:	91 05       	cpc	r25, r1
 3fc:	21 f4       	brne	.+8      	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 3fe:	82 b3       	in	r24, 0x12	; 18
 400:	80 64       	ori	r24, 0x40	; 64
 402:	82 bb       	out	0x12, r24	; 18
 404:	08 95       	ret
 406:	85 97       	sbiw	r24, 0x25	; 37
 408:	19 f4       	brne	.+6      	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
 40a:	82 b3       	in	r24, 0x12	; 18
 40c:	80 68       	ori	r24, 0x80	; 128
 40e:	82 bb       	out	0x12, r24	; 18
 410:	08 95       	ret

00000412 <Lcd4_Port>:
 412:	cf 93       	push	r28
 414:	c8 2f       	mov	r28, r24
 416:	80 ff       	sbrs	r24, 0
 418:	07 c0       	rjmp	.+14     	; 0x428 <Lcd4_Port+0x16>
 41a:	61 e0       	ldi	r22, 0x01	; 1
 41c:	70 e0       	ldi	r23, 0x00	; 0
 41e:	82 e2       	ldi	r24, 0x22	; 34
 420:	90 e0       	ldi	r25, 0x00	; 0
 422:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 426:	06 c0       	rjmp	.+12     	; 0x434 <Lcd4_Port+0x22>
 428:	60 e0       	ldi	r22, 0x00	; 0
 42a:	70 e0       	ldi	r23, 0x00	; 0
 42c:	82 e2       	ldi	r24, 0x22	; 34
 42e:	90 e0       	ldi	r25, 0x00	; 0
 430:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 434:	c1 ff       	sbrs	r28, 1
 436:	07 c0       	rjmp	.+14     	; 0x446 <Lcd4_Port+0x34>
 438:	61 e0       	ldi	r22, 0x01	; 1
 43a:	70 e0       	ldi	r23, 0x00	; 0
 43c:	83 e2       	ldi	r24, 0x23	; 35
 43e:	90 e0       	ldi	r25, 0x00	; 0
 440:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 444:	06 c0       	rjmp	.+12     	; 0x452 <Lcd4_Port+0x40>
 446:	60 e0       	ldi	r22, 0x00	; 0
 448:	70 e0       	ldi	r23, 0x00	; 0
 44a:	83 e2       	ldi	r24, 0x23	; 35
 44c:	90 e0       	ldi	r25, 0x00	; 0
 44e:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 452:	c2 ff       	sbrs	r28, 2
 454:	07 c0       	rjmp	.+14     	; 0x464 <Lcd4_Port+0x52>
 456:	61 e0       	ldi	r22, 0x01	; 1
 458:	70 e0       	ldi	r23, 0x00	; 0
 45a:	84 e2       	ldi	r24, 0x24	; 36
 45c:	90 e0       	ldi	r25, 0x00	; 0
 45e:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 462:	06 c0       	rjmp	.+12     	; 0x470 <Lcd4_Port+0x5e>
 464:	60 e0       	ldi	r22, 0x00	; 0
 466:	70 e0       	ldi	r23, 0x00	; 0
 468:	84 e2       	ldi	r24, 0x24	; 36
 46a:	90 e0       	ldi	r25, 0x00	; 0
 46c:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 470:	c3 ff       	sbrs	r28, 3
 472:	07 c0       	rjmp	.+14     	; 0x482 <Lcd4_Port+0x70>
 474:	61 e0       	ldi	r22, 0x01	; 1
 476:	70 e0       	ldi	r23, 0x00	; 0
 478:	85 e2       	ldi	r24, 0x25	; 37
 47a:	90 e0       	ldi	r25, 0x00	; 0
 47c:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 480:	06 c0       	rjmp	.+12     	; 0x48e <Lcd4_Port+0x7c>
 482:	60 e0       	ldi	r22, 0x00	; 0
 484:	70 e0       	ldi	r23, 0x00	; 0
 486:	85 e2       	ldi	r24, 0x25	; 37
 488:	90 e0       	ldi	r25, 0x00	; 0
 48a:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 48e:	cf 91       	pop	r28
 490:	08 95       	ret

00000492 <Lcd4_Cmd>:
 492:	cf 93       	push	r28
 494:	c8 2f       	mov	r28, r24
 496:	60 e0       	ldi	r22, 0x00	; 0
 498:	70 e0       	ldi	r23, 0x00	; 0
 49a:	8a e1       	ldi	r24, 0x1A	; 26
 49c:	90 e0       	ldi	r25, 0x00	; 0
 49e:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 4a2:	8c 2f       	mov	r24, r28
 4a4:	0e 94 09 02 	call	0x412	; 0x412 <Lcd4_Port>
 4a8:	61 e0       	ldi	r22, 0x01	; 1
 4aa:	70 e0       	ldi	r23, 0x00	; 0
 4ac:	8b e1       	ldi	r24, 0x1B	; 27
 4ae:	90 e0       	ldi	r25, 0x00	; 0
 4b0:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 4b4:	89 ef       	ldi	r24, 0xF9	; 249
 4b6:	90 e0       	ldi	r25, 0x00	; 0
 4b8:	01 97       	sbiw	r24, 0x01	; 1
 4ba:	f1 f7       	brne	.-4      	; 0x4b8 <Lcd4_Cmd+0x26>
 4bc:	00 c0       	rjmp	.+0      	; 0x4be <Lcd4_Cmd+0x2c>
 4be:	00 00       	nop
 4c0:	60 e0       	ldi	r22, 0x00	; 0
 4c2:	70 e0       	ldi	r23, 0x00	; 0
 4c4:	8b e1       	ldi	r24, 0x1B	; 27
 4c6:	90 e0       	ldi	r25, 0x00	; 0
 4c8:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 4cc:	89 ef       	ldi	r24, 0xF9	; 249
 4ce:	90 e0       	ldi	r25, 0x00	; 0
 4d0:	01 97       	sbiw	r24, 0x01	; 1
 4d2:	f1 f7       	brne	.-4      	; 0x4d0 <Lcd4_Cmd+0x3e>
 4d4:	00 c0       	rjmp	.+0      	; 0x4d6 <Lcd4_Cmd+0x44>
 4d6:	00 00       	nop
 4d8:	cf 91       	pop	r28
 4da:	08 95       	ret

000004dc <Lcd4_Set_Cursor>:
 4dc:	cf 93       	push	r28
 4de:	81 30       	cpi	r24, 0x01	; 1
 4e0:	61 f4       	brne	.+24     	; 0x4fa <Lcd4_Set_Cursor+0x1e>
 4e2:	80 e8       	ldi	r24, 0x80	; 128
 4e4:	86 0f       	add	r24, r22
 4e6:	c6 2f       	mov	r28, r22
 4e8:	cf 70       	andi	r28, 0x0F	; 15
 4ea:	82 95       	swap	r24
 4ec:	8f 70       	andi	r24, 0x0F	; 15
 4ee:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Cmd>
 4f2:	8c 2f       	mov	r24, r28
 4f4:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Cmd>
 4f8:	0d c0       	rjmp	.+26     	; 0x514 <Lcd4_Set_Cursor+0x38>
 4fa:	82 30       	cpi	r24, 0x02	; 2
 4fc:	59 f4       	brne	.+22     	; 0x514 <Lcd4_Set_Cursor+0x38>
 4fe:	80 ec       	ldi	r24, 0xC0	; 192
 500:	86 0f       	add	r24, r22
 502:	c6 2f       	mov	r28, r22
 504:	cf 70       	andi	r28, 0x0F	; 15
 506:	82 95       	swap	r24
 508:	8f 70       	andi	r24, 0x0F	; 15
 50a:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Cmd>
 50e:	8c 2f       	mov	r24, r28
 510:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Cmd>
 514:	cf 91       	pop	r28
 516:	08 95       	ret

00000518 <Lcd4_Init>:
 518:	80 e0       	ldi	r24, 0x00	; 0
 51a:	0e 94 09 02 	call	0x412	; 0x412 <Lcd4_Port>
 51e:	87 e8       	ldi	r24, 0x87	; 135
 520:	93 e1       	ldi	r25, 0x13	; 19
 522:	01 97       	sbiw	r24, 0x01	; 1
 524:	f1 f7       	brne	.-4      	; 0x522 <Lcd4_Init+0xa>
 526:	00 c0       	rjmp	.+0      	; 0x528 <Lcd4_Init+0x10>
 528:	00 00       	nop
 52a:	83 e0       	ldi	r24, 0x03	; 3
 52c:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Cmd>
 530:	81 ee       	ldi	r24, 0xE1	; 225
 532:	94 e0       	ldi	r25, 0x04	; 4
 534:	01 97       	sbiw	r24, 0x01	; 1
 536:	f1 f7       	brne	.-4      	; 0x534 <Lcd4_Init+0x1c>
 538:	00 c0       	rjmp	.+0      	; 0x53a <Lcd4_Init+0x22>
 53a:	00 00       	nop
 53c:	83 e0       	ldi	r24, 0x03	; 3
 53e:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Cmd>
 542:	8d eb       	ldi	r24, 0xBD	; 189
 544:	9a e0       	ldi	r25, 0x0A	; 10
 546:	01 97       	sbiw	r24, 0x01	; 1
 548:	f1 f7       	brne	.-4      	; 0x546 <Lcd4_Init+0x2e>
 54a:	00 c0       	rjmp	.+0      	; 0x54c <Lcd4_Init+0x34>
 54c:	00 00       	nop
 54e:	83 e0       	ldi	r24, 0x03	; 3
 550:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Cmd>
 554:	82 e0       	ldi	r24, 0x02	; 2
 556:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Cmd>
 55a:	82 e0       	ldi	r24, 0x02	; 2
 55c:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Cmd>
 560:	88 e0       	ldi	r24, 0x08	; 8
 562:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Cmd>
 566:	80 e0       	ldi	r24, 0x00	; 0
 568:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Cmd>
 56c:	8c e0       	ldi	r24, 0x0C	; 12
 56e:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Cmd>
 572:	80 e0       	ldi	r24, 0x00	; 0
 574:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Cmd>
 578:	86 e0       	ldi	r24, 0x06	; 6
 57a:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Cmd>
 57e:	08 95       	ret

00000580 <Lcd4_Write_Char>:
 580:	cf 93       	push	r28
 582:	df 93       	push	r29
 584:	d8 2f       	mov	r29, r24
 586:	df 70       	andi	r29, 0x0F	; 15
 588:	c8 2f       	mov	r28, r24
 58a:	c0 7f       	andi	r28, 0xF0	; 240
 58c:	61 e0       	ldi	r22, 0x01	; 1
 58e:	70 e0       	ldi	r23, 0x00	; 0
 590:	8a e1       	ldi	r24, 0x1A	; 26
 592:	90 e0       	ldi	r25, 0x00	; 0
 594:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 598:	8c 2f       	mov	r24, r28
 59a:	82 95       	swap	r24
 59c:	8f 70       	andi	r24, 0x0F	; 15
 59e:	0e 94 09 02 	call	0x412	; 0x412 <Lcd4_Port>
 5a2:	61 e0       	ldi	r22, 0x01	; 1
 5a4:	70 e0       	ldi	r23, 0x00	; 0
 5a6:	8b e1       	ldi	r24, 0x1B	; 27
 5a8:	90 e0       	ldi	r25, 0x00	; 0
 5aa:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 5ae:	89 ef       	ldi	r24, 0xF9	; 249
 5b0:	90 e0       	ldi	r25, 0x00	; 0
 5b2:	01 97       	sbiw	r24, 0x01	; 1
 5b4:	f1 f7       	brne	.-4      	; 0x5b2 <Lcd4_Write_Char+0x32>
 5b6:	00 c0       	rjmp	.+0      	; 0x5b8 <Lcd4_Write_Char+0x38>
 5b8:	00 00       	nop
 5ba:	60 e0       	ldi	r22, 0x00	; 0
 5bc:	70 e0       	ldi	r23, 0x00	; 0
 5be:	8b e1       	ldi	r24, 0x1B	; 27
 5c0:	90 e0       	ldi	r25, 0x00	; 0
 5c2:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 5c6:	89 ef       	ldi	r24, 0xF9	; 249
 5c8:	90 e0       	ldi	r25, 0x00	; 0
 5ca:	01 97       	sbiw	r24, 0x01	; 1
 5cc:	f1 f7       	brne	.-4      	; 0x5ca <Lcd4_Write_Char+0x4a>
 5ce:	00 c0       	rjmp	.+0      	; 0x5d0 <Lcd4_Write_Char+0x50>
 5d0:	00 00       	nop
 5d2:	8d 2f       	mov	r24, r29
 5d4:	0e 94 09 02 	call	0x412	; 0x412 <Lcd4_Port>
 5d8:	61 e0       	ldi	r22, 0x01	; 1
 5da:	70 e0       	ldi	r23, 0x00	; 0
 5dc:	8b e1       	ldi	r24, 0x1B	; 27
 5de:	90 e0       	ldi	r25, 0x00	; 0
 5e0:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 5e4:	89 ef       	ldi	r24, 0xF9	; 249
 5e6:	90 e0       	ldi	r25, 0x00	; 0
 5e8:	01 97       	sbiw	r24, 0x01	; 1
 5ea:	f1 f7       	brne	.-4      	; 0x5e8 <Lcd4_Write_Char+0x68>
 5ec:	00 c0       	rjmp	.+0      	; 0x5ee <Lcd4_Write_Char+0x6e>
 5ee:	00 00       	nop
 5f0:	60 e0       	ldi	r22, 0x00	; 0
 5f2:	70 e0       	ldi	r23, 0x00	; 0
 5f4:	8b e1       	ldi	r24, 0x1B	; 27
 5f6:	90 e0       	ldi	r25, 0x00	; 0
 5f8:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 5fc:	89 ef       	ldi	r24, 0xF9	; 249
 5fe:	90 e0       	ldi	r25, 0x00	; 0
 600:	01 97       	sbiw	r24, 0x01	; 1
 602:	f1 f7       	brne	.-4      	; 0x600 <Lcd4_Write_Char+0x80>
 604:	00 c0       	rjmp	.+0      	; 0x606 <Lcd4_Write_Char+0x86>
 606:	00 00       	nop
 608:	df 91       	pop	r29
 60a:	cf 91       	pop	r28
 60c:	08 95       	ret

0000060e <Lcd4_Write_String>:
 60e:	0f 93       	push	r16
 610:	1f 93       	push	r17
 612:	cf 93       	push	r28
 614:	df 93       	push	r29
 616:	8c 01       	movw	r16, r24
 618:	c0 e0       	ldi	r28, 0x00	; 0
 61a:	d0 e0       	ldi	r29, 0x00	; 0
 61c:	03 c0       	rjmp	.+6      	; 0x624 <Lcd4_Write_String+0x16>
 61e:	0e 94 c0 02 	call	0x580	; 0x580 <Lcd4_Write_Char>
 622:	21 96       	adiw	r28, 0x01	; 1
 624:	f8 01       	movw	r30, r16
 626:	ec 0f       	add	r30, r28
 628:	fd 1f       	adc	r31, r29
 62a:	80 81       	ld	r24, Z
 62c:	81 11       	cpse	r24, r1
 62e:	f7 cf       	rjmp	.-18     	; 0x61e <Lcd4_Write_String+0x10>
 630:	df 91       	pop	r29
 632:	cf 91       	pop	r28
 634:	1f 91       	pop	r17
 636:	0f 91       	pop	r16
 638:	08 95       	ret

0000063a <__vector_9>:
#include "lcd.h"

volatile int overflowCount;
volatile int timeElapsed = 0;

ISR(TIMER1_OVF_vect) {
 63a:	1f 92       	push	r1
 63c:	0f 92       	push	r0
 63e:	0f b6       	in	r0, 0x3f	; 63
 640:	0f 92       	push	r0
 642:	11 24       	eor	r1, r1
 644:	8f 93       	push	r24
 646:	9f 93       	push	r25
	overflowCount++;
 648:	80 91 72 00 	lds	r24, 0x0072	; 0x800072 <overflowCount>
 64c:	90 91 73 00 	lds	r25, 0x0073	; 0x800073 <overflowCount+0x1>
 650:	01 96       	adiw	r24, 0x01	; 1
 652:	90 93 73 00 	sts	0x0073, r25	; 0x800073 <overflowCount+0x1>
 656:	80 93 72 00 	sts	0x0072, r24	; 0x800072 <overflowCount>
	if (overflowCount >= 16) {
 65a:	80 91 72 00 	lds	r24, 0x0072	; 0x800072 <overflowCount>
 65e:	90 91 73 00 	lds	r25, 0x0073	; 0x800073 <overflowCount+0x1>
 662:	40 97       	sbiw	r24, 0x10	; 16
 664:	6c f0       	brlt	.+26     	; 0x680 <__vector_9+0x46>
		timeElapsed += 1;
 666:	80 91 70 00 	lds	r24, 0x0070	; 0x800070 <__data_end>
 66a:	90 91 71 00 	lds	r25, 0x0071	; 0x800071 <__data_end+0x1>
 66e:	01 96       	adiw	r24, 0x01	; 1
 670:	90 93 71 00 	sts	0x0071, r25	; 0x800071 <__data_end+0x1>
 674:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__data_end>
		overflowCount = 0;
 678:	10 92 73 00 	sts	0x0073, r1	; 0x800073 <overflowCount+0x1>
 67c:	10 92 72 00 	sts	0x0072, r1	; 0x800072 <overflowCount>
	}
}
 680:	9f 91       	pop	r25
 682:	8f 91       	pop	r24
 684:	0f 90       	pop	r0
 686:	0f be       	out	0x3f, r0	; 63
 688:	0f 90       	pop	r0
 68a:	1f 90       	pop	r1
 68c:	18 95       	reti

0000068e <USART_init>:

void USART_init(void) {
	UCSRA = 0b00000010; // double speed (/8)
 68e:	82 e0       	ldi	r24, 0x02	; 2
 690:	8b b9       	out	0x0b, r24	; 11
	UCSRB = 0b00001000; // only tx
 692:	88 e0       	ldi	r24, 0x08	; 8
 694:	8a b9       	out	0x0a, r24	; 10
	UCSRC = 0b10000110; // async, no parity, 1 stop, 8 data
 696:	86 e8       	ldi	r24, 0x86	; 134
 698:	80 bd       	out	0x20, r24	; 32
	
	UBRRH = 0;
 69a:	10 bc       	out	0x20, r1	; 32
	UBRRL = 12; // baud rate 9600 bps
 69c:	8c e0       	ldi	r24, 0x0C	; 12
 69e:	89 b9       	out	0x09, r24	; 9
 6a0:	08 95       	ret

000006a2 <read_adc>:
double read_adc()
{
	int v_adch=0, v_adcl=0, temp;
	double step_size = 0.0048828125, value;
	
	v_adcl = (int) ADCL;
 6a2:	84 b1       	in	r24, 0x04	; 4
 6a4:	90 e0       	ldi	r25, 0x00	; 0
	v_adch = (int) ADCH;
 6a6:	65 b1       	in	r22, 0x05	; 5
 6a8:	70 e0       	ldi	r23, 0x00	; 0
	
	PORTB = ADCH;
 6aa:	25 b1       	in	r18, 0x05	; 5
 6ac:	28 bb       	out	0x18, r18	; 24
	
	value = v_adch*4 + v_adcl/64;
 6ae:	66 0f       	add	r22, r22
 6b0:	77 1f       	adc	r23, r23
 6b2:	66 0f       	add	r22, r22
 6b4:	77 1f       	adc	r23, r23
 6b6:	08 2e       	mov	r0, r24
 6b8:	89 2f       	mov	r24, r25
 6ba:	00 0c       	add	r0, r0
 6bc:	88 1f       	adc	r24, r24
 6be:	99 0b       	sbc	r25, r25
 6c0:	00 0c       	add	r0, r0
 6c2:	88 1f       	adc	r24, r24
 6c4:	99 1f       	adc	r25, r25
 6c6:	68 0f       	add	r22, r24
 6c8:	79 1f       	adc	r23, r25
 6ca:	07 2e       	mov	r0, r23
 6cc:	00 0c       	add	r0, r0
 6ce:	88 0b       	sbc	r24, r24
 6d0:	99 0b       	sbc	r25, r25
 6d2:	0e 94 bf 05 	call	0xb7e	; 0xb7e <__floatsisf>
	value = value*step_size;
 6d6:	20 e0       	ldi	r18, 0x00	; 0
 6d8:	30 e0       	ldi	r19, 0x00	; 0
 6da:	40 ea       	ldi	r20, 0xA0	; 160
 6dc:	5b e3       	ldi	r21, 0x3B	; 59
 6de:	0e 94 74 06 	call	0xce8	; 0xce8 <__mulsf3>
	
	temp = (int)(value * 100 + .5);
 6e2:	20 e0       	ldi	r18, 0x00	; 0
 6e4:	30 e0       	ldi	r19, 0x00	; 0
 6e6:	48 ec       	ldi	r20, 0xC8	; 200
 6e8:	52 e4       	ldi	r21, 0x42	; 66
 6ea:	0e 94 74 06 	call	0xce8	; 0xce8 <__mulsf3>
 6ee:	20 e0       	ldi	r18, 0x00	; 0
 6f0:	30 e0       	ldi	r19, 0x00	; 0
 6f2:	40 e0       	ldi	r20, 0x00	; 0
 6f4:	5f e3       	ldi	r21, 0x3F	; 63
 6f6:	0e 94 a4 04 	call	0x948	; 0x948 <__addsf3>
 6fa:	0e 94 87 05 	call	0xb0e	; 0xb0e <__fixsfsi>
	value = (double) temp/100;
 6fe:	07 2e       	mov	r0, r23
 700:	00 0c       	add	r0, r0
 702:	88 0b       	sbc	r24, r24
 704:	99 0b       	sbc	r25, r25
 706:	0e 94 bf 05 	call	0xb7e	; 0xb7e <__floatsisf>
 70a:	20 e0       	ldi	r18, 0x00	; 0
 70c:	30 e0       	ldi	r19, 0x00	; 0
 70e:	48 ec       	ldi	r20, 0xC8	; 200
 710:	52 e4       	ldi	r21, 0x42	; 66
 712:	0e 94 15 05 	call	0xa2a	; 0xa2a <__divsf3>
	
	return value;
}
 716:	08 95       	ret

00000718 <UART_send>:

void UART_send(unsigned char data) {
	while ((UCSRA & (1 << UDRE)) == 0x00);
 718:	5d 9b       	sbis	0x0b, 5	; 11
 71a:	fe cf       	rjmp	.-4      	; 0x718 <UART_send>
	UDR = data;
 71c:	8c b9       	out	0x0c, r24	; 12
 71e:	08 95       	ret

00000720 <main>:
}

int main(void)
{
 720:	cf 93       	push	r28
 722:	df 93       	push	r29
 724:	00 d0       	rcall	.+0      	; 0x726 <main+0x6>
 726:	00 d0       	rcall	.+0      	; 0x728 <main+0x8>
 728:	1f 92       	push	r1
 72a:	cd b7       	in	r28, 0x3d	; 61
 72c:	de b7       	in	r29, 0x3e	; 62
	float voltage;
	//int result;
	int i;
	int fingerInSight = 0;
	int totalFingers = 0;
	timeElapsed = 0;
 72e:	10 92 71 00 	sts	0x0071, r1	; 0x800071 <__data_end+0x1>
 732:	10 92 70 00 	sts	0x0070, r1	; 0x800070 <__data_end>
	//char val[5];
	//int full;
	//int floating;
	overflowCount = 0;
 736:	10 92 73 00 	sts	0x0073, r1	; 0x800073 <overflowCount+0x1>
 73a:	10 92 72 00 	sts	0x0072, r1	; 0x800072 <overflowCount>
	char numberArr[5];
	int input = 1;
	int fdig=0, sdig=0, tdig=0;
	DDRB = 0xFF;
 73e:	8f ef       	ldi	r24, 0xFF	; 255
 740:	87 bb       	out	0x17, r24	; 23
	DDRD = 0xFF;
 742:	81 bb       	out	0x11, r24	; 17
	DDRC = 0xFF;
 744:	84 bb       	out	0x14, r24	; 20
	// configure ADC
	ADMUX = 0b01100111; // 3.0, Right, ADC7
 746:	87 e6       	ldi	r24, 0x67	; 103
 748:	87 b9       	out	0x07, r24	; 7
	ADCSRA = 0b10000110; // 64
 74a:	86 e8       	ldi	r24, 0x86	; 134
 74c:	86 b9       	out	0x06, r24	; 6
	Lcd4_Init();
 74e:	0e 94 8c 02 	call	0x518	; 0x518 <Lcd4_Init>
	// configure timer
	TCCR1A = 0b00000000; // normal mode
 752:	1f bc       	out	0x2f, r1	; 47
	TCCR1B = 0b00000001; // no prescaler
 754:	81 e0       	ldi	r24, 0x01	; 1
 756:	8e bd       	out	0x2e, r24	; 46
	TIMSK = 0b00000100; // timer 1
 758:	84 e0       	ldi	r24, 0x04	; 4
 75a:	89 bf       	out	0x39, r24	; 57
	sei();
 75c:	78 94       	sei
	// set comm
	USART_init();
 75e:	0e 94 47 03 	call	0x68e	; 0x68e <USART_init>
	//int full;
	//int floating;
	overflowCount = 0;
	char numberArr[5];
	int input = 1;
	int fdig=0, sdig=0, tdig=0;
 762:	81 2c       	mov	r8, r1
 764:	91 2c       	mov	r9, r1
 766:	c1 2c       	mov	r12, r1
 768:	d1 2c       	mov	r13, r1
 76a:	a1 2c       	mov	r10, r1
 76c:	b1 2c       	mov	r11, r1
	//char val[5];
	//int full;
	//int floating;
	overflowCount = 0;
	char numberArr[5];
	int input = 1;
 76e:	ee 24       	eor	r14, r14
 770:	e3 94       	inc	r14
 772:	f1 2c       	mov	r15, r1
int main(void)
{
	float voltage;
	//int result;
	int i;
	int fingerInSight = 0;
 774:	00 e0       	ldi	r16, 0x00	; 0
 776:	10 e0       	ldi	r17, 0x00	; 0
	USART_init();
	
	while(1)
	{
		// start conversion, loop until end
		ADCSRA |= (1 << ADSC);
 778:	86 b1       	in	r24, 0x06	; 6
 77a:	80 64       	ori	r24, 0x40	; 64
 77c:	86 b9       	out	0x06, r24	; 6
		while (ADCSRA & (1 << ADSC)) {;}
 77e:	36 99       	sbic	0x06, 6	; 6
 780:	fe cf       	rjmp	.-4      	; 0x77e <main+0x5e>
		
		// voltage calculation from ADC output
		//result = ADC;
		//voltage = (result * 5.0) / 1024;
		voltage = read_adc();
 782:	0e 94 51 03 	call	0x6a2	; 0x6a2 <read_adc>
 786:	2b 01       	movw	r4, r22
 788:	3c 01       	movw	r6, r24
		
		// object detection
		if (!fingerInSight && voltage < 2) {
 78a:	01 15       	cp	r16, r1
 78c:	11 05       	cpc	r17, r1
 78e:	29 f5       	brne	.+74     	; 0x7da <main+0xba>
 790:	20 e0       	ldi	r18, 0x00	; 0
 792:	30 e0       	ldi	r19, 0x00	; 0
 794:	40 e0       	ldi	r20, 0x00	; 0
 796:	50 e4       	ldi	r21, 0x40	; 64
 798:	0e 94 10 05 	call	0xa20	; 0xa20 <__cmpsf2>
 79c:	88 23       	and	r24, r24
 79e:	ec f4       	brge	.+58     	; 0x7da <main+0xba>
			if(input==1)
 7a0:	81 e0       	ldi	r24, 0x01	; 1
 7a2:	e8 16       	cp	r14, r24
 7a4:	f1 04       	cpc	r15, r1
 7a6:	21 f4       	brne	.+8      	; 0x7b0 <main+0x90>
			{
				fdig+=1;
 7a8:	8f ef       	ldi	r24, 0xFF	; 255
 7aa:	a8 1a       	sub	r10, r24
 7ac:	b8 0a       	sbc	r11, r24
 7ae:	0f c0       	rjmp	.+30     	; 0x7ce <main+0xae>
			}
			else if(input==2)
 7b0:	82 e0       	ldi	r24, 0x02	; 2
 7b2:	e8 16       	cp	r14, r24
 7b4:	f1 04       	cpc	r15, r1
 7b6:	21 f4       	brne	.+8      	; 0x7c0 <main+0xa0>
			{
				sdig+=1;
 7b8:	8f ef       	ldi	r24, 0xFF	; 255
 7ba:	c8 1a       	sub	r12, r24
 7bc:	d8 0a       	sbc	r13, r24
 7be:	07 c0       	rjmp	.+14     	; 0x7ce <main+0xae>
			}
			else if(input==3)
 7c0:	83 e0       	ldi	r24, 0x03	; 3
 7c2:	e8 16       	cp	r14, r24
 7c4:	f1 04       	cpc	r15, r1
 7c6:	19 f4       	brne	.+6      	; 0x7ce <main+0xae>
			{
				tdig+=1;
 7c8:	8f ef       	ldi	r24, 0xFF	; 255
 7ca:	88 1a       	sub	r8, r24
 7cc:	98 0a       	sbc	r9, r24
			}
			totalFingers += 1;
			timeElapsed = 0;
 7ce:	10 92 71 00 	sts	0x0071, r1	; 0x800071 <__data_end+0x1>
 7d2:	10 92 70 00 	sts	0x0070, r1	; 0x800070 <__data_end>
			fingerInSight = 1;
 7d6:	01 e0       	ldi	r16, 0x01	; 1
 7d8:	10 e0       	ldi	r17, 0x00	; 0
		}
		if (fingerInSight && voltage > 2){
 7da:	01 15       	cp	r16, r1
 7dc:	11 05       	cpc	r17, r1
 7de:	81 f0       	breq	.+32     	; 0x800 <__DATA_REGION_LENGTH__>
 7e0:	20 e0       	ldi	r18, 0x00	; 0
 7e2:	30 e0       	ldi	r19, 0x00	; 0
 7e4:	40 e0       	ldi	r20, 0x00	; 0
 7e6:	50 e4       	ldi	r21, 0x40	; 64
 7e8:	c3 01       	movw	r24, r6
 7ea:	b2 01       	movw	r22, r4
 7ec:	0e 94 6f 06 	call	0xcde	; 0xcde <__gesf2>
 7f0:	18 16       	cp	r1, r24
 7f2:	34 f4       	brge	.+12     	; 0x800 <__DATA_REGION_LENGTH__>
			timeElapsed = 0;
 7f4:	10 92 71 00 	sts	0x0071, r1	; 0x800071 <__data_end+0x1>
 7f8:	10 92 70 00 	sts	0x0070, r1	; 0x800070 <__data_end>
			fingerInSight = 0;
 7fc:	00 e0       	ldi	r16, 0x00	; 0
 7fe:	10 e0       	ldi	r17, 0x00	; 0
		
		//itoa(floating, val, 10);
		//Lcd4_Write_String(val);
		
		// display in LCD
		Lcd4_Set_Cursor(1, 1);
 800:	61 e0       	ldi	r22, 0x01	; 1
 802:	81 e0       	ldi	r24, 0x01	; 1
 804:	0e 94 6e 02 	call	0x4dc	; 0x4dc <Lcd4_Set_Cursor>
		if (timeElapsed > 6 && fingerInSight) {
 808:	80 91 70 00 	lds	r24, 0x0070	; 0x800070 <__data_end>
 80c:	90 91 71 00 	lds	r25, 0x0071	; 0x800071 <__data_end+0x1>
 810:	07 97       	sbiw	r24, 0x07	; 7
 812:	7c f0       	brlt	.+30     	; 0x832 <__DATA_REGION_LENGTH__+0x32>
 814:	01 15       	cp	r16, r1
 816:	11 05       	cpc	r17, r1
 818:	61 f0       	breq	.+24     	; 0x832 <__DATA_REGION_LENGTH__+0x32>
			
			input=1;
			fdig = 0;
			sdig = 0;
			tdig = 0;
			ADMUX = 0b01100111;
 81a:	87 e6       	ldi	r24, 0x67	; 103
 81c:	87 b9       	out	0x07, r24	; 7
			// halt
			
			input=1;
			fdig = 0;
			sdig = 0;
			tdig = 0;
 81e:	81 2c       	mov	r8, r1
 820:	91 2c       	mov	r9, r1
		if (timeElapsed > 6 && fingerInSight) {
			// halt
			
			input=1;
			fdig = 0;
			sdig = 0;
 822:	c1 2c       	mov	r12, r1
 824:	d1 2c       	mov	r13, r1
		Lcd4_Set_Cursor(1, 1);
		if (timeElapsed > 6 && fingerInSight) {
			// halt
			
			input=1;
			fdig = 0;
 826:	a1 2c       	mov	r10, r1
 828:	b1 2c       	mov	r11, r1
		// display in LCD
		Lcd4_Set_Cursor(1, 1);
		if (timeElapsed > 6 && fingerInSight) {
			// halt
			
			input=1;
 82a:	ee 24       	eor	r14, r14
 82c:	e3 94       	inc	r14
 82e:	f1 2c       	mov	r15, r1
			fdig = 0;
			sdig = 0;
			tdig = 0;
			ADMUX = 0b01100111;
 830:	51 c0       	rjmp	.+162    	; 0x8d4 <__stack+0x75>
			
		}
		
		else if (timeElapsed > 6 && !fingerInSight) {
 832:	80 91 70 00 	lds	r24, 0x0070	; 0x800070 <__data_end>
 836:	90 91 71 00 	lds	r25, 0x0071	; 0x800071 <__data_end+0x1>
 83a:	07 97       	sbiw	r24, 0x07	; 7
 83c:	0c f4       	brge	.+2      	; 0x840 <__DATA_REGION_LENGTH__+0x40>
 83e:	4a c0       	rjmp	.+148    	; 0x8d4 <__stack+0x75>
 840:	01 15       	cp	r16, r1
 842:	11 05       	cpc	r17, r1
 844:	09 f0       	breq	.+2      	; 0x848 <__DATA_REGION_LENGTH__+0x48>
 846:	46 c0       	rjmp	.+140    	; 0x8d4 <__stack+0x75>
			timeElapsed=0;
 848:	10 92 71 00 	sts	0x0071, r1	; 0x800071 <__data_end+0x1>
 84c:	10 92 70 00 	sts	0x0070, r1	; 0x800070 <__data_end>
			if(input==3)
 850:	83 e0       	ldi	r24, 0x03	; 3
 852:	e8 16       	cp	r14, r24
 854:	f1 04       	cpc	r15, r1
 856:	c1 f5       	brne	.+112    	; 0x8c8 <__stack+0x69>
			{
				totalFingers = 100*tdig+10*sdig+fdig;
 858:	84 e6       	ldi	r24, 0x64	; 100
 85a:	88 9d       	mul	r24, r8
 85c:	90 01       	movw	r18, r0
 85e:	89 9d       	mul	r24, r9
 860:	30 0d       	add	r19, r0
 862:	11 24       	eor	r1, r1
 864:	c6 01       	movw	r24, r12
 866:	88 0f       	add	r24, r24
 868:	99 1f       	adc	r25, r25
 86a:	cc 0c       	add	r12, r12
 86c:	dd 1c       	adc	r13, r13
 86e:	cc 0c       	add	r12, r12
 870:	dd 1c       	adc	r13, r13
 872:	cc 0c       	add	r12, r12
 874:	dd 1c       	adc	r13, r13
 876:	8c 0d       	add	r24, r12
 878:	9d 1d       	adc	r25, r13
 87a:	82 0f       	add	r24, r18
 87c:	93 1f       	adc	r25, r19
				//Lcd4_Write_String("RESET");
				input=1;
				fdig = 0;
				sdig = 0;
				tdig = 0;
				ADMUX = 0b01100111;
 87e:	27 e6       	ldi	r18, 0x67	; 103
 880:	27 b9       	out	0x07, r18	; 7
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
 882:	4a e0       	ldi	r20, 0x0A	; 10
 884:	be 01       	movw	r22, r28
 886:	6f 5f       	subi	r22, 0xFF	; 255
 888:	7f 4f       	sbci	r23, 0xFF	; 255
 88a:	8a 0d       	add	r24, r10
 88c:	9b 1d       	adc	r25, r11
 88e:	0e 94 e1 06 	call	0xdc2	; 0xdc2 <__itoa_ncheck>
				
				itoa(totalFingers, numberArr, 10);
				for (i=0; numberArr[i] != '\0'; i++)
 892:	e1 2c       	mov	r14, r1
 894:	f1 2c       	mov	r15, r1
 896:	05 c0       	rjmp	.+10     	; 0x8a2 <__stack+0x43>
				UART_send(numberArr[i]);
 898:	0e 94 8c 03 	call	0x718	; 0x718 <UART_send>
				sdig = 0;
				tdig = 0;
				ADMUX = 0b01100111;
				
				itoa(totalFingers, numberArr, 10);
				for (i=0; numberArr[i] != '\0'; i++)
 89c:	8f ef       	ldi	r24, 0xFF	; 255
 89e:	e8 1a       	sub	r14, r24
 8a0:	f8 0a       	sbc	r15, r24
 8a2:	e1 e0       	ldi	r30, 0x01	; 1
 8a4:	f0 e0       	ldi	r31, 0x00	; 0
 8a6:	ec 0f       	add	r30, r28
 8a8:	fd 1f       	adc	r31, r29
 8aa:	ee 0d       	add	r30, r14
 8ac:	ff 1d       	adc	r31, r15
 8ae:	80 81       	ld	r24, Z
 8b0:	81 11       	cpse	r24, r1
 8b2:	f2 cf       	rjmp	.-28     	; 0x898 <__stack+0x39>
				
				//Lcd4_Write_String("RESET");
				input=1;
				fdig = 0;
				sdig = 0;
				tdig = 0;
 8b4:	81 2c       	mov	r8, r1
 8b6:	91 2c       	mov	r9, r1
				totalFingers = 100*tdig+10*sdig+fdig;
				
				//Lcd4_Write_String("RESET");
				input=1;
				fdig = 0;
				sdig = 0;
 8b8:	c1 2c       	mov	r12, r1
 8ba:	d1 2c       	mov	r13, r1
			{
				totalFingers = 100*tdig+10*sdig+fdig;
				
				//Lcd4_Write_String("RESET");
				input=1;
				fdig = 0;
 8bc:	a1 2c       	mov	r10, r1
 8be:	b1 2c       	mov	r11, r1
			if(input==3)
			{
				totalFingers = 100*tdig+10*sdig+fdig;
				
				//Lcd4_Write_String("RESET");
				input=1;
 8c0:	ee 24       	eor	r14, r14
 8c2:	e3 94       	inc	r14
 8c4:	f1 2c       	mov	r15, r1
 8c6:	06 c0       	rjmp	.+12     	; 0x8d4 <__stack+0x75>
				totalFingers = 0;
			}
			else
			{
				//Lcd4_Write_String("Give The Next Digit");
				input+=1;
 8c8:	8f ef       	ldi	r24, 0xFF	; 255
 8ca:	e8 1a       	sub	r14, r24
 8cc:	f8 0a       	sbc	r15, r24
				ADMUX-=1;
 8ce:	87 b1       	in	r24, 0x07	; 7
 8d0:	81 50       	subi	r24, 0x01	; 1
 8d2:	87 b9       	out	0x07, r24	; 7
 8d4:	4a e0       	ldi	r20, 0x0A	; 10
 8d6:	be 01       	movw	r22, r28
 8d8:	6f 5f       	subi	r22, 0xFF	; 255
 8da:	7f 4f       	sbci	r23, 0xFF	; 255
 8dc:	c7 01       	movw	r24, r14
 8de:	0e 94 e1 06 	call	0xdc2	; 0xdc2 <__itoa_ncheck>
		
		
		
		
			itoa(input, numberArr, 10);
			Lcd4_Write_String("Digit: ");
 8e2:	80 e6       	ldi	r24, 0x60	; 96
 8e4:	90 e0       	ldi	r25, 0x00	; 0
 8e6:	0e 94 07 03 	call	0x60e	; 0x60e <Lcd4_Write_String>
			Lcd4_Write_String(numberArr);
 8ea:	ce 01       	movw	r24, r28
 8ec:	01 96       	adiw	r24, 0x01	; 1
 8ee:	0e 94 07 03 	call	0x60e	; 0x60e <Lcd4_Write_String>
			
			Lcd4_Set_Cursor(2, 1);
 8f2:	61 e0       	ldi	r22, 0x01	; 1
 8f4:	82 e0       	ldi	r24, 0x02	; 2
 8f6:	0e 94 6e 02 	call	0x4dc	; 0x4dc <Lcd4_Set_Cursor>
			
			Lcd4_Write_String("Floor: ");
 8fa:	88 e6       	ldi	r24, 0x68	; 104
 8fc:	90 e0       	ldi	r25, 0x00	; 0
 8fe:	0e 94 07 03 	call	0x60e	; 0x60e <Lcd4_Write_String>
 902:	4a e0       	ldi	r20, 0x0A	; 10
 904:	be 01       	movw	r22, r28
 906:	6f 5f       	subi	r22, 0xFF	; 255
 908:	7f 4f       	sbci	r23, 0xFF	; 255
 90a:	c4 01       	movw	r24, r8
 90c:	0e 94 e1 06 	call	0xdc2	; 0xdc2 <__itoa_ncheck>
			
			itoa(tdig, numberArr, 10);
			Lcd4_Write_String(numberArr);
 910:	ce 01       	movw	r24, r28
 912:	01 96       	adiw	r24, 0x01	; 1
 914:	0e 94 07 03 	call	0x60e	; 0x60e <Lcd4_Write_String>
 918:	4a e0       	ldi	r20, 0x0A	; 10
 91a:	be 01       	movw	r22, r28
 91c:	6f 5f       	subi	r22, 0xFF	; 255
 91e:	7f 4f       	sbci	r23, 0xFF	; 255
 920:	c6 01       	movw	r24, r12
 922:	0e 94 e1 06 	call	0xdc2	; 0xdc2 <__itoa_ncheck>
			
			itoa(sdig, numberArr, 10);
			Lcd4_Write_String(numberArr);
 926:	ce 01       	movw	r24, r28
 928:	01 96       	adiw	r24, 0x01	; 1
 92a:	0e 94 07 03 	call	0x60e	; 0x60e <Lcd4_Write_String>
 92e:	4a e0       	ldi	r20, 0x0A	; 10
 930:	be 01       	movw	r22, r28
 932:	6f 5f       	subi	r22, 0xFF	; 255
 934:	7f 4f       	sbci	r23, 0xFF	; 255
 936:	c5 01       	movw	r24, r10
 938:	0e 94 e1 06 	call	0xdc2	; 0xdc2 <__itoa_ncheck>
			
			itoa(fdig, numberArr, 10);
			Lcd4_Write_String(numberArr);
 93c:	ce 01       	movw	r24, r28
 93e:	01 96       	adiw	r24, 0x01	; 1
 940:	0e 94 07 03 	call	0x60e	; 0x60e <Lcd4_Write_String>
			
		
	}
 944:	19 cf       	rjmp	.-462    	; 0x778 <main+0x58>

00000946 <__subsf3>:
 946:	50 58       	subi	r21, 0x80	; 128

00000948 <__addsf3>:
 948:	bb 27       	eor	r27, r27
 94a:	aa 27       	eor	r26, r26
 94c:	0e 94 bb 04 	call	0x976	; 0x976 <__addsf3x>
 950:	0c 94 35 06 	jmp	0xc6a	; 0xc6a <__fp_round>
 954:	0e 94 27 06 	call	0xc4e	; 0xc4e <__fp_pscA>
 958:	38 f0       	brcs	.+14     	; 0x968 <__addsf3+0x20>
 95a:	0e 94 2e 06 	call	0xc5c	; 0xc5c <__fp_pscB>
 95e:	20 f0       	brcs	.+8      	; 0x968 <__addsf3+0x20>
 960:	39 f4       	brne	.+14     	; 0x970 <__addsf3+0x28>
 962:	9f 3f       	cpi	r25, 0xFF	; 255
 964:	19 f4       	brne	.+6      	; 0x96c <__addsf3+0x24>
 966:	26 f4       	brtc	.+8      	; 0x970 <__addsf3+0x28>
 968:	0c 94 24 06 	jmp	0xc48	; 0xc48 <__fp_nan>
 96c:	0e f4       	brtc	.+2      	; 0x970 <__addsf3+0x28>
 96e:	e0 95       	com	r30
 970:	e7 fb       	bst	r30, 7
 972:	0c 94 1e 06 	jmp	0xc3c	; 0xc3c <__fp_inf>

00000976 <__addsf3x>:
 976:	e9 2f       	mov	r30, r25
 978:	0e 94 46 06 	call	0xc8c	; 0xc8c <__fp_split3>
 97c:	58 f3       	brcs	.-42     	; 0x954 <__addsf3+0xc>
 97e:	ba 17       	cp	r27, r26
 980:	62 07       	cpc	r22, r18
 982:	73 07       	cpc	r23, r19
 984:	84 07       	cpc	r24, r20
 986:	95 07       	cpc	r25, r21
 988:	20 f0       	brcs	.+8      	; 0x992 <__addsf3x+0x1c>
 98a:	79 f4       	brne	.+30     	; 0x9aa <__addsf3x+0x34>
 98c:	a6 f5       	brtc	.+104    	; 0x9f6 <__addsf3x+0x80>
 98e:	0c 94 68 06 	jmp	0xcd0	; 0xcd0 <__fp_zero>
 992:	0e f4       	brtc	.+2      	; 0x996 <__addsf3x+0x20>
 994:	e0 95       	com	r30
 996:	0b 2e       	mov	r0, r27
 998:	ba 2f       	mov	r27, r26
 99a:	a0 2d       	mov	r26, r0
 99c:	0b 01       	movw	r0, r22
 99e:	b9 01       	movw	r22, r18
 9a0:	90 01       	movw	r18, r0
 9a2:	0c 01       	movw	r0, r24
 9a4:	ca 01       	movw	r24, r20
 9a6:	a0 01       	movw	r20, r0
 9a8:	11 24       	eor	r1, r1
 9aa:	ff 27       	eor	r31, r31
 9ac:	59 1b       	sub	r21, r25
 9ae:	99 f0       	breq	.+38     	; 0x9d6 <__addsf3x+0x60>
 9b0:	59 3f       	cpi	r21, 0xF9	; 249
 9b2:	50 f4       	brcc	.+20     	; 0x9c8 <__addsf3x+0x52>
 9b4:	50 3e       	cpi	r21, 0xE0	; 224
 9b6:	68 f1       	brcs	.+90     	; 0xa12 <__addsf3x+0x9c>
 9b8:	1a 16       	cp	r1, r26
 9ba:	f0 40       	sbci	r31, 0x00	; 0
 9bc:	a2 2f       	mov	r26, r18
 9be:	23 2f       	mov	r18, r19
 9c0:	34 2f       	mov	r19, r20
 9c2:	44 27       	eor	r20, r20
 9c4:	58 5f       	subi	r21, 0xF8	; 248
 9c6:	f3 cf       	rjmp	.-26     	; 0x9ae <__addsf3x+0x38>
 9c8:	46 95       	lsr	r20
 9ca:	37 95       	ror	r19
 9cc:	27 95       	ror	r18
 9ce:	a7 95       	ror	r26
 9d0:	f0 40       	sbci	r31, 0x00	; 0
 9d2:	53 95       	inc	r21
 9d4:	c9 f7       	brne	.-14     	; 0x9c8 <__addsf3x+0x52>
 9d6:	7e f4       	brtc	.+30     	; 0x9f6 <__addsf3x+0x80>
 9d8:	1f 16       	cp	r1, r31
 9da:	ba 0b       	sbc	r27, r26
 9dc:	62 0b       	sbc	r22, r18
 9de:	73 0b       	sbc	r23, r19
 9e0:	84 0b       	sbc	r24, r20
 9e2:	ba f0       	brmi	.+46     	; 0xa12 <__addsf3x+0x9c>
 9e4:	91 50       	subi	r25, 0x01	; 1
 9e6:	a1 f0       	breq	.+40     	; 0xa10 <__addsf3x+0x9a>
 9e8:	ff 0f       	add	r31, r31
 9ea:	bb 1f       	adc	r27, r27
 9ec:	66 1f       	adc	r22, r22
 9ee:	77 1f       	adc	r23, r23
 9f0:	88 1f       	adc	r24, r24
 9f2:	c2 f7       	brpl	.-16     	; 0x9e4 <__addsf3x+0x6e>
 9f4:	0e c0       	rjmp	.+28     	; 0xa12 <__addsf3x+0x9c>
 9f6:	ba 0f       	add	r27, r26
 9f8:	62 1f       	adc	r22, r18
 9fa:	73 1f       	adc	r23, r19
 9fc:	84 1f       	adc	r24, r20
 9fe:	48 f4       	brcc	.+18     	; 0xa12 <__addsf3x+0x9c>
 a00:	87 95       	ror	r24
 a02:	77 95       	ror	r23
 a04:	67 95       	ror	r22
 a06:	b7 95       	ror	r27
 a08:	f7 95       	ror	r31
 a0a:	9e 3f       	cpi	r25, 0xFE	; 254
 a0c:	08 f0       	brcs	.+2      	; 0xa10 <__addsf3x+0x9a>
 a0e:	b0 cf       	rjmp	.-160    	; 0x970 <__addsf3+0x28>
 a10:	93 95       	inc	r25
 a12:	88 0f       	add	r24, r24
 a14:	08 f0       	brcs	.+2      	; 0xa18 <__addsf3x+0xa2>
 a16:	99 27       	eor	r25, r25
 a18:	ee 0f       	add	r30, r30
 a1a:	97 95       	ror	r25
 a1c:	87 95       	ror	r24
 a1e:	08 95       	ret

00000a20 <__cmpsf2>:
 a20:	0e 94 fa 05 	call	0xbf4	; 0xbf4 <__fp_cmp>
 a24:	08 f4       	brcc	.+2      	; 0xa28 <__cmpsf2+0x8>
 a26:	81 e0       	ldi	r24, 0x01	; 1
 a28:	08 95       	ret

00000a2a <__divsf3>:
 a2a:	0e 94 29 05 	call	0xa52	; 0xa52 <__divsf3x>
 a2e:	0c 94 35 06 	jmp	0xc6a	; 0xc6a <__fp_round>
 a32:	0e 94 2e 06 	call	0xc5c	; 0xc5c <__fp_pscB>
 a36:	58 f0       	brcs	.+22     	; 0xa4e <__divsf3+0x24>
 a38:	0e 94 27 06 	call	0xc4e	; 0xc4e <__fp_pscA>
 a3c:	40 f0       	brcs	.+16     	; 0xa4e <__divsf3+0x24>
 a3e:	29 f4       	brne	.+10     	; 0xa4a <__divsf3+0x20>
 a40:	5f 3f       	cpi	r21, 0xFF	; 255
 a42:	29 f0       	breq	.+10     	; 0xa4e <__divsf3+0x24>
 a44:	0c 94 1e 06 	jmp	0xc3c	; 0xc3c <__fp_inf>
 a48:	51 11       	cpse	r21, r1
 a4a:	0c 94 69 06 	jmp	0xcd2	; 0xcd2 <__fp_szero>
 a4e:	0c 94 24 06 	jmp	0xc48	; 0xc48 <__fp_nan>

00000a52 <__divsf3x>:
 a52:	0e 94 46 06 	call	0xc8c	; 0xc8c <__fp_split3>
 a56:	68 f3       	brcs	.-38     	; 0xa32 <__divsf3+0x8>

00000a58 <__divsf3_pse>:
 a58:	99 23       	and	r25, r25
 a5a:	b1 f3       	breq	.-20     	; 0xa48 <__divsf3+0x1e>
 a5c:	55 23       	and	r21, r21
 a5e:	91 f3       	breq	.-28     	; 0xa44 <__divsf3+0x1a>
 a60:	95 1b       	sub	r25, r21
 a62:	55 0b       	sbc	r21, r21
 a64:	bb 27       	eor	r27, r27
 a66:	aa 27       	eor	r26, r26
 a68:	62 17       	cp	r22, r18
 a6a:	73 07       	cpc	r23, r19
 a6c:	84 07       	cpc	r24, r20
 a6e:	38 f0       	brcs	.+14     	; 0xa7e <__divsf3_pse+0x26>
 a70:	9f 5f       	subi	r25, 0xFF	; 255
 a72:	5f 4f       	sbci	r21, 0xFF	; 255
 a74:	22 0f       	add	r18, r18
 a76:	33 1f       	adc	r19, r19
 a78:	44 1f       	adc	r20, r20
 a7a:	aa 1f       	adc	r26, r26
 a7c:	a9 f3       	breq	.-22     	; 0xa68 <__divsf3_pse+0x10>
 a7e:	35 d0       	rcall	.+106    	; 0xaea <__divsf3_pse+0x92>
 a80:	0e 2e       	mov	r0, r30
 a82:	3a f0       	brmi	.+14     	; 0xa92 <__divsf3_pse+0x3a>
 a84:	e0 e8       	ldi	r30, 0x80	; 128
 a86:	32 d0       	rcall	.+100    	; 0xaec <__divsf3_pse+0x94>
 a88:	91 50       	subi	r25, 0x01	; 1
 a8a:	50 40       	sbci	r21, 0x00	; 0
 a8c:	e6 95       	lsr	r30
 a8e:	00 1c       	adc	r0, r0
 a90:	ca f7       	brpl	.-14     	; 0xa84 <__divsf3_pse+0x2c>
 a92:	2b d0       	rcall	.+86     	; 0xaea <__divsf3_pse+0x92>
 a94:	fe 2f       	mov	r31, r30
 a96:	29 d0       	rcall	.+82     	; 0xaea <__divsf3_pse+0x92>
 a98:	66 0f       	add	r22, r22
 a9a:	77 1f       	adc	r23, r23
 a9c:	88 1f       	adc	r24, r24
 a9e:	bb 1f       	adc	r27, r27
 aa0:	26 17       	cp	r18, r22
 aa2:	37 07       	cpc	r19, r23
 aa4:	48 07       	cpc	r20, r24
 aa6:	ab 07       	cpc	r26, r27
 aa8:	b0 e8       	ldi	r27, 0x80	; 128
 aaa:	09 f0       	breq	.+2      	; 0xaae <__divsf3_pse+0x56>
 aac:	bb 0b       	sbc	r27, r27
 aae:	80 2d       	mov	r24, r0
 ab0:	bf 01       	movw	r22, r30
 ab2:	ff 27       	eor	r31, r31
 ab4:	93 58       	subi	r25, 0x83	; 131
 ab6:	5f 4f       	sbci	r21, 0xFF	; 255
 ab8:	3a f0       	brmi	.+14     	; 0xac8 <__divsf3_pse+0x70>
 aba:	9e 3f       	cpi	r25, 0xFE	; 254
 abc:	51 05       	cpc	r21, r1
 abe:	78 f0       	brcs	.+30     	; 0xade <__divsf3_pse+0x86>
 ac0:	0c 94 1e 06 	jmp	0xc3c	; 0xc3c <__fp_inf>
 ac4:	0c 94 69 06 	jmp	0xcd2	; 0xcd2 <__fp_szero>
 ac8:	5f 3f       	cpi	r21, 0xFF	; 255
 aca:	e4 f3       	brlt	.-8      	; 0xac4 <__divsf3_pse+0x6c>
 acc:	98 3e       	cpi	r25, 0xE8	; 232
 ace:	d4 f3       	brlt	.-12     	; 0xac4 <__divsf3_pse+0x6c>
 ad0:	86 95       	lsr	r24
 ad2:	77 95       	ror	r23
 ad4:	67 95       	ror	r22
 ad6:	b7 95       	ror	r27
 ad8:	f7 95       	ror	r31
 ada:	9f 5f       	subi	r25, 0xFF	; 255
 adc:	c9 f7       	brne	.-14     	; 0xad0 <__divsf3_pse+0x78>
 ade:	88 0f       	add	r24, r24
 ae0:	91 1d       	adc	r25, r1
 ae2:	96 95       	lsr	r25
 ae4:	87 95       	ror	r24
 ae6:	97 f9       	bld	r25, 7
 ae8:	08 95       	ret
 aea:	e1 e0       	ldi	r30, 0x01	; 1
 aec:	66 0f       	add	r22, r22
 aee:	77 1f       	adc	r23, r23
 af0:	88 1f       	adc	r24, r24
 af2:	bb 1f       	adc	r27, r27
 af4:	62 17       	cp	r22, r18
 af6:	73 07       	cpc	r23, r19
 af8:	84 07       	cpc	r24, r20
 afa:	ba 07       	cpc	r27, r26
 afc:	20 f0       	brcs	.+8      	; 0xb06 <__divsf3_pse+0xae>
 afe:	62 1b       	sub	r22, r18
 b00:	73 0b       	sbc	r23, r19
 b02:	84 0b       	sbc	r24, r20
 b04:	ba 0b       	sbc	r27, r26
 b06:	ee 1f       	adc	r30, r30
 b08:	88 f7       	brcc	.-30     	; 0xaec <__divsf3_pse+0x94>
 b0a:	e0 95       	com	r30
 b0c:	08 95       	ret

00000b0e <__fixsfsi>:
 b0e:	0e 94 8e 05 	call	0xb1c	; 0xb1c <__fixunssfsi>
 b12:	68 94       	set
 b14:	b1 11       	cpse	r27, r1
 b16:	0c 94 69 06 	jmp	0xcd2	; 0xcd2 <__fp_szero>
 b1a:	08 95       	ret

00000b1c <__fixunssfsi>:
 b1c:	0e 94 4e 06 	call	0xc9c	; 0xc9c <__fp_splitA>
 b20:	88 f0       	brcs	.+34     	; 0xb44 <__fixunssfsi+0x28>
 b22:	9f 57       	subi	r25, 0x7F	; 127
 b24:	98 f0       	brcs	.+38     	; 0xb4c <__fixunssfsi+0x30>
 b26:	b9 2f       	mov	r27, r25
 b28:	99 27       	eor	r25, r25
 b2a:	b7 51       	subi	r27, 0x17	; 23
 b2c:	b0 f0       	brcs	.+44     	; 0xb5a <__fixunssfsi+0x3e>
 b2e:	e1 f0       	breq	.+56     	; 0xb68 <__fixunssfsi+0x4c>
 b30:	66 0f       	add	r22, r22
 b32:	77 1f       	adc	r23, r23
 b34:	88 1f       	adc	r24, r24
 b36:	99 1f       	adc	r25, r25
 b38:	1a f0       	brmi	.+6      	; 0xb40 <__fixunssfsi+0x24>
 b3a:	ba 95       	dec	r27
 b3c:	c9 f7       	brne	.-14     	; 0xb30 <__fixunssfsi+0x14>
 b3e:	14 c0       	rjmp	.+40     	; 0xb68 <__fixunssfsi+0x4c>
 b40:	b1 30       	cpi	r27, 0x01	; 1
 b42:	91 f0       	breq	.+36     	; 0xb68 <__fixunssfsi+0x4c>
 b44:	0e 94 68 06 	call	0xcd0	; 0xcd0 <__fp_zero>
 b48:	b1 e0       	ldi	r27, 0x01	; 1
 b4a:	08 95       	ret
 b4c:	0c 94 68 06 	jmp	0xcd0	; 0xcd0 <__fp_zero>
 b50:	67 2f       	mov	r22, r23
 b52:	78 2f       	mov	r23, r24
 b54:	88 27       	eor	r24, r24
 b56:	b8 5f       	subi	r27, 0xF8	; 248
 b58:	39 f0       	breq	.+14     	; 0xb68 <__fixunssfsi+0x4c>
 b5a:	b9 3f       	cpi	r27, 0xF9	; 249
 b5c:	cc f3       	brlt	.-14     	; 0xb50 <__fixunssfsi+0x34>
 b5e:	86 95       	lsr	r24
 b60:	77 95       	ror	r23
 b62:	67 95       	ror	r22
 b64:	b3 95       	inc	r27
 b66:	d9 f7       	brne	.-10     	; 0xb5e <__fixunssfsi+0x42>
 b68:	3e f4       	brtc	.+14     	; 0xb78 <__fixunssfsi+0x5c>
 b6a:	90 95       	com	r25
 b6c:	80 95       	com	r24
 b6e:	70 95       	com	r23
 b70:	61 95       	neg	r22
 b72:	7f 4f       	sbci	r23, 0xFF	; 255
 b74:	8f 4f       	sbci	r24, 0xFF	; 255
 b76:	9f 4f       	sbci	r25, 0xFF	; 255
 b78:	08 95       	ret

00000b7a <__floatunsisf>:
 b7a:	e8 94       	clt
 b7c:	09 c0       	rjmp	.+18     	; 0xb90 <__floatsisf+0x12>

00000b7e <__floatsisf>:
 b7e:	97 fb       	bst	r25, 7
 b80:	3e f4       	brtc	.+14     	; 0xb90 <__floatsisf+0x12>
 b82:	90 95       	com	r25
 b84:	80 95       	com	r24
 b86:	70 95       	com	r23
 b88:	61 95       	neg	r22
 b8a:	7f 4f       	sbci	r23, 0xFF	; 255
 b8c:	8f 4f       	sbci	r24, 0xFF	; 255
 b8e:	9f 4f       	sbci	r25, 0xFF	; 255
 b90:	99 23       	and	r25, r25
 b92:	a9 f0       	breq	.+42     	; 0xbbe <__floatsisf+0x40>
 b94:	f9 2f       	mov	r31, r25
 b96:	96 e9       	ldi	r25, 0x96	; 150
 b98:	bb 27       	eor	r27, r27
 b9a:	93 95       	inc	r25
 b9c:	f6 95       	lsr	r31
 b9e:	87 95       	ror	r24
 ba0:	77 95       	ror	r23
 ba2:	67 95       	ror	r22
 ba4:	b7 95       	ror	r27
 ba6:	f1 11       	cpse	r31, r1
 ba8:	f8 cf       	rjmp	.-16     	; 0xb9a <__floatsisf+0x1c>
 baa:	fa f4       	brpl	.+62     	; 0xbea <__floatsisf+0x6c>
 bac:	bb 0f       	add	r27, r27
 bae:	11 f4       	brne	.+4      	; 0xbb4 <__floatsisf+0x36>
 bb0:	60 ff       	sbrs	r22, 0
 bb2:	1b c0       	rjmp	.+54     	; 0xbea <__floatsisf+0x6c>
 bb4:	6f 5f       	subi	r22, 0xFF	; 255
 bb6:	7f 4f       	sbci	r23, 0xFF	; 255
 bb8:	8f 4f       	sbci	r24, 0xFF	; 255
 bba:	9f 4f       	sbci	r25, 0xFF	; 255
 bbc:	16 c0       	rjmp	.+44     	; 0xbea <__floatsisf+0x6c>
 bbe:	88 23       	and	r24, r24
 bc0:	11 f0       	breq	.+4      	; 0xbc6 <__floatsisf+0x48>
 bc2:	96 e9       	ldi	r25, 0x96	; 150
 bc4:	11 c0       	rjmp	.+34     	; 0xbe8 <__floatsisf+0x6a>
 bc6:	77 23       	and	r23, r23
 bc8:	21 f0       	breq	.+8      	; 0xbd2 <__floatsisf+0x54>
 bca:	9e e8       	ldi	r25, 0x8E	; 142
 bcc:	87 2f       	mov	r24, r23
 bce:	76 2f       	mov	r23, r22
 bd0:	05 c0       	rjmp	.+10     	; 0xbdc <__floatsisf+0x5e>
 bd2:	66 23       	and	r22, r22
 bd4:	71 f0       	breq	.+28     	; 0xbf2 <__floatsisf+0x74>
 bd6:	96 e8       	ldi	r25, 0x86	; 134
 bd8:	86 2f       	mov	r24, r22
 bda:	70 e0       	ldi	r23, 0x00	; 0
 bdc:	60 e0       	ldi	r22, 0x00	; 0
 bde:	2a f0       	brmi	.+10     	; 0xbea <__floatsisf+0x6c>
 be0:	9a 95       	dec	r25
 be2:	66 0f       	add	r22, r22
 be4:	77 1f       	adc	r23, r23
 be6:	88 1f       	adc	r24, r24
 be8:	da f7       	brpl	.-10     	; 0xbe0 <__floatsisf+0x62>
 bea:	88 0f       	add	r24, r24
 bec:	96 95       	lsr	r25
 bee:	87 95       	ror	r24
 bf0:	97 f9       	bld	r25, 7
 bf2:	08 95       	ret

00000bf4 <__fp_cmp>:
 bf4:	99 0f       	add	r25, r25
 bf6:	00 08       	sbc	r0, r0
 bf8:	55 0f       	add	r21, r21
 bfa:	aa 0b       	sbc	r26, r26
 bfc:	e0 e8       	ldi	r30, 0x80	; 128
 bfe:	fe ef       	ldi	r31, 0xFE	; 254
 c00:	16 16       	cp	r1, r22
 c02:	17 06       	cpc	r1, r23
 c04:	e8 07       	cpc	r30, r24
 c06:	f9 07       	cpc	r31, r25
 c08:	c0 f0       	brcs	.+48     	; 0xc3a <__fp_cmp+0x46>
 c0a:	12 16       	cp	r1, r18
 c0c:	13 06       	cpc	r1, r19
 c0e:	e4 07       	cpc	r30, r20
 c10:	f5 07       	cpc	r31, r21
 c12:	98 f0       	brcs	.+38     	; 0xc3a <__fp_cmp+0x46>
 c14:	62 1b       	sub	r22, r18
 c16:	73 0b       	sbc	r23, r19
 c18:	84 0b       	sbc	r24, r20
 c1a:	95 0b       	sbc	r25, r21
 c1c:	39 f4       	brne	.+14     	; 0xc2c <__fp_cmp+0x38>
 c1e:	0a 26       	eor	r0, r26
 c20:	61 f0       	breq	.+24     	; 0xc3a <__fp_cmp+0x46>
 c22:	23 2b       	or	r18, r19
 c24:	24 2b       	or	r18, r20
 c26:	25 2b       	or	r18, r21
 c28:	21 f4       	brne	.+8      	; 0xc32 <__fp_cmp+0x3e>
 c2a:	08 95       	ret
 c2c:	0a 26       	eor	r0, r26
 c2e:	09 f4       	brne	.+2      	; 0xc32 <__fp_cmp+0x3e>
 c30:	a1 40       	sbci	r26, 0x01	; 1
 c32:	a6 95       	lsr	r26
 c34:	8f ef       	ldi	r24, 0xFF	; 255
 c36:	81 1d       	adc	r24, r1
 c38:	81 1d       	adc	r24, r1
 c3a:	08 95       	ret

00000c3c <__fp_inf>:
 c3c:	97 f9       	bld	r25, 7
 c3e:	9f 67       	ori	r25, 0x7F	; 127
 c40:	80 e8       	ldi	r24, 0x80	; 128
 c42:	70 e0       	ldi	r23, 0x00	; 0
 c44:	60 e0       	ldi	r22, 0x00	; 0
 c46:	08 95       	ret

00000c48 <__fp_nan>:
 c48:	9f ef       	ldi	r25, 0xFF	; 255
 c4a:	80 ec       	ldi	r24, 0xC0	; 192
 c4c:	08 95       	ret

00000c4e <__fp_pscA>:
 c4e:	00 24       	eor	r0, r0
 c50:	0a 94       	dec	r0
 c52:	16 16       	cp	r1, r22
 c54:	17 06       	cpc	r1, r23
 c56:	18 06       	cpc	r1, r24
 c58:	09 06       	cpc	r0, r25
 c5a:	08 95       	ret

00000c5c <__fp_pscB>:
 c5c:	00 24       	eor	r0, r0
 c5e:	0a 94       	dec	r0
 c60:	12 16       	cp	r1, r18
 c62:	13 06       	cpc	r1, r19
 c64:	14 06       	cpc	r1, r20
 c66:	05 06       	cpc	r0, r21
 c68:	08 95       	ret

00000c6a <__fp_round>:
 c6a:	09 2e       	mov	r0, r25
 c6c:	03 94       	inc	r0
 c6e:	00 0c       	add	r0, r0
 c70:	11 f4       	brne	.+4      	; 0xc76 <__fp_round+0xc>
 c72:	88 23       	and	r24, r24
 c74:	52 f0       	brmi	.+20     	; 0xc8a <__fp_round+0x20>
 c76:	bb 0f       	add	r27, r27
 c78:	40 f4       	brcc	.+16     	; 0xc8a <__fp_round+0x20>
 c7a:	bf 2b       	or	r27, r31
 c7c:	11 f4       	brne	.+4      	; 0xc82 <__fp_round+0x18>
 c7e:	60 ff       	sbrs	r22, 0
 c80:	04 c0       	rjmp	.+8      	; 0xc8a <__fp_round+0x20>
 c82:	6f 5f       	subi	r22, 0xFF	; 255
 c84:	7f 4f       	sbci	r23, 0xFF	; 255
 c86:	8f 4f       	sbci	r24, 0xFF	; 255
 c88:	9f 4f       	sbci	r25, 0xFF	; 255
 c8a:	08 95       	ret

00000c8c <__fp_split3>:
 c8c:	57 fd       	sbrc	r21, 7
 c8e:	90 58       	subi	r25, 0x80	; 128
 c90:	44 0f       	add	r20, r20
 c92:	55 1f       	adc	r21, r21
 c94:	59 f0       	breq	.+22     	; 0xcac <__fp_splitA+0x10>
 c96:	5f 3f       	cpi	r21, 0xFF	; 255
 c98:	71 f0       	breq	.+28     	; 0xcb6 <__fp_splitA+0x1a>
 c9a:	47 95       	ror	r20

00000c9c <__fp_splitA>:
 c9c:	88 0f       	add	r24, r24
 c9e:	97 fb       	bst	r25, 7
 ca0:	99 1f       	adc	r25, r25
 ca2:	61 f0       	breq	.+24     	; 0xcbc <__fp_splitA+0x20>
 ca4:	9f 3f       	cpi	r25, 0xFF	; 255
 ca6:	79 f0       	breq	.+30     	; 0xcc6 <__fp_splitA+0x2a>
 ca8:	87 95       	ror	r24
 caa:	08 95       	ret
 cac:	12 16       	cp	r1, r18
 cae:	13 06       	cpc	r1, r19
 cb0:	14 06       	cpc	r1, r20
 cb2:	55 1f       	adc	r21, r21
 cb4:	f2 cf       	rjmp	.-28     	; 0xc9a <__fp_split3+0xe>
 cb6:	46 95       	lsr	r20
 cb8:	f1 df       	rcall	.-30     	; 0xc9c <__fp_splitA>
 cba:	08 c0       	rjmp	.+16     	; 0xccc <__fp_splitA+0x30>
 cbc:	16 16       	cp	r1, r22
 cbe:	17 06       	cpc	r1, r23
 cc0:	18 06       	cpc	r1, r24
 cc2:	99 1f       	adc	r25, r25
 cc4:	f1 cf       	rjmp	.-30     	; 0xca8 <__fp_splitA+0xc>
 cc6:	86 95       	lsr	r24
 cc8:	71 05       	cpc	r23, r1
 cca:	61 05       	cpc	r22, r1
 ccc:	08 94       	sec
 cce:	08 95       	ret

00000cd0 <__fp_zero>:
 cd0:	e8 94       	clt

00000cd2 <__fp_szero>:
 cd2:	bb 27       	eor	r27, r27
 cd4:	66 27       	eor	r22, r22
 cd6:	77 27       	eor	r23, r23
 cd8:	cb 01       	movw	r24, r22
 cda:	97 f9       	bld	r25, 7
 cdc:	08 95       	ret

00000cde <__gesf2>:
 cde:	0e 94 fa 05 	call	0xbf4	; 0xbf4 <__fp_cmp>
 ce2:	08 f4       	brcc	.+2      	; 0xce6 <__gesf2+0x8>
 ce4:	8f ef       	ldi	r24, 0xFF	; 255
 ce6:	08 95       	ret

00000ce8 <__mulsf3>:
 ce8:	0e 94 87 06 	call	0xd0e	; 0xd0e <__mulsf3x>
 cec:	0c 94 35 06 	jmp	0xc6a	; 0xc6a <__fp_round>
 cf0:	0e 94 27 06 	call	0xc4e	; 0xc4e <__fp_pscA>
 cf4:	38 f0       	brcs	.+14     	; 0xd04 <__mulsf3+0x1c>
 cf6:	0e 94 2e 06 	call	0xc5c	; 0xc5c <__fp_pscB>
 cfa:	20 f0       	brcs	.+8      	; 0xd04 <__mulsf3+0x1c>
 cfc:	95 23       	and	r25, r21
 cfe:	11 f0       	breq	.+4      	; 0xd04 <__mulsf3+0x1c>
 d00:	0c 94 1e 06 	jmp	0xc3c	; 0xc3c <__fp_inf>
 d04:	0c 94 24 06 	jmp	0xc48	; 0xc48 <__fp_nan>
 d08:	11 24       	eor	r1, r1
 d0a:	0c 94 69 06 	jmp	0xcd2	; 0xcd2 <__fp_szero>

00000d0e <__mulsf3x>:
 d0e:	0e 94 46 06 	call	0xc8c	; 0xc8c <__fp_split3>
 d12:	70 f3       	brcs	.-36     	; 0xcf0 <__mulsf3+0x8>

00000d14 <__mulsf3_pse>:
 d14:	95 9f       	mul	r25, r21
 d16:	c1 f3       	breq	.-16     	; 0xd08 <__mulsf3+0x20>
 d18:	95 0f       	add	r25, r21
 d1a:	50 e0       	ldi	r21, 0x00	; 0
 d1c:	55 1f       	adc	r21, r21
 d1e:	62 9f       	mul	r22, r18
 d20:	f0 01       	movw	r30, r0
 d22:	72 9f       	mul	r23, r18
 d24:	bb 27       	eor	r27, r27
 d26:	f0 0d       	add	r31, r0
 d28:	b1 1d       	adc	r27, r1
 d2a:	63 9f       	mul	r22, r19
 d2c:	aa 27       	eor	r26, r26
 d2e:	f0 0d       	add	r31, r0
 d30:	b1 1d       	adc	r27, r1
 d32:	aa 1f       	adc	r26, r26
 d34:	64 9f       	mul	r22, r20
 d36:	66 27       	eor	r22, r22
 d38:	b0 0d       	add	r27, r0
 d3a:	a1 1d       	adc	r26, r1
 d3c:	66 1f       	adc	r22, r22
 d3e:	82 9f       	mul	r24, r18
 d40:	22 27       	eor	r18, r18
 d42:	b0 0d       	add	r27, r0
 d44:	a1 1d       	adc	r26, r1
 d46:	62 1f       	adc	r22, r18
 d48:	73 9f       	mul	r23, r19
 d4a:	b0 0d       	add	r27, r0
 d4c:	a1 1d       	adc	r26, r1
 d4e:	62 1f       	adc	r22, r18
 d50:	83 9f       	mul	r24, r19
 d52:	a0 0d       	add	r26, r0
 d54:	61 1d       	adc	r22, r1
 d56:	22 1f       	adc	r18, r18
 d58:	74 9f       	mul	r23, r20
 d5a:	33 27       	eor	r19, r19
 d5c:	a0 0d       	add	r26, r0
 d5e:	61 1d       	adc	r22, r1
 d60:	23 1f       	adc	r18, r19
 d62:	84 9f       	mul	r24, r20
 d64:	60 0d       	add	r22, r0
 d66:	21 1d       	adc	r18, r1
 d68:	82 2f       	mov	r24, r18
 d6a:	76 2f       	mov	r23, r22
 d6c:	6a 2f       	mov	r22, r26
 d6e:	11 24       	eor	r1, r1
 d70:	9f 57       	subi	r25, 0x7F	; 127
 d72:	50 40       	sbci	r21, 0x00	; 0
 d74:	9a f0       	brmi	.+38     	; 0xd9c <__mulsf3_pse+0x88>
 d76:	f1 f0       	breq	.+60     	; 0xdb4 <__mulsf3_pse+0xa0>
 d78:	88 23       	and	r24, r24
 d7a:	4a f0       	brmi	.+18     	; 0xd8e <__mulsf3_pse+0x7a>
 d7c:	ee 0f       	add	r30, r30
 d7e:	ff 1f       	adc	r31, r31
 d80:	bb 1f       	adc	r27, r27
 d82:	66 1f       	adc	r22, r22
 d84:	77 1f       	adc	r23, r23
 d86:	88 1f       	adc	r24, r24
 d88:	91 50       	subi	r25, 0x01	; 1
 d8a:	50 40       	sbci	r21, 0x00	; 0
 d8c:	a9 f7       	brne	.-22     	; 0xd78 <__mulsf3_pse+0x64>
 d8e:	9e 3f       	cpi	r25, 0xFE	; 254
 d90:	51 05       	cpc	r21, r1
 d92:	80 f0       	brcs	.+32     	; 0xdb4 <__mulsf3_pse+0xa0>
 d94:	0c 94 1e 06 	jmp	0xc3c	; 0xc3c <__fp_inf>
 d98:	0c 94 69 06 	jmp	0xcd2	; 0xcd2 <__fp_szero>
 d9c:	5f 3f       	cpi	r21, 0xFF	; 255
 d9e:	e4 f3       	brlt	.-8      	; 0xd98 <__mulsf3_pse+0x84>
 da0:	98 3e       	cpi	r25, 0xE8	; 232
 da2:	d4 f3       	brlt	.-12     	; 0xd98 <__mulsf3_pse+0x84>
 da4:	86 95       	lsr	r24
 da6:	77 95       	ror	r23
 da8:	67 95       	ror	r22
 daa:	b7 95       	ror	r27
 dac:	f7 95       	ror	r31
 dae:	e7 95       	ror	r30
 db0:	9f 5f       	subi	r25, 0xFF	; 255
 db2:	c1 f7       	brne	.-16     	; 0xda4 <__mulsf3_pse+0x90>
 db4:	fe 2b       	or	r31, r30
 db6:	88 0f       	add	r24, r24
 db8:	91 1d       	adc	r25, r1
 dba:	96 95       	lsr	r25
 dbc:	87 95       	ror	r24
 dbe:	97 f9       	bld	r25, 7
 dc0:	08 95       	ret

00000dc2 <__itoa_ncheck>:
 dc2:	bb 27       	eor	r27, r27
 dc4:	4a 30       	cpi	r20, 0x0A	; 10
 dc6:	31 f4       	brne	.+12     	; 0xdd4 <__itoa_ncheck+0x12>
 dc8:	99 23       	and	r25, r25
 dca:	22 f4       	brpl	.+8      	; 0xdd4 <__itoa_ncheck+0x12>
 dcc:	bd e2       	ldi	r27, 0x2D	; 45
 dce:	90 95       	com	r25
 dd0:	81 95       	neg	r24
 dd2:	9f 4f       	sbci	r25, 0xFF	; 255
 dd4:	0c 94 ed 06 	jmp	0xdda	; 0xdda <__utoa_common>

00000dd8 <__utoa_ncheck>:
 dd8:	bb 27       	eor	r27, r27

00000dda <__utoa_common>:
 dda:	fb 01       	movw	r30, r22
 ddc:	55 27       	eor	r21, r21
 dde:	aa 27       	eor	r26, r26
 de0:	88 0f       	add	r24, r24
 de2:	99 1f       	adc	r25, r25
 de4:	aa 1f       	adc	r26, r26
 de6:	a4 17       	cp	r26, r20
 de8:	10 f0       	brcs	.+4      	; 0xdee <__utoa_common+0x14>
 dea:	a4 1b       	sub	r26, r20
 dec:	83 95       	inc	r24
 dee:	50 51       	subi	r21, 0x10	; 16
 df0:	b9 f7       	brne	.-18     	; 0xde0 <__utoa_common+0x6>
 df2:	a0 5d       	subi	r26, 0xD0	; 208
 df4:	aa 33       	cpi	r26, 0x3A	; 58
 df6:	08 f0       	brcs	.+2      	; 0xdfa <__utoa_common+0x20>
 df8:	a9 5d       	subi	r26, 0xD9	; 217
 dfa:	a1 93       	st	Z+, r26
 dfc:	00 97       	sbiw	r24, 0x00	; 0
 dfe:	79 f7       	brne	.-34     	; 0xdde <__utoa_common+0x4>
 e00:	b1 11       	cpse	r27, r1
 e02:	b1 93       	st	Z+, r27
 e04:	11 92       	st	Z+, r1
 e06:	cb 01       	movw	r24, r22
 e08:	0c 94 06 07 	jmp	0xe0c	; 0xe0c <strrev>

00000e0c <strrev>:
 e0c:	dc 01       	movw	r26, r24
 e0e:	fc 01       	movw	r30, r24
 e10:	67 2f       	mov	r22, r23
 e12:	71 91       	ld	r23, Z+
 e14:	77 23       	and	r23, r23
 e16:	e1 f7       	brne	.-8      	; 0xe10 <strrev+0x4>
 e18:	32 97       	sbiw	r30, 0x02	; 2
 e1a:	04 c0       	rjmp	.+8      	; 0xe24 <strrev+0x18>
 e1c:	7c 91       	ld	r23, X
 e1e:	6d 93       	st	X+, r22
 e20:	70 83       	st	Z, r23
 e22:	62 91       	ld	r22, -Z
 e24:	ae 17       	cp	r26, r30
 e26:	bf 07       	cpc	r27, r31
 e28:	c8 f3       	brcs	.-14     	; 0xe1c <strrev+0x10>
 e2a:	08 95       	ret

00000e2c <_exit>:
 e2c:	f8 94       	cli

00000e2e <__stop_program>:
 e2e:	ff cf       	rjmp	.-2      	; 0xe2e <__stop_program>
