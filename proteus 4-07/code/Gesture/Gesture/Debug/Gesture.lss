
Gesture.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000f48  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000012  00800060  00000f48  00000fdc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000004  00800072  00800072  00000fee  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000fee  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001020  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d8  00000000  00000000  0000105c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001a1b  00000000  00000000  00001134  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007bd  00000000  00000000  00002b4f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000d30  00000000  00000000  0000330c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000021c  00000000  00000000  0000403c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000501  00000000  00000000  00004258  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000015e2  00000000  00000000  00004759  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c8  00000000  00000000  00005d3b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 1d 03 	jmp	0x63a	; 0x63a <__vector_9>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e8 e4       	ldi	r30, 0x48	; 72
  68:	ff e0       	ldi	r31, 0x0F	; 15
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a2 37       	cpi	r26, 0x72	; 114
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a2 e7       	ldi	r26, 0x72	; 114
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a6 37       	cpi	r26, 0x76	; 118
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 90 03 	call	0x720	; 0x720 <main>
  8a:	0c 94 a2 07 	jmp	0xf44	; 0xf44 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <pinChange>:
}

void Lcd4_Shift_Left()
{
	Lcd4_Cmd(0x01);
	Lcd4_Cmd(0x08);
  92:	67 2b       	or	r22, r23
  94:	09 f0       	breq	.+2      	; 0x98 <pinChange+0x6>
  96:	df c0       	rjmp	.+446    	; 0x256 <pinChange+0x1c4>
  98:	00 97       	sbiw	r24, 0x00	; 0
  9a:	21 f4       	brne	.+8      	; 0xa4 <pinChange+0x12>
  9c:	8b b3       	in	r24, 0x1b	; 27
  9e:	8e 7f       	andi	r24, 0xFE	; 254
  a0:	8b bb       	out	0x1b, r24	; 27
  a2:	08 95       	ret
  a4:	81 30       	cpi	r24, 0x01	; 1
  a6:	91 05       	cpc	r25, r1
  a8:	21 f4       	brne	.+8      	; 0xb2 <pinChange+0x20>
  aa:	8b b3       	in	r24, 0x1b	; 27
  ac:	8d 7f       	andi	r24, 0xFD	; 253
  ae:	8b bb       	out	0x1b, r24	; 27
  b0:	08 95       	ret
  b2:	82 30       	cpi	r24, 0x02	; 2
  b4:	91 05       	cpc	r25, r1
  b6:	21 f4       	brne	.+8      	; 0xc0 <pinChange+0x2e>
  b8:	8b b3       	in	r24, 0x1b	; 27
  ba:	8b 7f       	andi	r24, 0xFB	; 251
  bc:	8b bb       	out	0x1b, r24	; 27
  be:	08 95       	ret
  c0:	83 30       	cpi	r24, 0x03	; 3
  c2:	91 05       	cpc	r25, r1
  c4:	21 f4       	brne	.+8      	; 0xce <pinChange+0x3c>
  c6:	8b b3       	in	r24, 0x1b	; 27
  c8:	87 7f       	andi	r24, 0xF7	; 247
  ca:	8b bb       	out	0x1b, r24	; 27
  cc:	08 95       	ret
  ce:	84 30       	cpi	r24, 0x04	; 4
  d0:	91 05       	cpc	r25, r1
  d2:	21 f4       	brne	.+8      	; 0xdc <pinChange+0x4a>
  d4:	8b b3       	in	r24, 0x1b	; 27
  d6:	8f 7e       	andi	r24, 0xEF	; 239
  d8:	8b bb       	out	0x1b, r24	; 27
  da:	08 95       	ret
  dc:	85 30       	cpi	r24, 0x05	; 5
  de:	91 05       	cpc	r25, r1
  e0:	21 f4       	brne	.+8      	; 0xea <pinChange+0x58>
  e2:	8b b3       	in	r24, 0x1b	; 27
  e4:	8f 7d       	andi	r24, 0xDF	; 223
  e6:	8b bb       	out	0x1b, r24	; 27
  e8:	08 95       	ret
  ea:	86 30       	cpi	r24, 0x06	; 6
  ec:	91 05       	cpc	r25, r1
  ee:	21 f4       	brne	.+8      	; 0xf8 <pinChange+0x66>
  f0:	8b b3       	in	r24, 0x1b	; 27
  f2:	8f 7b       	andi	r24, 0xBF	; 191
  f4:	8b bb       	out	0x1b, r24	; 27
  f6:	08 95       	ret
  f8:	87 30       	cpi	r24, 0x07	; 7
  fa:	91 05       	cpc	r25, r1
  fc:	21 f4       	brne	.+8      	; 0x106 <pinChange+0x74>
  fe:	8b b3       	in	r24, 0x1b	; 27
 100:	8f 77       	andi	r24, 0x7F	; 127
 102:	8b bb       	out	0x1b, r24	; 27
 104:	08 95       	ret
 106:	8a 30       	cpi	r24, 0x0A	; 10
 108:	91 05       	cpc	r25, r1
 10a:	21 f4       	brne	.+8      	; 0x114 <pinChange+0x82>
 10c:	88 b3       	in	r24, 0x18	; 24
 10e:	8e 7f       	andi	r24, 0xFE	; 254
 110:	88 bb       	out	0x18, r24	; 24
 112:	08 95       	ret
 114:	8b 30       	cpi	r24, 0x0B	; 11
 116:	91 05       	cpc	r25, r1
 118:	21 f4       	brne	.+8      	; 0x122 <pinChange+0x90>
 11a:	88 b3       	in	r24, 0x18	; 24
 11c:	8d 7f       	andi	r24, 0xFD	; 253
 11e:	88 bb       	out	0x18, r24	; 24
 120:	08 95       	ret
 122:	8c 30       	cpi	r24, 0x0C	; 12
 124:	91 05       	cpc	r25, r1
 126:	21 f4       	brne	.+8      	; 0x130 <pinChange+0x9e>
 128:	88 b3       	in	r24, 0x18	; 24
 12a:	8b 7f       	andi	r24, 0xFB	; 251
 12c:	88 bb       	out	0x18, r24	; 24
 12e:	08 95       	ret
 130:	8d 30       	cpi	r24, 0x0D	; 13
 132:	91 05       	cpc	r25, r1
 134:	21 f4       	brne	.+8      	; 0x13e <pinChange+0xac>
 136:	88 b3       	in	r24, 0x18	; 24
 138:	87 7f       	andi	r24, 0xF7	; 247
 13a:	88 bb       	out	0x18, r24	; 24
 13c:	08 95       	ret
 13e:	8e 30       	cpi	r24, 0x0E	; 14
 140:	91 05       	cpc	r25, r1
 142:	21 f4       	brne	.+8      	; 0x14c <pinChange+0xba>
 144:	88 b3       	in	r24, 0x18	; 24
 146:	8f 7e       	andi	r24, 0xEF	; 239
 148:	88 bb       	out	0x18, r24	; 24
 14a:	08 95       	ret
 14c:	8f 30       	cpi	r24, 0x0F	; 15
 14e:	91 05       	cpc	r25, r1
 150:	21 f4       	brne	.+8      	; 0x15a <pinChange+0xc8>
 152:	88 b3       	in	r24, 0x18	; 24
 154:	8f 7d       	andi	r24, 0xDF	; 223
 156:	88 bb       	out	0x18, r24	; 24
 158:	08 95       	ret
 15a:	80 31       	cpi	r24, 0x10	; 16
 15c:	91 05       	cpc	r25, r1
 15e:	21 f4       	brne	.+8      	; 0x168 <pinChange+0xd6>
 160:	88 b3       	in	r24, 0x18	; 24
 162:	8f 7b       	andi	r24, 0xBF	; 191
 164:	88 bb       	out	0x18, r24	; 24
 166:	08 95       	ret
 168:	81 31       	cpi	r24, 0x11	; 17
 16a:	91 05       	cpc	r25, r1
 16c:	21 f4       	brne	.+8      	; 0x176 <pinChange+0xe4>
 16e:	88 b3       	in	r24, 0x18	; 24
 170:	8f 77       	andi	r24, 0x7F	; 127
 172:	88 bb       	out	0x18, r24	; 24
 174:	08 95       	ret
 176:	84 31       	cpi	r24, 0x14	; 20
 178:	91 05       	cpc	r25, r1
 17a:	21 f4       	brne	.+8      	; 0x184 <pinChange+0xf2>
 17c:	85 b3       	in	r24, 0x15	; 21
 17e:	8e 7f       	andi	r24, 0xFE	; 254
 180:	85 bb       	out	0x15, r24	; 21
 182:	08 95       	ret
 184:	85 31       	cpi	r24, 0x15	; 21
 186:	91 05       	cpc	r25, r1
 188:	21 f4       	brne	.+8      	; 0x192 <pinChange+0x100>
 18a:	85 b3       	in	r24, 0x15	; 21
 18c:	8d 7f       	andi	r24, 0xFD	; 253
 18e:	85 bb       	out	0x15, r24	; 21
 190:	08 95       	ret
 192:	86 31       	cpi	r24, 0x16	; 22
 194:	91 05       	cpc	r25, r1
 196:	21 f4       	brne	.+8      	; 0x1a0 <pinChange+0x10e>
 198:	85 b3       	in	r24, 0x15	; 21
 19a:	8b 7f       	andi	r24, 0xFB	; 251
 19c:	85 bb       	out	0x15, r24	; 21
 19e:	08 95       	ret
 1a0:	87 31       	cpi	r24, 0x17	; 23
 1a2:	91 05       	cpc	r25, r1
 1a4:	21 f4       	brne	.+8      	; 0x1ae <pinChange+0x11c>
 1a6:	85 b3       	in	r24, 0x15	; 21
 1a8:	87 7f       	andi	r24, 0xF7	; 247
 1aa:	85 bb       	out	0x15, r24	; 21
 1ac:	08 95       	ret
 1ae:	88 31       	cpi	r24, 0x18	; 24
 1b0:	91 05       	cpc	r25, r1
 1b2:	21 f4       	brne	.+8      	; 0x1bc <pinChange+0x12a>
 1b4:	85 b3       	in	r24, 0x15	; 21
 1b6:	8f 7e       	andi	r24, 0xEF	; 239
 1b8:	85 bb       	out	0x15, r24	; 21
 1ba:	08 95       	ret
 1bc:	89 31       	cpi	r24, 0x19	; 25
 1be:	91 05       	cpc	r25, r1
 1c0:	21 f4       	brne	.+8      	; 0x1ca <pinChange+0x138>
 1c2:	85 b3       	in	r24, 0x15	; 21
 1c4:	8f 7d       	andi	r24, 0xDF	; 223
 1c6:	85 bb       	out	0x15, r24	; 21
 1c8:	08 95       	ret
 1ca:	8a 31       	cpi	r24, 0x1A	; 26
 1cc:	91 05       	cpc	r25, r1
 1ce:	21 f4       	brne	.+8      	; 0x1d8 <pinChange+0x146>
 1d0:	85 b3       	in	r24, 0x15	; 21
 1d2:	8f 7b       	andi	r24, 0xBF	; 191
 1d4:	85 bb       	out	0x15, r24	; 21
 1d6:	08 95       	ret
 1d8:	8b 31       	cpi	r24, 0x1B	; 27
 1da:	91 05       	cpc	r25, r1
 1dc:	21 f4       	brne	.+8      	; 0x1e6 <pinChange+0x154>
 1de:	85 b3       	in	r24, 0x15	; 21
 1e0:	8f 77       	andi	r24, 0x7F	; 127
 1e2:	85 bb       	out	0x15, r24	; 21
 1e4:	08 95       	ret
 1e6:	8e 31       	cpi	r24, 0x1E	; 30
 1e8:	91 05       	cpc	r25, r1
 1ea:	21 f4       	brne	.+8      	; 0x1f4 <pinChange+0x162>
 1ec:	82 b3       	in	r24, 0x12	; 18
 1ee:	8e 7f       	andi	r24, 0xFE	; 254
 1f0:	82 bb       	out	0x12, r24	; 18
 1f2:	08 95       	ret
 1f4:	8f 31       	cpi	r24, 0x1F	; 31
 1f6:	91 05       	cpc	r25, r1
 1f8:	21 f4       	brne	.+8      	; 0x202 <pinChange+0x170>
 1fa:	82 b3       	in	r24, 0x12	; 18
 1fc:	8d 7f       	andi	r24, 0xFD	; 253
 1fe:	82 bb       	out	0x12, r24	; 18
 200:	08 95       	ret
 202:	80 32       	cpi	r24, 0x20	; 32
 204:	91 05       	cpc	r25, r1
 206:	21 f4       	brne	.+8      	; 0x210 <pinChange+0x17e>
 208:	82 b3       	in	r24, 0x12	; 18
 20a:	8b 7f       	andi	r24, 0xFB	; 251
 20c:	82 bb       	out	0x12, r24	; 18
 20e:	08 95       	ret
 210:	81 32       	cpi	r24, 0x21	; 33
 212:	91 05       	cpc	r25, r1
 214:	21 f4       	brne	.+8      	; 0x21e <pinChange+0x18c>
 216:	82 b3       	in	r24, 0x12	; 18
 218:	87 7f       	andi	r24, 0xF7	; 247
 21a:	82 bb       	out	0x12, r24	; 18
 21c:	08 95       	ret
 21e:	82 32       	cpi	r24, 0x22	; 34
 220:	91 05       	cpc	r25, r1
 222:	21 f4       	brne	.+8      	; 0x22c <pinChange+0x19a>
 224:	82 b3       	in	r24, 0x12	; 18
 226:	8f 7e       	andi	r24, 0xEF	; 239
 228:	82 bb       	out	0x12, r24	; 18
 22a:	08 95       	ret
 22c:	83 32       	cpi	r24, 0x23	; 35
 22e:	91 05       	cpc	r25, r1
 230:	21 f4       	brne	.+8      	; 0x23a <pinChange+0x1a8>
 232:	82 b3       	in	r24, 0x12	; 18
 234:	8f 7d       	andi	r24, 0xDF	; 223
 236:	82 bb       	out	0x12, r24	; 18
 238:	08 95       	ret
 23a:	84 32       	cpi	r24, 0x24	; 36
 23c:	91 05       	cpc	r25, r1
 23e:	21 f4       	brne	.+8      	; 0x248 <pinChange+0x1b6>
 240:	82 b3       	in	r24, 0x12	; 18
 242:	8f 7b       	andi	r24, 0xBF	; 191
 244:	82 bb       	out	0x12, r24	; 18
 246:	08 95       	ret
 248:	85 97       	sbiw	r24, 0x25	; 37
 24a:	09 f0       	breq	.+2      	; 0x24e <pinChange+0x1bc>
 24c:	e1 c0       	rjmp	.+450    	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
 24e:	82 b3       	in	r24, 0x12	; 18
 250:	8f 77       	andi	r24, 0x7F	; 127
 252:	82 bb       	out	0x12, r24	; 18
 254:	08 95       	ret
 256:	00 97       	sbiw	r24, 0x00	; 0
 258:	21 f4       	brne	.+8      	; 0x262 <pinChange+0x1d0>
 25a:	8b b3       	in	r24, 0x1b	; 27
 25c:	81 60       	ori	r24, 0x01	; 1
 25e:	8b bb       	out	0x1b, r24	; 27
 260:	08 95       	ret
 262:	81 30       	cpi	r24, 0x01	; 1
 264:	91 05       	cpc	r25, r1
 266:	21 f4       	brne	.+8      	; 0x270 <pinChange+0x1de>
 268:	8b b3       	in	r24, 0x1b	; 27
 26a:	82 60       	ori	r24, 0x02	; 2
 26c:	8b bb       	out	0x1b, r24	; 27
 26e:	08 95       	ret
 270:	82 30       	cpi	r24, 0x02	; 2
 272:	91 05       	cpc	r25, r1
 274:	21 f4       	brne	.+8      	; 0x27e <pinChange+0x1ec>
 276:	8b b3       	in	r24, 0x1b	; 27
 278:	84 60       	ori	r24, 0x04	; 4
 27a:	8b bb       	out	0x1b, r24	; 27
 27c:	08 95       	ret
 27e:	83 30       	cpi	r24, 0x03	; 3
 280:	91 05       	cpc	r25, r1
 282:	21 f4       	brne	.+8      	; 0x28c <pinChange+0x1fa>
 284:	8b b3       	in	r24, 0x1b	; 27
 286:	88 60       	ori	r24, 0x08	; 8
 288:	8b bb       	out	0x1b, r24	; 27
 28a:	08 95       	ret
 28c:	84 30       	cpi	r24, 0x04	; 4
 28e:	91 05       	cpc	r25, r1
 290:	21 f4       	brne	.+8      	; 0x29a <pinChange+0x208>
 292:	8b b3       	in	r24, 0x1b	; 27
 294:	80 61       	ori	r24, 0x10	; 16
 296:	8b bb       	out	0x1b, r24	; 27
 298:	08 95       	ret
 29a:	85 30       	cpi	r24, 0x05	; 5
 29c:	91 05       	cpc	r25, r1
 29e:	21 f4       	brne	.+8      	; 0x2a8 <pinChange+0x216>
 2a0:	8b b3       	in	r24, 0x1b	; 27
 2a2:	80 62       	ori	r24, 0x20	; 32
 2a4:	8b bb       	out	0x1b, r24	; 27
 2a6:	08 95       	ret
 2a8:	86 30       	cpi	r24, 0x06	; 6
 2aa:	91 05       	cpc	r25, r1
 2ac:	21 f4       	brne	.+8      	; 0x2b6 <pinChange+0x224>
 2ae:	8b b3       	in	r24, 0x1b	; 27
 2b0:	80 64       	ori	r24, 0x40	; 64
 2b2:	8b bb       	out	0x1b, r24	; 27
 2b4:	08 95       	ret
 2b6:	87 30       	cpi	r24, 0x07	; 7
 2b8:	91 05       	cpc	r25, r1
 2ba:	21 f4       	brne	.+8      	; 0x2c4 <pinChange+0x232>
 2bc:	8b b3       	in	r24, 0x1b	; 27
 2be:	80 68       	ori	r24, 0x80	; 128
 2c0:	8b bb       	out	0x1b, r24	; 27
 2c2:	08 95       	ret
 2c4:	8a 30       	cpi	r24, 0x0A	; 10
 2c6:	91 05       	cpc	r25, r1
 2c8:	21 f4       	brne	.+8      	; 0x2d2 <pinChange+0x240>
 2ca:	88 b3       	in	r24, 0x18	; 24
 2cc:	81 60       	ori	r24, 0x01	; 1
 2ce:	88 bb       	out	0x18, r24	; 24
 2d0:	08 95       	ret
 2d2:	8b 30       	cpi	r24, 0x0B	; 11
 2d4:	91 05       	cpc	r25, r1
 2d6:	21 f4       	brne	.+8      	; 0x2e0 <pinChange+0x24e>
 2d8:	88 b3       	in	r24, 0x18	; 24
 2da:	82 60       	ori	r24, 0x02	; 2
 2dc:	88 bb       	out	0x18, r24	; 24
 2de:	08 95       	ret
 2e0:	8c 30       	cpi	r24, 0x0C	; 12
 2e2:	91 05       	cpc	r25, r1
 2e4:	21 f4       	brne	.+8      	; 0x2ee <pinChange+0x25c>
 2e6:	88 b3       	in	r24, 0x18	; 24
 2e8:	84 60       	ori	r24, 0x04	; 4
 2ea:	88 bb       	out	0x18, r24	; 24
 2ec:	08 95       	ret
 2ee:	8d 30       	cpi	r24, 0x0D	; 13
 2f0:	91 05       	cpc	r25, r1
 2f2:	21 f4       	brne	.+8      	; 0x2fc <pinChange+0x26a>
 2f4:	88 b3       	in	r24, 0x18	; 24
 2f6:	88 60       	ori	r24, 0x08	; 8
 2f8:	88 bb       	out	0x18, r24	; 24
 2fa:	08 95       	ret
 2fc:	8e 30       	cpi	r24, 0x0E	; 14
 2fe:	91 05       	cpc	r25, r1
 300:	21 f4       	brne	.+8      	; 0x30a <pinChange+0x278>
 302:	88 b3       	in	r24, 0x18	; 24
 304:	80 61       	ori	r24, 0x10	; 16
 306:	88 bb       	out	0x18, r24	; 24
 308:	08 95       	ret
 30a:	8f 30       	cpi	r24, 0x0F	; 15
 30c:	91 05       	cpc	r25, r1
 30e:	21 f4       	brne	.+8      	; 0x318 <pinChange+0x286>
 310:	88 b3       	in	r24, 0x18	; 24
 312:	80 62       	ori	r24, 0x20	; 32
 314:	88 bb       	out	0x18, r24	; 24
 316:	08 95       	ret
 318:	80 31       	cpi	r24, 0x10	; 16
 31a:	91 05       	cpc	r25, r1
 31c:	21 f4       	brne	.+8      	; 0x326 <pinChange+0x294>
 31e:	88 b3       	in	r24, 0x18	; 24
 320:	80 64       	ori	r24, 0x40	; 64
 322:	88 bb       	out	0x18, r24	; 24
 324:	08 95       	ret
 326:	81 31       	cpi	r24, 0x11	; 17
 328:	91 05       	cpc	r25, r1
 32a:	21 f4       	brne	.+8      	; 0x334 <pinChange+0x2a2>
 32c:	88 b3       	in	r24, 0x18	; 24
 32e:	80 68       	ori	r24, 0x80	; 128
 330:	88 bb       	out	0x18, r24	; 24
 332:	08 95       	ret
 334:	84 31       	cpi	r24, 0x14	; 20
 336:	91 05       	cpc	r25, r1
 338:	21 f4       	brne	.+8      	; 0x342 <pinChange+0x2b0>
 33a:	85 b3       	in	r24, 0x15	; 21
 33c:	81 60       	ori	r24, 0x01	; 1
 33e:	85 bb       	out	0x15, r24	; 21
 340:	08 95       	ret
 342:	85 31       	cpi	r24, 0x15	; 21
 344:	91 05       	cpc	r25, r1
 346:	21 f4       	brne	.+8      	; 0x350 <pinChange+0x2be>
 348:	85 b3       	in	r24, 0x15	; 21
 34a:	82 60       	ori	r24, 0x02	; 2
 34c:	85 bb       	out	0x15, r24	; 21
 34e:	08 95       	ret
 350:	86 31       	cpi	r24, 0x16	; 22
 352:	91 05       	cpc	r25, r1
 354:	21 f4       	brne	.+8      	; 0x35e <pinChange+0x2cc>
 356:	85 b3       	in	r24, 0x15	; 21
 358:	84 60       	ori	r24, 0x04	; 4
 35a:	85 bb       	out	0x15, r24	; 21
 35c:	08 95       	ret
 35e:	87 31       	cpi	r24, 0x17	; 23
 360:	91 05       	cpc	r25, r1
 362:	21 f4       	brne	.+8      	; 0x36c <pinChange+0x2da>
 364:	85 b3       	in	r24, 0x15	; 21
 366:	88 60       	ori	r24, 0x08	; 8
 368:	85 bb       	out	0x15, r24	; 21
 36a:	08 95       	ret
 36c:	88 31       	cpi	r24, 0x18	; 24
 36e:	91 05       	cpc	r25, r1
 370:	21 f4       	brne	.+8      	; 0x37a <pinChange+0x2e8>
 372:	85 b3       	in	r24, 0x15	; 21
 374:	80 61       	ori	r24, 0x10	; 16
 376:	85 bb       	out	0x15, r24	; 21
 378:	08 95       	ret
 37a:	89 31       	cpi	r24, 0x19	; 25
 37c:	91 05       	cpc	r25, r1
 37e:	21 f4       	brne	.+8      	; 0x388 <pinChange+0x2f6>
 380:	85 b3       	in	r24, 0x15	; 21
 382:	80 62       	ori	r24, 0x20	; 32
 384:	85 bb       	out	0x15, r24	; 21
 386:	08 95       	ret
 388:	8a 31       	cpi	r24, 0x1A	; 26
 38a:	91 05       	cpc	r25, r1
 38c:	21 f4       	brne	.+8      	; 0x396 <pinChange+0x304>
 38e:	85 b3       	in	r24, 0x15	; 21
 390:	80 64       	ori	r24, 0x40	; 64
 392:	85 bb       	out	0x15, r24	; 21
 394:	08 95       	ret
 396:	8b 31       	cpi	r24, 0x1B	; 27
 398:	91 05       	cpc	r25, r1
 39a:	21 f4       	brne	.+8      	; 0x3a4 <pinChange+0x312>
 39c:	85 b3       	in	r24, 0x15	; 21
 39e:	80 68       	ori	r24, 0x80	; 128
 3a0:	85 bb       	out	0x15, r24	; 21
 3a2:	08 95       	ret
 3a4:	8e 31       	cpi	r24, 0x1E	; 30
 3a6:	91 05       	cpc	r25, r1
 3a8:	21 f4       	brne	.+8      	; 0x3b2 <pinChange+0x320>
 3aa:	82 b3       	in	r24, 0x12	; 18
 3ac:	81 60       	ori	r24, 0x01	; 1
 3ae:	82 bb       	out	0x12, r24	; 18
 3b0:	08 95       	ret
 3b2:	8f 31       	cpi	r24, 0x1F	; 31
 3b4:	91 05       	cpc	r25, r1
 3b6:	21 f4       	brne	.+8      	; 0x3c0 <pinChange+0x32e>
 3b8:	82 b3       	in	r24, 0x12	; 18
 3ba:	82 60       	ori	r24, 0x02	; 2
 3bc:	82 bb       	out	0x12, r24	; 18
 3be:	08 95       	ret
 3c0:	80 32       	cpi	r24, 0x20	; 32
 3c2:	91 05       	cpc	r25, r1
 3c4:	21 f4       	brne	.+8      	; 0x3ce <pinChange+0x33c>
 3c6:	82 b3       	in	r24, 0x12	; 18
 3c8:	84 60       	ori	r24, 0x04	; 4
 3ca:	82 bb       	out	0x12, r24	; 18
 3cc:	08 95       	ret
 3ce:	81 32       	cpi	r24, 0x21	; 33
 3d0:	91 05       	cpc	r25, r1
 3d2:	21 f4       	brne	.+8      	; 0x3dc <pinChange+0x34a>
 3d4:	82 b3       	in	r24, 0x12	; 18
 3d6:	88 60       	ori	r24, 0x08	; 8
 3d8:	82 bb       	out	0x12, r24	; 18
 3da:	08 95       	ret
 3dc:	82 32       	cpi	r24, 0x22	; 34
 3de:	91 05       	cpc	r25, r1
 3e0:	21 f4       	brne	.+8      	; 0x3ea <pinChange+0x358>
 3e2:	82 b3       	in	r24, 0x12	; 18
 3e4:	80 61       	ori	r24, 0x10	; 16
 3e6:	82 bb       	out	0x12, r24	; 18
 3e8:	08 95       	ret
 3ea:	83 32       	cpi	r24, 0x23	; 35
 3ec:	91 05       	cpc	r25, r1
 3ee:	21 f4       	brne	.+8      	; 0x3f8 <pinChange+0x366>
 3f0:	82 b3       	in	r24, 0x12	; 18
 3f2:	80 62       	ori	r24, 0x20	; 32
 3f4:	82 bb       	out	0x12, r24	; 18
 3f6:	08 95       	ret
 3f8:	84 32       	cpi	r24, 0x24	; 36
 3fa:	91 05       	cpc	r25, r1
 3fc:	21 f4       	brne	.+8      	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 3fe:	82 b3       	in	r24, 0x12	; 18
 400:	80 64       	ori	r24, 0x40	; 64
 402:	82 bb       	out	0x12, r24	; 18
 404:	08 95       	ret
 406:	85 97       	sbiw	r24, 0x25	; 37
 408:	19 f4       	brne	.+6      	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
 40a:	82 b3       	in	r24, 0x12	; 18
 40c:	80 68       	ori	r24, 0x80	; 128
 40e:	82 bb       	out	0x12, r24	; 18
 410:	08 95       	ret

00000412 <Lcd4_Port>:
 412:	cf 93       	push	r28
 414:	c8 2f       	mov	r28, r24
 416:	80 ff       	sbrs	r24, 0
 418:	07 c0       	rjmp	.+14     	; 0x428 <Lcd4_Port+0x16>
 41a:	61 e0       	ldi	r22, 0x01	; 1
 41c:	70 e0       	ldi	r23, 0x00	; 0
 41e:	82 e2       	ldi	r24, 0x22	; 34
 420:	90 e0       	ldi	r25, 0x00	; 0
 422:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 426:	06 c0       	rjmp	.+12     	; 0x434 <Lcd4_Port+0x22>
 428:	60 e0       	ldi	r22, 0x00	; 0
 42a:	70 e0       	ldi	r23, 0x00	; 0
 42c:	82 e2       	ldi	r24, 0x22	; 34
 42e:	90 e0       	ldi	r25, 0x00	; 0
 430:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 434:	c1 ff       	sbrs	r28, 1
 436:	07 c0       	rjmp	.+14     	; 0x446 <Lcd4_Port+0x34>
 438:	61 e0       	ldi	r22, 0x01	; 1
 43a:	70 e0       	ldi	r23, 0x00	; 0
 43c:	83 e2       	ldi	r24, 0x23	; 35
 43e:	90 e0       	ldi	r25, 0x00	; 0
 440:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 444:	06 c0       	rjmp	.+12     	; 0x452 <Lcd4_Port+0x40>
 446:	60 e0       	ldi	r22, 0x00	; 0
 448:	70 e0       	ldi	r23, 0x00	; 0
 44a:	83 e2       	ldi	r24, 0x23	; 35
 44c:	90 e0       	ldi	r25, 0x00	; 0
 44e:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 452:	c2 ff       	sbrs	r28, 2
 454:	07 c0       	rjmp	.+14     	; 0x464 <Lcd4_Port+0x52>
 456:	61 e0       	ldi	r22, 0x01	; 1
 458:	70 e0       	ldi	r23, 0x00	; 0
 45a:	84 e2       	ldi	r24, 0x24	; 36
 45c:	90 e0       	ldi	r25, 0x00	; 0
 45e:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 462:	06 c0       	rjmp	.+12     	; 0x470 <Lcd4_Port+0x5e>
 464:	60 e0       	ldi	r22, 0x00	; 0
 466:	70 e0       	ldi	r23, 0x00	; 0
 468:	84 e2       	ldi	r24, 0x24	; 36
 46a:	90 e0       	ldi	r25, 0x00	; 0
 46c:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 470:	c3 ff       	sbrs	r28, 3
 472:	07 c0       	rjmp	.+14     	; 0x482 <Lcd4_Port+0x70>
 474:	61 e0       	ldi	r22, 0x01	; 1
 476:	70 e0       	ldi	r23, 0x00	; 0
 478:	85 e2       	ldi	r24, 0x25	; 37
 47a:	90 e0       	ldi	r25, 0x00	; 0
 47c:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 480:	06 c0       	rjmp	.+12     	; 0x48e <Lcd4_Port+0x7c>
 482:	60 e0       	ldi	r22, 0x00	; 0
 484:	70 e0       	ldi	r23, 0x00	; 0
 486:	85 e2       	ldi	r24, 0x25	; 37
 488:	90 e0       	ldi	r25, 0x00	; 0
 48a:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 48e:	cf 91       	pop	r28
 490:	08 95       	ret

00000492 <Lcd4_Cmd>:
 492:	cf 93       	push	r28
 494:	c8 2f       	mov	r28, r24
 496:	60 e0       	ldi	r22, 0x00	; 0
 498:	70 e0       	ldi	r23, 0x00	; 0
 49a:	8a e1       	ldi	r24, 0x1A	; 26
 49c:	90 e0       	ldi	r25, 0x00	; 0
 49e:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 4a2:	8c 2f       	mov	r24, r28
 4a4:	0e 94 09 02 	call	0x412	; 0x412 <Lcd4_Port>
 4a8:	61 e0       	ldi	r22, 0x01	; 1
 4aa:	70 e0       	ldi	r23, 0x00	; 0
 4ac:	8b e1       	ldi	r24, 0x1B	; 27
 4ae:	90 e0       	ldi	r25, 0x00	; 0
 4b0:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 4b4:	89 ef       	ldi	r24, 0xF9	; 249
 4b6:	90 e0       	ldi	r25, 0x00	; 0
 4b8:	01 97       	sbiw	r24, 0x01	; 1
 4ba:	f1 f7       	brne	.-4      	; 0x4b8 <Lcd4_Cmd+0x26>
 4bc:	00 c0       	rjmp	.+0      	; 0x4be <Lcd4_Cmd+0x2c>
 4be:	00 00       	nop
 4c0:	60 e0       	ldi	r22, 0x00	; 0
 4c2:	70 e0       	ldi	r23, 0x00	; 0
 4c4:	8b e1       	ldi	r24, 0x1B	; 27
 4c6:	90 e0       	ldi	r25, 0x00	; 0
 4c8:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 4cc:	89 ef       	ldi	r24, 0xF9	; 249
 4ce:	90 e0       	ldi	r25, 0x00	; 0
 4d0:	01 97       	sbiw	r24, 0x01	; 1
 4d2:	f1 f7       	brne	.-4      	; 0x4d0 <Lcd4_Cmd+0x3e>
 4d4:	00 c0       	rjmp	.+0      	; 0x4d6 <Lcd4_Cmd+0x44>
 4d6:	00 00       	nop
 4d8:	cf 91       	pop	r28
 4da:	08 95       	ret

000004dc <Lcd4_Set_Cursor>:
 4dc:	cf 93       	push	r28
 4de:	81 30       	cpi	r24, 0x01	; 1
 4e0:	61 f4       	brne	.+24     	; 0x4fa <Lcd4_Set_Cursor+0x1e>
 4e2:	80 e8       	ldi	r24, 0x80	; 128
 4e4:	86 0f       	add	r24, r22
 4e6:	c6 2f       	mov	r28, r22
 4e8:	cf 70       	andi	r28, 0x0F	; 15
 4ea:	82 95       	swap	r24
 4ec:	8f 70       	andi	r24, 0x0F	; 15
 4ee:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Cmd>
 4f2:	8c 2f       	mov	r24, r28
 4f4:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Cmd>
 4f8:	0d c0       	rjmp	.+26     	; 0x514 <Lcd4_Set_Cursor+0x38>
 4fa:	82 30       	cpi	r24, 0x02	; 2
 4fc:	59 f4       	brne	.+22     	; 0x514 <Lcd4_Set_Cursor+0x38>
 4fe:	80 ec       	ldi	r24, 0xC0	; 192
 500:	86 0f       	add	r24, r22
 502:	c6 2f       	mov	r28, r22
 504:	cf 70       	andi	r28, 0x0F	; 15
 506:	82 95       	swap	r24
 508:	8f 70       	andi	r24, 0x0F	; 15
 50a:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Cmd>
 50e:	8c 2f       	mov	r24, r28
 510:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Cmd>
 514:	cf 91       	pop	r28
 516:	08 95       	ret

00000518 <Lcd4_Init>:
 518:	80 e0       	ldi	r24, 0x00	; 0
 51a:	0e 94 09 02 	call	0x412	; 0x412 <Lcd4_Port>
 51e:	87 e8       	ldi	r24, 0x87	; 135
 520:	93 e1       	ldi	r25, 0x13	; 19
 522:	01 97       	sbiw	r24, 0x01	; 1
 524:	f1 f7       	brne	.-4      	; 0x522 <Lcd4_Init+0xa>
 526:	00 c0       	rjmp	.+0      	; 0x528 <Lcd4_Init+0x10>
 528:	00 00       	nop
 52a:	83 e0       	ldi	r24, 0x03	; 3
 52c:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Cmd>
 530:	81 ee       	ldi	r24, 0xE1	; 225
 532:	94 e0       	ldi	r25, 0x04	; 4
 534:	01 97       	sbiw	r24, 0x01	; 1
 536:	f1 f7       	brne	.-4      	; 0x534 <Lcd4_Init+0x1c>
 538:	00 c0       	rjmp	.+0      	; 0x53a <Lcd4_Init+0x22>
 53a:	00 00       	nop
 53c:	83 e0       	ldi	r24, 0x03	; 3
 53e:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Cmd>
 542:	8d eb       	ldi	r24, 0xBD	; 189
 544:	9a e0       	ldi	r25, 0x0A	; 10
 546:	01 97       	sbiw	r24, 0x01	; 1
 548:	f1 f7       	brne	.-4      	; 0x546 <Lcd4_Init+0x2e>
 54a:	00 c0       	rjmp	.+0      	; 0x54c <Lcd4_Init+0x34>
 54c:	00 00       	nop
 54e:	83 e0       	ldi	r24, 0x03	; 3
 550:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Cmd>
 554:	82 e0       	ldi	r24, 0x02	; 2
 556:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Cmd>
 55a:	82 e0       	ldi	r24, 0x02	; 2
 55c:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Cmd>
 560:	88 e0       	ldi	r24, 0x08	; 8
 562:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Cmd>
 566:	80 e0       	ldi	r24, 0x00	; 0
 568:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Cmd>
 56c:	8c e0       	ldi	r24, 0x0C	; 12
 56e:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Cmd>
 572:	80 e0       	ldi	r24, 0x00	; 0
 574:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Cmd>
 578:	86 e0       	ldi	r24, 0x06	; 6
 57a:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Cmd>
 57e:	08 95       	ret

00000580 <Lcd4_Write_Char>:
 580:	cf 93       	push	r28
 582:	df 93       	push	r29
 584:	d8 2f       	mov	r29, r24
 586:	df 70       	andi	r29, 0x0F	; 15
 588:	c8 2f       	mov	r28, r24
 58a:	c0 7f       	andi	r28, 0xF0	; 240
 58c:	61 e0       	ldi	r22, 0x01	; 1
 58e:	70 e0       	ldi	r23, 0x00	; 0
 590:	8a e1       	ldi	r24, 0x1A	; 26
 592:	90 e0       	ldi	r25, 0x00	; 0
 594:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 598:	8c 2f       	mov	r24, r28
 59a:	82 95       	swap	r24
 59c:	8f 70       	andi	r24, 0x0F	; 15
 59e:	0e 94 09 02 	call	0x412	; 0x412 <Lcd4_Port>
 5a2:	61 e0       	ldi	r22, 0x01	; 1
 5a4:	70 e0       	ldi	r23, 0x00	; 0
 5a6:	8b e1       	ldi	r24, 0x1B	; 27
 5a8:	90 e0       	ldi	r25, 0x00	; 0
 5aa:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 5ae:	89 ef       	ldi	r24, 0xF9	; 249
 5b0:	90 e0       	ldi	r25, 0x00	; 0
 5b2:	01 97       	sbiw	r24, 0x01	; 1
 5b4:	f1 f7       	brne	.-4      	; 0x5b2 <Lcd4_Write_Char+0x32>
 5b6:	00 c0       	rjmp	.+0      	; 0x5b8 <Lcd4_Write_Char+0x38>
 5b8:	00 00       	nop
 5ba:	60 e0       	ldi	r22, 0x00	; 0
 5bc:	70 e0       	ldi	r23, 0x00	; 0
 5be:	8b e1       	ldi	r24, 0x1B	; 27
 5c0:	90 e0       	ldi	r25, 0x00	; 0
 5c2:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 5c6:	89 ef       	ldi	r24, 0xF9	; 249
 5c8:	90 e0       	ldi	r25, 0x00	; 0
 5ca:	01 97       	sbiw	r24, 0x01	; 1
 5cc:	f1 f7       	brne	.-4      	; 0x5ca <Lcd4_Write_Char+0x4a>
 5ce:	00 c0       	rjmp	.+0      	; 0x5d0 <Lcd4_Write_Char+0x50>
 5d0:	00 00       	nop
 5d2:	8d 2f       	mov	r24, r29
 5d4:	0e 94 09 02 	call	0x412	; 0x412 <Lcd4_Port>
 5d8:	61 e0       	ldi	r22, 0x01	; 1
 5da:	70 e0       	ldi	r23, 0x00	; 0
 5dc:	8b e1       	ldi	r24, 0x1B	; 27
 5de:	90 e0       	ldi	r25, 0x00	; 0
 5e0:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 5e4:	89 ef       	ldi	r24, 0xF9	; 249
 5e6:	90 e0       	ldi	r25, 0x00	; 0
 5e8:	01 97       	sbiw	r24, 0x01	; 1
 5ea:	f1 f7       	brne	.-4      	; 0x5e8 <Lcd4_Write_Char+0x68>
 5ec:	00 c0       	rjmp	.+0      	; 0x5ee <Lcd4_Write_Char+0x6e>
 5ee:	00 00       	nop
 5f0:	60 e0       	ldi	r22, 0x00	; 0
 5f2:	70 e0       	ldi	r23, 0x00	; 0
 5f4:	8b e1       	ldi	r24, 0x1B	; 27
 5f6:	90 e0       	ldi	r25, 0x00	; 0
 5f8:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 5fc:	89 ef       	ldi	r24, 0xF9	; 249
 5fe:	90 e0       	ldi	r25, 0x00	; 0
 600:	01 97       	sbiw	r24, 0x01	; 1
 602:	f1 f7       	brne	.-4      	; 0x600 <Lcd4_Write_Char+0x80>
 604:	00 c0       	rjmp	.+0      	; 0x606 <Lcd4_Write_Char+0x86>
 606:	00 00       	nop
 608:	df 91       	pop	r29
 60a:	cf 91       	pop	r28
 60c:	08 95       	ret

0000060e <Lcd4_Write_String>:
 60e:	0f 93       	push	r16
 610:	1f 93       	push	r17
 612:	cf 93       	push	r28
 614:	df 93       	push	r29
 616:	8c 01       	movw	r16, r24
 618:	c0 e0       	ldi	r28, 0x00	; 0
 61a:	d0 e0       	ldi	r29, 0x00	; 0
 61c:	03 c0       	rjmp	.+6      	; 0x624 <Lcd4_Write_String+0x16>
 61e:	0e 94 c0 02 	call	0x580	; 0x580 <Lcd4_Write_Char>
 622:	21 96       	adiw	r28, 0x01	; 1
 624:	f8 01       	movw	r30, r16
 626:	ec 0f       	add	r30, r28
 628:	fd 1f       	adc	r31, r29
 62a:	80 81       	ld	r24, Z
 62c:	81 11       	cpse	r24, r1
 62e:	f7 cf       	rjmp	.-18     	; 0x61e <Lcd4_Write_String+0x10>
 630:	df 91       	pop	r29
 632:	cf 91       	pop	r28
 634:	1f 91       	pop	r17
 636:	0f 91       	pop	r16
 638:	08 95       	ret

0000063a <__vector_9>:
#include "lcd.h"

volatile int overflowCount;
volatile int timeElapsed = 0;

ISR(TIMER1_OVF_vect) {
 63a:	1f 92       	push	r1
 63c:	0f 92       	push	r0
 63e:	0f b6       	in	r0, 0x3f	; 63
 640:	0f 92       	push	r0
 642:	11 24       	eor	r1, r1
 644:	8f 93       	push	r24
 646:	9f 93       	push	r25
	overflowCount++;
 648:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <overflowCount>
 64c:	90 91 75 00 	lds	r25, 0x0075	; 0x800075 <overflowCount+0x1>
 650:	01 96       	adiw	r24, 0x01	; 1
 652:	90 93 75 00 	sts	0x0075, r25	; 0x800075 <overflowCount+0x1>
 656:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <overflowCount>
	if (overflowCount >= 16) {
 65a:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <overflowCount>
 65e:	90 91 75 00 	lds	r25, 0x0075	; 0x800075 <overflowCount+0x1>
 662:	40 97       	sbiw	r24, 0x10	; 16
 664:	6c f0       	brlt	.+26     	; 0x680 <__vector_9+0x46>
		timeElapsed += 1;
 666:	80 91 72 00 	lds	r24, 0x0072	; 0x800072 <__data_end>
 66a:	90 91 73 00 	lds	r25, 0x0073	; 0x800073 <__data_end+0x1>
 66e:	01 96       	adiw	r24, 0x01	; 1
 670:	90 93 73 00 	sts	0x0073, r25	; 0x800073 <__data_end+0x1>
 674:	80 93 72 00 	sts	0x0072, r24	; 0x800072 <__data_end>
		overflowCount = 0;
 678:	10 92 75 00 	sts	0x0075, r1	; 0x800075 <overflowCount+0x1>
 67c:	10 92 74 00 	sts	0x0074, r1	; 0x800074 <overflowCount>
	}
}
 680:	9f 91       	pop	r25
 682:	8f 91       	pop	r24
 684:	0f 90       	pop	r0
 686:	0f be       	out	0x3f, r0	; 63
 688:	0f 90       	pop	r0
 68a:	1f 90       	pop	r1
 68c:	18 95       	reti

0000068e <USART_init>:

void USART_init(void) {
	UCSRA = 0b00000010; // double speed (/8)
 68e:	82 e0       	ldi	r24, 0x02	; 2
 690:	8b b9       	out	0x0b, r24	; 11
	UCSRB = 0b00001000; // only tx
 692:	88 e0       	ldi	r24, 0x08	; 8
 694:	8a b9       	out	0x0a, r24	; 10
	UCSRC = 0b10000110; // async, no parity, 1 stop, 8 data
 696:	86 e8       	ldi	r24, 0x86	; 134
 698:	80 bd       	out	0x20, r24	; 32
	
	UBRRH = 0;
 69a:	10 bc       	out	0x20, r1	; 32
	UBRRL = 12; // baud rate 9600 bps
 69c:	8c e0       	ldi	r24, 0x0C	; 12
 69e:	89 b9       	out	0x09, r24	; 9
 6a0:	08 95       	ret

000006a2 <read_adc>:
double read_adc()
{
	int v_adch=0, v_adcl=0, temp;
	double step_size = 0.0048828125, value;
	
	v_adcl = (int) ADCL;
 6a2:	84 b1       	in	r24, 0x04	; 4
 6a4:	90 e0       	ldi	r25, 0x00	; 0
	v_adch = (int) ADCH;
 6a6:	65 b1       	in	r22, 0x05	; 5
 6a8:	70 e0       	ldi	r23, 0x00	; 0
	
	PORTB = ADCH;
 6aa:	25 b1       	in	r18, 0x05	; 5
 6ac:	28 bb       	out	0x18, r18	; 24
	
	value = v_adch*4 + v_adcl/64;
 6ae:	66 0f       	add	r22, r22
 6b0:	77 1f       	adc	r23, r23
 6b2:	66 0f       	add	r22, r22
 6b4:	77 1f       	adc	r23, r23
 6b6:	08 2e       	mov	r0, r24
 6b8:	89 2f       	mov	r24, r25
 6ba:	00 0c       	add	r0, r0
 6bc:	88 1f       	adc	r24, r24
 6be:	99 0b       	sbc	r25, r25
 6c0:	00 0c       	add	r0, r0
 6c2:	88 1f       	adc	r24, r24
 6c4:	99 1f       	adc	r25, r25
 6c6:	68 0f       	add	r22, r24
 6c8:	79 1f       	adc	r23, r25
 6ca:	07 2e       	mov	r0, r23
 6cc:	00 0c       	add	r0, r0
 6ce:	88 0b       	sbc	r24, r24
 6d0:	99 0b       	sbc	r25, r25
 6d2:	0e 94 4b 06 	call	0xc96	; 0xc96 <__floatsisf>
	value = value*step_size;
 6d6:	20 e0       	ldi	r18, 0x00	; 0
 6d8:	30 e0       	ldi	r19, 0x00	; 0
 6da:	40 ea       	ldi	r20, 0xA0	; 160
 6dc:	5b e3       	ldi	r21, 0x3B	; 59
 6de:	0e 94 00 07 	call	0xe00	; 0xe00 <__mulsf3>
	
	temp = (int)(value * 100 + .5);
 6e2:	20 e0       	ldi	r18, 0x00	; 0
 6e4:	30 e0       	ldi	r19, 0x00	; 0
 6e6:	48 ec       	ldi	r20, 0xC8	; 200
 6e8:	52 e4       	ldi	r21, 0x42	; 66
 6ea:	0e 94 00 07 	call	0xe00	; 0xe00 <__mulsf3>
 6ee:	20 e0       	ldi	r18, 0x00	; 0
 6f0:	30 e0       	ldi	r19, 0x00	; 0
 6f2:	40 e0       	ldi	r20, 0x00	; 0
 6f4:	5f e3       	ldi	r21, 0x3F	; 63
 6f6:	0e 94 30 05 	call	0xa60	; 0xa60 <__addsf3>
 6fa:	0e 94 13 06 	call	0xc26	; 0xc26 <__fixsfsi>
	value = (double) temp/100;
 6fe:	07 2e       	mov	r0, r23
 700:	00 0c       	add	r0, r0
 702:	88 0b       	sbc	r24, r24
 704:	99 0b       	sbc	r25, r25
 706:	0e 94 4b 06 	call	0xc96	; 0xc96 <__floatsisf>
 70a:	20 e0       	ldi	r18, 0x00	; 0
 70c:	30 e0       	ldi	r19, 0x00	; 0
 70e:	48 ec       	ldi	r20, 0xC8	; 200
 710:	52 e4       	ldi	r21, 0x42	; 66
 712:	0e 94 a1 05 	call	0xb42	; 0xb42 <__divsf3>
	
	return value;
}
 716:	08 95       	ret

00000718 <UART_send>:

void UART_send(unsigned char data) {
	while ((UCSRA & (1 << UDRE)) == 0x00);
 718:	5d 9b       	sbis	0x0b, 5	; 11
 71a:	fe cf       	rjmp	.-4      	; 0x718 <UART_send>
	UDR = data;
 71c:	8c b9       	out	0x0c, r24	; 12
 71e:	08 95       	ret

00000720 <main>:
}

int main(void)
{
 720:	cf 93       	push	r28
 722:	df 93       	push	r29
 724:	cd b7       	in	r28, 0x3d	; 61
 726:	de b7       	in	r29, 0x3e	; 62
 728:	61 97       	sbiw	r28, 0x11	; 17
 72a:	0f b6       	in	r0, 0x3f	; 63
 72c:	f8 94       	cli
 72e:	de bf       	out	0x3e, r29	; 62
 730:	0f be       	out	0x3f, r0	; 63
 732:	cd bf       	out	0x3d, r28	; 61
	float voltage;
	int i,j;
	int fingerInSight[3];
	int inSightSum=0;
	int totalFingers = 0;
	timeElapsed = 0;
 734:	10 92 73 00 	sts	0x0073, r1	; 0x800073 <__data_end+0x1>
 738:	10 92 72 00 	sts	0x0072, r1	; 0x800072 <__data_end>
	overflowCount = 0;
 73c:	10 92 75 00 	sts	0x0075, r1	; 0x800075 <overflowCount+0x1>
 740:	10 92 74 00 	sts	0x0074, r1	; 0x800074 <overflowCount>
	char numberArr[5];
	int input = 1;
	int digits[3];
	
	for(i=0; i<3; i++) digits[i]=0;
 744:	80 e0       	ldi	r24, 0x00	; 0
 746:	90 e0       	ldi	r25, 0x00	; 0
 748:	0c c0       	rjmp	.+24     	; 0x762 <main+0x42>
 74a:	fc 01       	movw	r30, r24
 74c:	ee 0f       	add	r30, r30
 74e:	ff 1f       	adc	r31, r31
 750:	21 e0       	ldi	r18, 0x01	; 1
 752:	30 e0       	ldi	r19, 0x00	; 0
 754:	2c 0f       	add	r18, r28
 756:	3d 1f       	adc	r19, r29
 758:	e2 0f       	add	r30, r18
 75a:	f3 1f       	adc	r31, r19
 75c:	14 86       	std	Z+12, r1	; 0x0c
 75e:	13 86       	std	Z+11, r1	; 0x0b
 760:	01 96       	adiw	r24, 0x01	; 1
 762:	83 30       	cpi	r24, 0x03	; 3
 764:	91 05       	cpc	r25, r1
 766:	8c f3       	brlt	.-30     	; 0x74a <main+0x2a>
 768:	80 e0       	ldi	r24, 0x00	; 0
 76a:	90 e0       	ldi	r25, 0x00	; 0
 76c:	0e c0       	rjmp	.+28     	; 0x78a <main+0x6a>
	
	for(i=0; i<3; i++) fingerInSight[i]=1;
 76e:	fc 01       	movw	r30, r24
 770:	ee 0f       	add	r30, r30
 772:	ff 1f       	adc	r31, r31
 774:	41 e0       	ldi	r20, 0x01	; 1
 776:	50 e0       	ldi	r21, 0x00	; 0
 778:	4c 0f       	add	r20, r28
 77a:	5d 1f       	adc	r21, r29
 77c:	e4 0f       	add	r30, r20
 77e:	f5 1f       	adc	r31, r21
 780:	21 e0       	ldi	r18, 0x01	; 1
 782:	30 e0       	ldi	r19, 0x00	; 0
 784:	31 83       	std	Z+1, r19	; 0x01
 786:	20 83       	st	Z, r18
 788:	01 96       	adiw	r24, 0x01	; 1
 78a:	83 30       	cpi	r24, 0x03	; 3
 78c:	91 05       	cpc	r25, r1
 78e:	7c f3       	brlt	.-34     	; 0x76e <main+0x4e>
	
	// configure I/O
	DDRB = 0xFF;
 790:	8f ef       	ldi	r24, 0xFF	; 255
 792:	87 bb       	out	0x17, r24	; 23
	DDRD = 0xFF;
 794:	81 bb       	out	0x11, r24	; 17
	DDRC = 0xFF;
 796:	84 bb       	out	0x14, r24	; 20
	// configure ADC
	ADMUX = 0b01100111; // 3.0, Right, ADC7
 798:	87 e6       	ldi	r24, 0x67	; 103
 79a:	87 b9       	out	0x07, r24	; 7
	ADCSRA = 0b10000110; // 64
 79c:	86 e8       	ldi	r24, 0x86	; 134
 79e:	86 b9       	out	0x06, r24	; 6
	Lcd4_Init();
 7a0:	0e 94 8c 02 	call	0x518	; 0x518 <Lcd4_Init>
	// configure timer
	TCCR1A = 0b00000000; // normal mode
 7a4:	1f bc       	out	0x2f, r1	; 47
	TCCR1B = 0b00000001; // no prescaler
 7a6:	81 e0       	ldi	r24, 0x01	; 1
 7a8:	8e bd       	out	0x2e, r24	; 46
	TIMSK = 0b00000100; // timer 1
 7aa:	84 e0       	ldi	r24, 0x04	; 4
 7ac:	89 bf       	out	0x39, r24	; 57
	sei();
 7ae:	78 94       	sei
	// set comm
	USART_init();
 7b0:	0e 94 47 03 	call	0x68e	; 0x68e <USART_init>
	
	while(1)
	{
		ADMUX = 0b01100111;
 7b4:	87 e6       	ldi	r24, 0x67	; 103
 7b6:	87 b9       	out	0x07, r24	; 7
		
		for (j=0; j<3; j++)
 7b8:	00 e0       	ldi	r16, 0x00	; 0
 7ba:	10 e0       	ldi	r17, 0x00	; 0
 7bc:	58 c0       	rjmp	.+176    	; 0x86e <__stack+0xf>
		{
			// ================ ADC - read voltage ================
			ADCSRA |= (1 << ADSC);
 7be:	86 b1       	in	r24, 0x06	; 6
 7c0:	80 64       	ori	r24, 0x40	; 64
 7c2:	86 b9       	out	0x06, r24	; 6
			while (ADCSRA & (1 << ADSC)) {;}
 7c4:	36 99       	sbic	0x06, 6	; 6
 7c6:	fe cf       	rjmp	.-4      	; 0x7c4 <main+0xa4>
			voltage = read_adc();
 7c8:	0e 94 51 03 	call	0x6a2	; 0x6a2 <read_adc>
 7cc:	4b 01       	movw	r8, r22
 7ce:	5c 01       	movw	r10, r24
			ADMUX-=1;
 7d0:	87 b1       	in	r24, 0x07	; 7
 7d2:	81 50       	subi	r24, 0x01	; 1
 7d4:	87 b9       	out	0x07, r24	; 7
			
			// ================ Gesture - finger detection ================
			
			if (!fingerInSight[j] && voltage < 2) {
 7d6:	f8 01       	movw	r30, r16
 7d8:	ee 0f       	add	r30, r30
 7da:	ff 1f       	adc	r31, r31
 7dc:	81 e0       	ldi	r24, 0x01	; 1
 7de:	90 e0       	ldi	r25, 0x00	; 0
 7e0:	8c 0f       	add	r24, r28
 7e2:	9d 1f       	adc	r25, r29
 7e4:	e8 0f       	add	r30, r24
 7e6:	f9 1f       	adc	r31, r25
 7e8:	e0 80       	ld	r14, Z
 7ea:	f1 80       	ldd	r15, Z+1	; 0x01
 7ec:	e1 14       	cp	r14, r1
 7ee:	f1 04       	cpc	r15, r1
 7f0:	09 f5       	brne	.+66     	; 0x834 <__DATA_REGION_LENGTH__+0x34>
 7f2:	20 e0       	ldi	r18, 0x00	; 0
 7f4:	30 e0       	ldi	r19, 0x00	; 0
 7f6:	40 e0       	ldi	r20, 0x00	; 0
 7f8:	50 e4       	ldi	r21, 0x40	; 64
 7fa:	c5 01       	movw	r24, r10
 7fc:	b4 01       	movw	r22, r8
 7fe:	0e 94 9c 05 	call	0xb38	; 0xb38 <__cmpsf2>
 802:	88 23       	and	r24, r24
 804:	bc f4       	brge	.+46     	; 0x834 <__DATA_REGION_LENGTH__+0x34>
				// light to dark, finger
				digits[j] += 1;
 806:	f8 01       	movw	r30, r16
 808:	ee 0f       	add	r30, r30
 80a:	ff 1f       	adc	r31, r31
 80c:	21 e0       	ldi	r18, 0x01	; 1
 80e:	30 e0       	ldi	r19, 0x00	; 0
 810:	2c 0f       	add	r18, r28
 812:	3d 1f       	adc	r19, r29
 814:	e2 0f       	add	r30, r18
 816:	f3 1f       	adc	r31, r19
 818:	83 85       	ldd	r24, Z+11	; 0x0b
 81a:	94 85       	ldd	r25, Z+12	; 0x0c
 81c:	01 96       	adiw	r24, 0x01	; 1
 81e:	94 87       	std	Z+12, r25	; 0x0c
 820:	83 87       	std	Z+11, r24	; 0x0b
				timeElapsed = 0;
 822:	10 92 73 00 	sts	0x0073, r1	; 0x800073 <__data_end+0x1>
 826:	10 92 72 00 	sts	0x0072, r1	; 0x800072 <__data_end>
				fingerInSight[j] = 1;
 82a:	81 e0       	ldi	r24, 0x01	; 1
 82c:	90 e0       	ldi	r25, 0x00	; 0
 82e:	91 83       	std	Z+1, r25	; 0x01
 830:	80 83       	st	Z, r24
 832:	1b c0       	rjmp	.+54     	; 0x86a <__stack+0xb>
			}
			else if (fingerInSight[j] && voltage > 2) {
 834:	ef 28       	or	r14, r15
 836:	c9 f0       	breq	.+50     	; 0x86a <__stack+0xb>
 838:	20 e0       	ldi	r18, 0x00	; 0
 83a:	30 e0       	ldi	r19, 0x00	; 0
 83c:	40 e0       	ldi	r20, 0x00	; 0
 83e:	50 e4       	ldi	r21, 0x40	; 64
 840:	c5 01       	movw	r24, r10
 842:	b4 01       	movw	r22, r8
 844:	0e 94 fb 06 	call	0xdf6	; 0xdf6 <__gesf2>
 848:	18 16       	cp	r1, r24
 84a:	7c f4       	brge	.+30     	; 0x86a <__stack+0xb>
				// dark to light, no finger
				timeElapsed = 0;
 84c:	10 92 73 00 	sts	0x0073, r1	; 0x800073 <__data_end+0x1>
 850:	10 92 72 00 	sts	0x0072, r1	; 0x800072 <__data_end>
				fingerInSight[j] = 0;
 854:	f8 01       	movw	r30, r16
 856:	ee 0f       	add	r30, r30
 858:	ff 1f       	adc	r31, r31
 85a:	41 e0       	ldi	r20, 0x01	; 1
 85c:	50 e0       	ldi	r21, 0x00	; 0
 85e:	4c 0f       	add	r20, r28
 860:	5d 1f       	adc	r21, r29
 862:	e4 0f       	add	r30, r20
 864:	f5 1f       	adc	r31, r21
 866:	11 82       	std	Z+1, r1	; 0x01
 868:	10 82       	st	Z, r1
	
	while(1)
	{
		ADMUX = 0b01100111;
		
		for (j=0; j<3; j++)
 86a:	0f 5f       	subi	r16, 0xFF	; 255
 86c:	1f 4f       	sbci	r17, 0xFF	; 255
 86e:	03 30       	cpi	r16, 0x03	; 3
 870:	11 05       	cpc	r17, r1
 872:	0c f4       	brge	.+2      	; 0x876 <__stack+0x17>
 874:	a4 cf       	rjmp	.-184    	; 0x7be <main+0x9e>
 876:	20 e0       	ldi	r18, 0x00	; 0
 878:	30 e0       	ldi	r19, 0x00	; 0
 87a:	80 e0       	ldi	r24, 0x00	; 0
 87c:	90 e0       	ldi	r25, 0x00	; 0
 87e:	0e c0       	rjmp	.+28     	; 0x89c <__stack+0x3d>
			
		}
		
		inSightSum=0;
		
		for(i=0; i<3; i++) inSightSum+=fingerInSight[i];
 880:	fc 01       	movw	r30, r24
 882:	ee 0f       	add	r30, r30
 884:	ff 1f       	adc	r31, r31
 886:	41 e0       	ldi	r20, 0x01	; 1
 888:	50 e0       	ldi	r21, 0x00	; 0
 88a:	4c 0f       	add	r20, r28
 88c:	5d 1f       	adc	r21, r29
 88e:	e4 0f       	add	r30, r20
 890:	f5 1f       	adc	r31, r21
 892:	40 81       	ld	r20, Z
 894:	51 81       	ldd	r21, Z+1	; 0x01
 896:	24 0f       	add	r18, r20
 898:	35 1f       	adc	r19, r21
 89a:	01 96       	adiw	r24, 0x01	; 1
 89c:	83 30       	cpi	r24, 0x03	; 3
 89e:	91 05       	cpc	r25, r1
 8a0:	7c f3       	brlt	.-34     	; 0x880 <__stack+0x21>
		
		
		// ================ Control - reset, change digit, final result ================
		
		if (timeElapsed > 6 && !inSightSum) {
 8a2:	80 91 72 00 	lds	r24, 0x0072	; 0x800072 <__data_end>
 8a6:	90 91 73 00 	lds	r25, 0x0073	; 0x800073 <__data_end+0x1>
 8aa:	07 97       	sbiw	r24, 0x07	; 7
 8ac:	84 f1       	brlt	.+96     	; 0x90e <__stack+0xaf>
 8ae:	21 15       	cp	r18, r1
 8b0:	31 05       	cpc	r19, r1
 8b2:	69 f5       	brne	.+90     	; 0x90e <__stack+0xaf>
			// reset input, set to digit 1 (LSB)
			timeElapsed = 0;
 8b4:	10 92 73 00 	sts	0x0073, r1	; 0x800073 <__data_end+0x1>
 8b8:	10 92 72 00 	sts	0x0072, r1	; 0x800072 <__data_end>
			input = 1;
			for(i=0; i<3; i++) digits[i]=0;
 8bc:	80 e0       	ldi	r24, 0x00	; 0
 8be:	90 e0       	ldi	r25, 0x00	; 0
 8c0:	0c c0       	rjmp	.+24     	; 0x8da <__stack+0x7b>
 8c2:	fc 01       	movw	r30, r24
 8c4:	ee 0f       	add	r30, r30
 8c6:	ff 1f       	adc	r31, r31
 8c8:	21 e0       	ldi	r18, 0x01	; 1
 8ca:	30 e0       	ldi	r19, 0x00	; 0
 8cc:	2c 0f       	add	r18, r28
 8ce:	3d 1f       	adc	r19, r29
 8d0:	e2 0f       	add	r30, r18
 8d2:	f3 1f       	adc	r31, r19
 8d4:	14 86       	std	Z+12, r1	; 0x0c
 8d6:	13 86       	std	Z+11, r1	; 0x0b
 8d8:	01 96       	adiw	r24, 0x01	; 1
 8da:	83 30       	cpi	r24, 0x03	; 3
 8dc:	91 05       	cpc	r25, r1
 8de:	8c f3       	brlt	.-30     	; 0x8c2 <__stack+0x63>
 8e0:	80 e0       	ldi	r24, 0x00	; 0
 8e2:	90 e0       	ldi	r25, 0x00	; 0
 8e4:	0e c0       	rjmp	.+28     	; 0x902 <__stack+0xa3>
			for(i=0; i<3; i++) fingerInSight[i]=1; // prevent initial 1
 8e6:	fc 01       	movw	r30, r24
 8e8:	ee 0f       	add	r30, r30
 8ea:	ff 1f       	adc	r31, r31
 8ec:	41 e0       	ldi	r20, 0x01	; 1
 8ee:	50 e0       	ldi	r21, 0x00	; 0
 8f0:	4c 0f       	add	r20, r28
 8f2:	5d 1f       	adc	r21, r29
 8f4:	e4 0f       	add	r30, r20
 8f6:	f5 1f       	adc	r31, r21
 8f8:	21 e0       	ldi	r18, 0x01	; 1
 8fa:	30 e0       	ldi	r19, 0x00	; 0
 8fc:	31 83       	std	Z+1, r19	; 0x01
 8fe:	20 83       	st	Z, r18
 900:	01 96       	adiw	r24, 0x01	; 1
 902:	83 30       	cpi	r24, 0x03	; 3
 904:	91 05       	cpc	r25, r1
 906:	7c f3       	brlt	.-34     	; 0x8e6 <__stack+0x87>
			ADMUX = 0b01100111;
 908:	87 e6       	ldi	r24, 0x67	; 103
 90a:	87 b9       	out	0x07, r24	; 7
 90c:	67 c0       	rjmp	.+206    	; 0x9dc <__stack+0x17d>
		}
		else if (timeElapsed > 6 && inSightSum) {
 90e:	80 91 72 00 	lds	r24, 0x0072	; 0x800072 <__data_end>
 912:	90 91 73 00 	lds	r25, 0x0073	; 0x800073 <__data_end+0x1>
 916:	07 97       	sbiw	r24, 0x07	; 7
 918:	0c f4       	brge	.+2      	; 0x91c <__stack+0xbd>
 91a:	60 c0       	rjmp	.+192    	; 0x9dc <__stack+0x17d>
 91c:	23 2b       	or	r18, r19
 91e:	09 f4       	brne	.+2      	; 0x922 <__stack+0xc3>
 920:	5d c0       	rjmp	.+186    	; 0x9dc <__stack+0x17d>
			// change input digit
			timeElapsed=0;
 922:	10 92 73 00 	sts	0x0073, r1	; 0x800073 <__data_end+0x1>
 926:	10 92 72 00 	sts	0x0072, r1	; 0x800072 <__data_end>
			
				// send final result to PC
				totalFingers = (100* digits[2]) + (10* digits[1]) +  digits[0];
 92a:	88 89       	ldd	r24, Y+16	; 0x10
 92c:	99 89       	ldd	r25, Y+17	; 0x11
 92e:	44 e6       	ldi	r20, 0x64	; 100
 930:	48 9f       	mul	r20, r24
 932:	90 01       	movw	r18, r0
 934:	49 9f       	mul	r20, r25
 936:	30 0d       	add	r19, r0
 938:	11 24       	eor	r1, r1
 93a:	8e 85       	ldd	r24, Y+14	; 0x0e
 93c:	9f 85       	ldd	r25, Y+15	; 0x0f
 93e:	ac 01       	movw	r20, r24
 940:	44 0f       	add	r20, r20
 942:	55 1f       	adc	r21, r21
 944:	88 0f       	add	r24, r24
 946:	99 1f       	adc	r25, r25
 948:	88 0f       	add	r24, r24
 94a:	99 1f       	adc	r25, r25
 94c:	88 0f       	add	r24, r24
 94e:	99 1f       	adc	r25, r25
 950:	84 0f       	add	r24, r20
 952:	95 1f       	adc	r25, r21
 954:	82 0f       	add	r24, r18
 956:	93 1f       	adc	r25, r19
 958:	2c 85       	ldd	r18, Y+12	; 0x0c
 95a:	3d 85       	ldd	r19, Y+13	; 0x0d
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
 95c:	4a e0       	ldi	r20, 0x0A	; 10
 95e:	be 01       	movw	r22, r28
 960:	69 5f       	subi	r22, 0xF9	; 249
 962:	7f 4f       	sbci	r23, 0xFF	; 255
 964:	82 0f       	add	r24, r18
 966:	93 1f       	adc	r25, r19
 968:	0e 94 6d 07 	call	0xeda	; 0xeda <__itoa_ncheck>
				itoa(totalFingers, numberArr, 10);
				for (i=0; numberArr[i] != '\0'; i++)
 96c:	00 e0       	ldi	r16, 0x00	; 0
 96e:	10 e0       	ldi	r17, 0x00	; 0
 970:	04 c0       	rjmp	.+8      	; 0x97a <__stack+0x11b>
				UART_send(numberArr[i]);
 972:	0e 94 8c 03 	call	0x718	; 0x718 <UART_send>
			timeElapsed=0;
			
				// send final result to PC
				totalFingers = (100* digits[2]) + (10* digits[1]) +  digits[0];
				itoa(totalFingers, numberArr, 10);
				for (i=0; numberArr[i] != '\0'; i++)
 976:	0f 5f       	subi	r16, 0xFF	; 255
 978:	1f 4f       	sbci	r17, 0xFF	; 255
 97a:	e7 e0       	ldi	r30, 0x07	; 7
 97c:	f0 e0       	ldi	r31, 0x00	; 0
 97e:	ec 0f       	add	r30, r28
 980:	fd 1f       	adc	r31, r29
 982:	e0 0f       	add	r30, r16
 984:	f1 1f       	adc	r31, r17
 986:	80 81       	ld	r24, Z
 988:	81 11       	cpse	r24, r1
 98a:	f3 cf       	rjmp	.-26     	; 0x972 <__stack+0x113>
 98c:	80 e0       	ldi	r24, 0x00	; 0
 98e:	90 e0       	ldi	r25, 0x00	; 0
 990:	0c c0       	rjmp	.+24     	; 0x9aa <__stack+0x14b>
				UART_send(numberArr[i]);
				
				// set to digit 1 (LSB)
				input = 1;
				for(i=0; i<3; i++) digits[i]=0;
 992:	fc 01       	movw	r30, r24
 994:	ee 0f       	add	r30, r30
 996:	ff 1f       	adc	r31, r31
 998:	21 e0       	ldi	r18, 0x01	; 1
 99a:	30 e0       	ldi	r19, 0x00	; 0
 99c:	2c 0f       	add	r18, r28
 99e:	3d 1f       	adc	r19, r29
 9a0:	e2 0f       	add	r30, r18
 9a2:	f3 1f       	adc	r31, r19
 9a4:	14 86       	std	Z+12, r1	; 0x0c
 9a6:	13 86       	std	Z+11, r1	; 0x0b
 9a8:	01 96       	adiw	r24, 0x01	; 1
 9aa:	83 30       	cpi	r24, 0x03	; 3
 9ac:	91 05       	cpc	r25, r1
 9ae:	8c f3       	brlt	.-30     	; 0x992 <__stack+0x133>
				ADMUX = 0b01100111;
 9b0:	87 e6       	ldi	r24, 0x67	; 103
 9b2:	87 b9       	out	0x07, r24	; 7
				totalFingers = 0;
			
			for(i=0; i<3; i++) fingerInSight[i]=1; // prevent initial 1
 9b4:	80 e0       	ldi	r24, 0x00	; 0
 9b6:	90 e0       	ldi	r25, 0x00	; 0
 9b8:	0e c0       	rjmp	.+28     	; 0x9d6 <__stack+0x177>
 9ba:	fc 01       	movw	r30, r24
 9bc:	ee 0f       	add	r30, r30
 9be:	ff 1f       	adc	r31, r31
 9c0:	41 e0       	ldi	r20, 0x01	; 1
 9c2:	50 e0       	ldi	r21, 0x00	; 0
 9c4:	4c 0f       	add	r20, r28
 9c6:	5d 1f       	adc	r21, r29
 9c8:	e4 0f       	add	r30, r20
 9ca:	f5 1f       	adc	r31, r21
 9cc:	21 e0       	ldi	r18, 0x01	; 1
 9ce:	30 e0       	ldi	r19, 0x00	; 0
 9d0:	31 83       	std	Z+1, r19	; 0x01
 9d2:	20 83       	st	Z, r18
 9d4:	01 96       	adiw	r24, 0x01	; 1
 9d6:	83 30       	cpi	r24, 0x03	; 3
 9d8:	91 05       	cpc	r25, r1
 9da:	7c f3       	brlt	.-34     	; 0x9ba <__stack+0x15b>
		}
		
		// ================ Output - printing to LCD ================
		
		Lcd4_Set_Cursor(1, 1); // line 1
 9dc:	61 e0       	ldi	r22, 0x01	; 1
 9de:	81 e0       	ldi	r24, 0x01	; 1
 9e0:	0e 94 6e 02 	call	0x4dc	; 0x4dc <Lcd4_Set_Cursor>
 9e4:	4a e0       	ldi	r20, 0x0A	; 10
 9e6:	be 01       	movw	r22, r28
 9e8:	69 5f       	subi	r22, 0xF9	; 249
 9ea:	7f 4f       	sbci	r23, 0xFF	; 255
 9ec:	81 e0       	ldi	r24, 0x01	; 1
 9ee:	90 e0       	ldi	r25, 0x00	; 0
 9f0:	0e 94 6d 07 	call	0xeda	; 0xeda <__itoa_ncheck>
		itoa(input, numberArr, 10);
		Lcd4_Write_String("Digit:   ");
 9f4:	80 e6       	ldi	r24, 0x60	; 96
 9f6:	90 e0       	ldi	r25, 0x00	; 0
 9f8:	0e 94 07 03 	call	0x60e	; 0x60e <Lcd4_Write_String>
		Lcd4_Write_String(numberArr);
 9fc:	ce 01       	movw	r24, r28
 9fe:	07 96       	adiw	r24, 0x07	; 7
 a00:	0e 94 07 03 	call	0x60e	; 0x60e <Lcd4_Write_String>
		
		Lcd4_Set_Cursor(2, 1); // line 2
 a04:	61 e0       	ldi	r22, 0x01	; 1
 a06:	82 e0       	ldi	r24, 0x02	; 2
 a08:	0e 94 6e 02 	call	0x4dc	; 0x4dc <Lcd4_Set_Cursor>
		Lcd4_Write_String("Floor: ");
 a0c:	8a e6       	ldi	r24, 0x6A	; 106
 a0e:	90 e0       	ldi	r25, 0x00	; 0
 a10:	0e 94 07 03 	call	0x60e	; 0x60e <Lcd4_Write_String>
 a14:	4a e0       	ldi	r20, 0x0A	; 10
 a16:	be 01       	movw	r22, r28
 a18:	69 5f       	subi	r22, 0xF9	; 249
 a1a:	7f 4f       	sbci	r23, 0xFF	; 255
 a1c:	88 89       	ldd	r24, Y+16	; 0x10
 a1e:	99 89       	ldd	r25, Y+17	; 0x11
 a20:	0e 94 6d 07 	call	0xeda	; 0xeda <__itoa_ncheck>
		itoa(digits[2], numberArr, 10);
		Lcd4_Write_String(numberArr); // X00
 a24:	ce 01       	movw	r24, r28
 a26:	07 96       	adiw	r24, 0x07	; 7
 a28:	0e 94 07 03 	call	0x60e	; 0x60e <Lcd4_Write_String>
 a2c:	4a e0       	ldi	r20, 0x0A	; 10
 a2e:	be 01       	movw	r22, r28
 a30:	69 5f       	subi	r22, 0xF9	; 249
 a32:	7f 4f       	sbci	r23, 0xFF	; 255
 a34:	8e 85       	ldd	r24, Y+14	; 0x0e
 a36:	9f 85       	ldd	r25, Y+15	; 0x0f
 a38:	0e 94 6d 07 	call	0xeda	; 0xeda <__itoa_ncheck>
		itoa(digits[1], numberArr, 10);
		Lcd4_Write_String(numberArr); // 0X0
 a3c:	ce 01       	movw	r24, r28
 a3e:	07 96       	adiw	r24, 0x07	; 7
 a40:	0e 94 07 03 	call	0x60e	; 0x60e <Lcd4_Write_String>
 a44:	4a e0       	ldi	r20, 0x0A	; 10
 a46:	be 01       	movw	r22, r28
 a48:	69 5f       	subi	r22, 0xF9	; 249
 a4a:	7f 4f       	sbci	r23, 0xFF	; 255
 a4c:	8c 85       	ldd	r24, Y+12	; 0x0c
 a4e:	9d 85       	ldd	r25, Y+13	; 0x0d
 a50:	0e 94 6d 07 	call	0xeda	; 0xeda <__itoa_ncheck>
		itoa(digits[0], numberArr, 10);
		Lcd4_Write_String(numberArr); // 00X
 a54:	ce 01       	movw	r24, r28
 a56:	07 96       	adiw	r24, 0x07	; 7
 a58:	0e 94 07 03 	call	0x60e	; 0x60e <Lcd4_Write_String>
	}
 a5c:	ab ce       	rjmp	.-682    	; 0x7b4 <main+0x94>

00000a5e <__subsf3>:
 a5e:	50 58       	subi	r21, 0x80	; 128

00000a60 <__addsf3>:
 a60:	bb 27       	eor	r27, r27
 a62:	aa 27       	eor	r26, r26
 a64:	0e 94 47 05 	call	0xa8e	; 0xa8e <__addsf3x>
 a68:	0c 94 c1 06 	jmp	0xd82	; 0xd82 <__fp_round>
 a6c:	0e 94 b3 06 	call	0xd66	; 0xd66 <__fp_pscA>
 a70:	38 f0       	brcs	.+14     	; 0xa80 <__addsf3+0x20>
 a72:	0e 94 ba 06 	call	0xd74	; 0xd74 <__fp_pscB>
 a76:	20 f0       	brcs	.+8      	; 0xa80 <__addsf3+0x20>
 a78:	39 f4       	brne	.+14     	; 0xa88 <__addsf3+0x28>
 a7a:	9f 3f       	cpi	r25, 0xFF	; 255
 a7c:	19 f4       	brne	.+6      	; 0xa84 <__addsf3+0x24>
 a7e:	26 f4       	brtc	.+8      	; 0xa88 <__addsf3+0x28>
 a80:	0c 94 b0 06 	jmp	0xd60	; 0xd60 <__fp_nan>
 a84:	0e f4       	brtc	.+2      	; 0xa88 <__addsf3+0x28>
 a86:	e0 95       	com	r30
 a88:	e7 fb       	bst	r30, 7
 a8a:	0c 94 aa 06 	jmp	0xd54	; 0xd54 <__fp_inf>

00000a8e <__addsf3x>:
 a8e:	e9 2f       	mov	r30, r25
 a90:	0e 94 d2 06 	call	0xda4	; 0xda4 <__fp_split3>
 a94:	58 f3       	brcs	.-42     	; 0xa6c <__addsf3+0xc>
 a96:	ba 17       	cp	r27, r26
 a98:	62 07       	cpc	r22, r18
 a9a:	73 07       	cpc	r23, r19
 a9c:	84 07       	cpc	r24, r20
 a9e:	95 07       	cpc	r25, r21
 aa0:	20 f0       	brcs	.+8      	; 0xaaa <__addsf3x+0x1c>
 aa2:	79 f4       	brne	.+30     	; 0xac2 <__addsf3x+0x34>
 aa4:	a6 f5       	brtc	.+104    	; 0xb0e <__addsf3x+0x80>
 aa6:	0c 94 f4 06 	jmp	0xde8	; 0xde8 <__fp_zero>
 aaa:	0e f4       	brtc	.+2      	; 0xaae <__addsf3x+0x20>
 aac:	e0 95       	com	r30
 aae:	0b 2e       	mov	r0, r27
 ab0:	ba 2f       	mov	r27, r26
 ab2:	a0 2d       	mov	r26, r0
 ab4:	0b 01       	movw	r0, r22
 ab6:	b9 01       	movw	r22, r18
 ab8:	90 01       	movw	r18, r0
 aba:	0c 01       	movw	r0, r24
 abc:	ca 01       	movw	r24, r20
 abe:	a0 01       	movw	r20, r0
 ac0:	11 24       	eor	r1, r1
 ac2:	ff 27       	eor	r31, r31
 ac4:	59 1b       	sub	r21, r25
 ac6:	99 f0       	breq	.+38     	; 0xaee <__addsf3x+0x60>
 ac8:	59 3f       	cpi	r21, 0xF9	; 249
 aca:	50 f4       	brcc	.+20     	; 0xae0 <__addsf3x+0x52>
 acc:	50 3e       	cpi	r21, 0xE0	; 224
 ace:	68 f1       	brcs	.+90     	; 0xb2a <__addsf3x+0x9c>
 ad0:	1a 16       	cp	r1, r26
 ad2:	f0 40       	sbci	r31, 0x00	; 0
 ad4:	a2 2f       	mov	r26, r18
 ad6:	23 2f       	mov	r18, r19
 ad8:	34 2f       	mov	r19, r20
 ada:	44 27       	eor	r20, r20
 adc:	58 5f       	subi	r21, 0xF8	; 248
 ade:	f3 cf       	rjmp	.-26     	; 0xac6 <__addsf3x+0x38>
 ae0:	46 95       	lsr	r20
 ae2:	37 95       	ror	r19
 ae4:	27 95       	ror	r18
 ae6:	a7 95       	ror	r26
 ae8:	f0 40       	sbci	r31, 0x00	; 0
 aea:	53 95       	inc	r21
 aec:	c9 f7       	brne	.-14     	; 0xae0 <__addsf3x+0x52>
 aee:	7e f4       	brtc	.+30     	; 0xb0e <__addsf3x+0x80>
 af0:	1f 16       	cp	r1, r31
 af2:	ba 0b       	sbc	r27, r26
 af4:	62 0b       	sbc	r22, r18
 af6:	73 0b       	sbc	r23, r19
 af8:	84 0b       	sbc	r24, r20
 afa:	ba f0       	brmi	.+46     	; 0xb2a <__addsf3x+0x9c>
 afc:	91 50       	subi	r25, 0x01	; 1
 afe:	a1 f0       	breq	.+40     	; 0xb28 <__addsf3x+0x9a>
 b00:	ff 0f       	add	r31, r31
 b02:	bb 1f       	adc	r27, r27
 b04:	66 1f       	adc	r22, r22
 b06:	77 1f       	adc	r23, r23
 b08:	88 1f       	adc	r24, r24
 b0a:	c2 f7       	brpl	.-16     	; 0xafc <__addsf3x+0x6e>
 b0c:	0e c0       	rjmp	.+28     	; 0xb2a <__addsf3x+0x9c>
 b0e:	ba 0f       	add	r27, r26
 b10:	62 1f       	adc	r22, r18
 b12:	73 1f       	adc	r23, r19
 b14:	84 1f       	adc	r24, r20
 b16:	48 f4       	brcc	.+18     	; 0xb2a <__addsf3x+0x9c>
 b18:	87 95       	ror	r24
 b1a:	77 95       	ror	r23
 b1c:	67 95       	ror	r22
 b1e:	b7 95       	ror	r27
 b20:	f7 95       	ror	r31
 b22:	9e 3f       	cpi	r25, 0xFE	; 254
 b24:	08 f0       	brcs	.+2      	; 0xb28 <__addsf3x+0x9a>
 b26:	b0 cf       	rjmp	.-160    	; 0xa88 <__addsf3+0x28>
 b28:	93 95       	inc	r25
 b2a:	88 0f       	add	r24, r24
 b2c:	08 f0       	brcs	.+2      	; 0xb30 <__addsf3x+0xa2>
 b2e:	99 27       	eor	r25, r25
 b30:	ee 0f       	add	r30, r30
 b32:	97 95       	ror	r25
 b34:	87 95       	ror	r24
 b36:	08 95       	ret

00000b38 <__cmpsf2>:
 b38:	0e 94 86 06 	call	0xd0c	; 0xd0c <__fp_cmp>
 b3c:	08 f4       	brcc	.+2      	; 0xb40 <__cmpsf2+0x8>
 b3e:	81 e0       	ldi	r24, 0x01	; 1
 b40:	08 95       	ret

00000b42 <__divsf3>:
 b42:	0e 94 b5 05 	call	0xb6a	; 0xb6a <__divsf3x>
 b46:	0c 94 c1 06 	jmp	0xd82	; 0xd82 <__fp_round>
 b4a:	0e 94 ba 06 	call	0xd74	; 0xd74 <__fp_pscB>
 b4e:	58 f0       	brcs	.+22     	; 0xb66 <__divsf3+0x24>
 b50:	0e 94 b3 06 	call	0xd66	; 0xd66 <__fp_pscA>
 b54:	40 f0       	brcs	.+16     	; 0xb66 <__divsf3+0x24>
 b56:	29 f4       	brne	.+10     	; 0xb62 <__divsf3+0x20>
 b58:	5f 3f       	cpi	r21, 0xFF	; 255
 b5a:	29 f0       	breq	.+10     	; 0xb66 <__divsf3+0x24>
 b5c:	0c 94 aa 06 	jmp	0xd54	; 0xd54 <__fp_inf>
 b60:	51 11       	cpse	r21, r1
 b62:	0c 94 f5 06 	jmp	0xdea	; 0xdea <__fp_szero>
 b66:	0c 94 b0 06 	jmp	0xd60	; 0xd60 <__fp_nan>

00000b6a <__divsf3x>:
 b6a:	0e 94 d2 06 	call	0xda4	; 0xda4 <__fp_split3>
 b6e:	68 f3       	brcs	.-38     	; 0xb4a <__divsf3+0x8>

00000b70 <__divsf3_pse>:
 b70:	99 23       	and	r25, r25
 b72:	b1 f3       	breq	.-20     	; 0xb60 <__divsf3+0x1e>
 b74:	55 23       	and	r21, r21
 b76:	91 f3       	breq	.-28     	; 0xb5c <__divsf3+0x1a>
 b78:	95 1b       	sub	r25, r21
 b7a:	55 0b       	sbc	r21, r21
 b7c:	bb 27       	eor	r27, r27
 b7e:	aa 27       	eor	r26, r26
 b80:	62 17       	cp	r22, r18
 b82:	73 07       	cpc	r23, r19
 b84:	84 07       	cpc	r24, r20
 b86:	38 f0       	brcs	.+14     	; 0xb96 <__divsf3_pse+0x26>
 b88:	9f 5f       	subi	r25, 0xFF	; 255
 b8a:	5f 4f       	sbci	r21, 0xFF	; 255
 b8c:	22 0f       	add	r18, r18
 b8e:	33 1f       	adc	r19, r19
 b90:	44 1f       	adc	r20, r20
 b92:	aa 1f       	adc	r26, r26
 b94:	a9 f3       	breq	.-22     	; 0xb80 <__divsf3_pse+0x10>
 b96:	35 d0       	rcall	.+106    	; 0xc02 <__divsf3_pse+0x92>
 b98:	0e 2e       	mov	r0, r30
 b9a:	3a f0       	brmi	.+14     	; 0xbaa <__divsf3_pse+0x3a>
 b9c:	e0 e8       	ldi	r30, 0x80	; 128
 b9e:	32 d0       	rcall	.+100    	; 0xc04 <__divsf3_pse+0x94>
 ba0:	91 50       	subi	r25, 0x01	; 1
 ba2:	50 40       	sbci	r21, 0x00	; 0
 ba4:	e6 95       	lsr	r30
 ba6:	00 1c       	adc	r0, r0
 ba8:	ca f7       	brpl	.-14     	; 0xb9c <__divsf3_pse+0x2c>
 baa:	2b d0       	rcall	.+86     	; 0xc02 <__divsf3_pse+0x92>
 bac:	fe 2f       	mov	r31, r30
 bae:	29 d0       	rcall	.+82     	; 0xc02 <__divsf3_pse+0x92>
 bb0:	66 0f       	add	r22, r22
 bb2:	77 1f       	adc	r23, r23
 bb4:	88 1f       	adc	r24, r24
 bb6:	bb 1f       	adc	r27, r27
 bb8:	26 17       	cp	r18, r22
 bba:	37 07       	cpc	r19, r23
 bbc:	48 07       	cpc	r20, r24
 bbe:	ab 07       	cpc	r26, r27
 bc0:	b0 e8       	ldi	r27, 0x80	; 128
 bc2:	09 f0       	breq	.+2      	; 0xbc6 <__divsf3_pse+0x56>
 bc4:	bb 0b       	sbc	r27, r27
 bc6:	80 2d       	mov	r24, r0
 bc8:	bf 01       	movw	r22, r30
 bca:	ff 27       	eor	r31, r31
 bcc:	93 58       	subi	r25, 0x83	; 131
 bce:	5f 4f       	sbci	r21, 0xFF	; 255
 bd0:	3a f0       	brmi	.+14     	; 0xbe0 <__divsf3_pse+0x70>
 bd2:	9e 3f       	cpi	r25, 0xFE	; 254
 bd4:	51 05       	cpc	r21, r1
 bd6:	78 f0       	brcs	.+30     	; 0xbf6 <__divsf3_pse+0x86>
 bd8:	0c 94 aa 06 	jmp	0xd54	; 0xd54 <__fp_inf>
 bdc:	0c 94 f5 06 	jmp	0xdea	; 0xdea <__fp_szero>
 be0:	5f 3f       	cpi	r21, 0xFF	; 255
 be2:	e4 f3       	brlt	.-8      	; 0xbdc <__divsf3_pse+0x6c>
 be4:	98 3e       	cpi	r25, 0xE8	; 232
 be6:	d4 f3       	brlt	.-12     	; 0xbdc <__divsf3_pse+0x6c>
 be8:	86 95       	lsr	r24
 bea:	77 95       	ror	r23
 bec:	67 95       	ror	r22
 bee:	b7 95       	ror	r27
 bf0:	f7 95       	ror	r31
 bf2:	9f 5f       	subi	r25, 0xFF	; 255
 bf4:	c9 f7       	brne	.-14     	; 0xbe8 <__divsf3_pse+0x78>
 bf6:	88 0f       	add	r24, r24
 bf8:	91 1d       	adc	r25, r1
 bfa:	96 95       	lsr	r25
 bfc:	87 95       	ror	r24
 bfe:	97 f9       	bld	r25, 7
 c00:	08 95       	ret
 c02:	e1 e0       	ldi	r30, 0x01	; 1
 c04:	66 0f       	add	r22, r22
 c06:	77 1f       	adc	r23, r23
 c08:	88 1f       	adc	r24, r24
 c0a:	bb 1f       	adc	r27, r27
 c0c:	62 17       	cp	r22, r18
 c0e:	73 07       	cpc	r23, r19
 c10:	84 07       	cpc	r24, r20
 c12:	ba 07       	cpc	r27, r26
 c14:	20 f0       	brcs	.+8      	; 0xc1e <__divsf3_pse+0xae>
 c16:	62 1b       	sub	r22, r18
 c18:	73 0b       	sbc	r23, r19
 c1a:	84 0b       	sbc	r24, r20
 c1c:	ba 0b       	sbc	r27, r26
 c1e:	ee 1f       	adc	r30, r30
 c20:	88 f7       	brcc	.-30     	; 0xc04 <__divsf3_pse+0x94>
 c22:	e0 95       	com	r30
 c24:	08 95       	ret

00000c26 <__fixsfsi>:
 c26:	0e 94 1a 06 	call	0xc34	; 0xc34 <__fixunssfsi>
 c2a:	68 94       	set
 c2c:	b1 11       	cpse	r27, r1
 c2e:	0c 94 f5 06 	jmp	0xdea	; 0xdea <__fp_szero>
 c32:	08 95       	ret

00000c34 <__fixunssfsi>:
 c34:	0e 94 da 06 	call	0xdb4	; 0xdb4 <__fp_splitA>
 c38:	88 f0       	brcs	.+34     	; 0xc5c <__fixunssfsi+0x28>
 c3a:	9f 57       	subi	r25, 0x7F	; 127
 c3c:	98 f0       	brcs	.+38     	; 0xc64 <__fixunssfsi+0x30>
 c3e:	b9 2f       	mov	r27, r25
 c40:	99 27       	eor	r25, r25
 c42:	b7 51       	subi	r27, 0x17	; 23
 c44:	b0 f0       	brcs	.+44     	; 0xc72 <__fixunssfsi+0x3e>
 c46:	e1 f0       	breq	.+56     	; 0xc80 <__fixunssfsi+0x4c>
 c48:	66 0f       	add	r22, r22
 c4a:	77 1f       	adc	r23, r23
 c4c:	88 1f       	adc	r24, r24
 c4e:	99 1f       	adc	r25, r25
 c50:	1a f0       	brmi	.+6      	; 0xc58 <__fixunssfsi+0x24>
 c52:	ba 95       	dec	r27
 c54:	c9 f7       	brne	.-14     	; 0xc48 <__fixunssfsi+0x14>
 c56:	14 c0       	rjmp	.+40     	; 0xc80 <__fixunssfsi+0x4c>
 c58:	b1 30       	cpi	r27, 0x01	; 1
 c5a:	91 f0       	breq	.+36     	; 0xc80 <__fixunssfsi+0x4c>
 c5c:	0e 94 f4 06 	call	0xde8	; 0xde8 <__fp_zero>
 c60:	b1 e0       	ldi	r27, 0x01	; 1
 c62:	08 95       	ret
 c64:	0c 94 f4 06 	jmp	0xde8	; 0xde8 <__fp_zero>
 c68:	67 2f       	mov	r22, r23
 c6a:	78 2f       	mov	r23, r24
 c6c:	88 27       	eor	r24, r24
 c6e:	b8 5f       	subi	r27, 0xF8	; 248
 c70:	39 f0       	breq	.+14     	; 0xc80 <__fixunssfsi+0x4c>
 c72:	b9 3f       	cpi	r27, 0xF9	; 249
 c74:	cc f3       	brlt	.-14     	; 0xc68 <__fixunssfsi+0x34>
 c76:	86 95       	lsr	r24
 c78:	77 95       	ror	r23
 c7a:	67 95       	ror	r22
 c7c:	b3 95       	inc	r27
 c7e:	d9 f7       	brne	.-10     	; 0xc76 <__fixunssfsi+0x42>
 c80:	3e f4       	brtc	.+14     	; 0xc90 <__fixunssfsi+0x5c>
 c82:	90 95       	com	r25
 c84:	80 95       	com	r24
 c86:	70 95       	com	r23
 c88:	61 95       	neg	r22
 c8a:	7f 4f       	sbci	r23, 0xFF	; 255
 c8c:	8f 4f       	sbci	r24, 0xFF	; 255
 c8e:	9f 4f       	sbci	r25, 0xFF	; 255
 c90:	08 95       	ret

00000c92 <__floatunsisf>:
 c92:	e8 94       	clt
 c94:	09 c0       	rjmp	.+18     	; 0xca8 <__floatsisf+0x12>

00000c96 <__floatsisf>:
 c96:	97 fb       	bst	r25, 7
 c98:	3e f4       	brtc	.+14     	; 0xca8 <__floatsisf+0x12>
 c9a:	90 95       	com	r25
 c9c:	80 95       	com	r24
 c9e:	70 95       	com	r23
 ca0:	61 95       	neg	r22
 ca2:	7f 4f       	sbci	r23, 0xFF	; 255
 ca4:	8f 4f       	sbci	r24, 0xFF	; 255
 ca6:	9f 4f       	sbci	r25, 0xFF	; 255
 ca8:	99 23       	and	r25, r25
 caa:	a9 f0       	breq	.+42     	; 0xcd6 <__floatsisf+0x40>
 cac:	f9 2f       	mov	r31, r25
 cae:	96 e9       	ldi	r25, 0x96	; 150
 cb0:	bb 27       	eor	r27, r27
 cb2:	93 95       	inc	r25
 cb4:	f6 95       	lsr	r31
 cb6:	87 95       	ror	r24
 cb8:	77 95       	ror	r23
 cba:	67 95       	ror	r22
 cbc:	b7 95       	ror	r27
 cbe:	f1 11       	cpse	r31, r1
 cc0:	f8 cf       	rjmp	.-16     	; 0xcb2 <__floatsisf+0x1c>
 cc2:	fa f4       	brpl	.+62     	; 0xd02 <__floatsisf+0x6c>
 cc4:	bb 0f       	add	r27, r27
 cc6:	11 f4       	brne	.+4      	; 0xccc <__floatsisf+0x36>
 cc8:	60 ff       	sbrs	r22, 0
 cca:	1b c0       	rjmp	.+54     	; 0xd02 <__floatsisf+0x6c>
 ccc:	6f 5f       	subi	r22, 0xFF	; 255
 cce:	7f 4f       	sbci	r23, 0xFF	; 255
 cd0:	8f 4f       	sbci	r24, 0xFF	; 255
 cd2:	9f 4f       	sbci	r25, 0xFF	; 255
 cd4:	16 c0       	rjmp	.+44     	; 0xd02 <__floatsisf+0x6c>
 cd6:	88 23       	and	r24, r24
 cd8:	11 f0       	breq	.+4      	; 0xcde <__floatsisf+0x48>
 cda:	96 e9       	ldi	r25, 0x96	; 150
 cdc:	11 c0       	rjmp	.+34     	; 0xd00 <__floatsisf+0x6a>
 cde:	77 23       	and	r23, r23
 ce0:	21 f0       	breq	.+8      	; 0xcea <__floatsisf+0x54>
 ce2:	9e e8       	ldi	r25, 0x8E	; 142
 ce4:	87 2f       	mov	r24, r23
 ce6:	76 2f       	mov	r23, r22
 ce8:	05 c0       	rjmp	.+10     	; 0xcf4 <__floatsisf+0x5e>
 cea:	66 23       	and	r22, r22
 cec:	71 f0       	breq	.+28     	; 0xd0a <__floatsisf+0x74>
 cee:	96 e8       	ldi	r25, 0x86	; 134
 cf0:	86 2f       	mov	r24, r22
 cf2:	70 e0       	ldi	r23, 0x00	; 0
 cf4:	60 e0       	ldi	r22, 0x00	; 0
 cf6:	2a f0       	brmi	.+10     	; 0xd02 <__floatsisf+0x6c>
 cf8:	9a 95       	dec	r25
 cfa:	66 0f       	add	r22, r22
 cfc:	77 1f       	adc	r23, r23
 cfe:	88 1f       	adc	r24, r24
 d00:	da f7       	brpl	.-10     	; 0xcf8 <__floatsisf+0x62>
 d02:	88 0f       	add	r24, r24
 d04:	96 95       	lsr	r25
 d06:	87 95       	ror	r24
 d08:	97 f9       	bld	r25, 7
 d0a:	08 95       	ret

00000d0c <__fp_cmp>:
 d0c:	99 0f       	add	r25, r25
 d0e:	00 08       	sbc	r0, r0
 d10:	55 0f       	add	r21, r21
 d12:	aa 0b       	sbc	r26, r26
 d14:	e0 e8       	ldi	r30, 0x80	; 128
 d16:	fe ef       	ldi	r31, 0xFE	; 254
 d18:	16 16       	cp	r1, r22
 d1a:	17 06       	cpc	r1, r23
 d1c:	e8 07       	cpc	r30, r24
 d1e:	f9 07       	cpc	r31, r25
 d20:	c0 f0       	brcs	.+48     	; 0xd52 <__fp_cmp+0x46>
 d22:	12 16       	cp	r1, r18
 d24:	13 06       	cpc	r1, r19
 d26:	e4 07       	cpc	r30, r20
 d28:	f5 07       	cpc	r31, r21
 d2a:	98 f0       	brcs	.+38     	; 0xd52 <__fp_cmp+0x46>
 d2c:	62 1b       	sub	r22, r18
 d2e:	73 0b       	sbc	r23, r19
 d30:	84 0b       	sbc	r24, r20
 d32:	95 0b       	sbc	r25, r21
 d34:	39 f4       	brne	.+14     	; 0xd44 <__fp_cmp+0x38>
 d36:	0a 26       	eor	r0, r26
 d38:	61 f0       	breq	.+24     	; 0xd52 <__fp_cmp+0x46>
 d3a:	23 2b       	or	r18, r19
 d3c:	24 2b       	or	r18, r20
 d3e:	25 2b       	or	r18, r21
 d40:	21 f4       	brne	.+8      	; 0xd4a <__fp_cmp+0x3e>
 d42:	08 95       	ret
 d44:	0a 26       	eor	r0, r26
 d46:	09 f4       	brne	.+2      	; 0xd4a <__fp_cmp+0x3e>
 d48:	a1 40       	sbci	r26, 0x01	; 1
 d4a:	a6 95       	lsr	r26
 d4c:	8f ef       	ldi	r24, 0xFF	; 255
 d4e:	81 1d       	adc	r24, r1
 d50:	81 1d       	adc	r24, r1
 d52:	08 95       	ret

00000d54 <__fp_inf>:
 d54:	97 f9       	bld	r25, 7
 d56:	9f 67       	ori	r25, 0x7F	; 127
 d58:	80 e8       	ldi	r24, 0x80	; 128
 d5a:	70 e0       	ldi	r23, 0x00	; 0
 d5c:	60 e0       	ldi	r22, 0x00	; 0
 d5e:	08 95       	ret

00000d60 <__fp_nan>:
 d60:	9f ef       	ldi	r25, 0xFF	; 255
 d62:	80 ec       	ldi	r24, 0xC0	; 192
 d64:	08 95       	ret

00000d66 <__fp_pscA>:
 d66:	00 24       	eor	r0, r0
 d68:	0a 94       	dec	r0
 d6a:	16 16       	cp	r1, r22
 d6c:	17 06       	cpc	r1, r23
 d6e:	18 06       	cpc	r1, r24
 d70:	09 06       	cpc	r0, r25
 d72:	08 95       	ret

00000d74 <__fp_pscB>:
 d74:	00 24       	eor	r0, r0
 d76:	0a 94       	dec	r0
 d78:	12 16       	cp	r1, r18
 d7a:	13 06       	cpc	r1, r19
 d7c:	14 06       	cpc	r1, r20
 d7e:	05 06       	cpc	r0, r21
 d80:	08 95       	ret

00000d82 <__fp_round>:
 d82:	09 2e       	mov	r0, r25
 d84:	03 94       	inc	r0
 d86:	00 0c       	add	r0, r0
 d88:	11 f4       	brne	.+4      	; 0xd8e <__fp_round+0xc>
 d8a:	88 23       	and	r24, r24
 d8c:	52 f0       	brmi	.+20     	; 0xda2 <__fp_round+0x20>
 d8e:	bb 0f       	add	r27, r27
 d90:	40 f4       	brcc	.+16     	; 0xda2 <__fp_round+0x20>
 d92:	bf 2b       	or	r27, r31
 d94:	11 f4       	brne	.+4      	; 0xd9a <__fp_round+0x18>
 d96:	60 ff       	sbrs	r22, 0
 d98:	04 c0       	rjmp	.+8      	; 0xda2 <__fp_round+0x20>
 d9a:	6f 5f       	subi	r22, 0xFF	; 255
 d9c:	7f 4f       	sbci	r23, 0xFF	; 255
 d9e:	8f 4f       	sbci	r24, 0xFF	; 255
 da0:	9f 4f       	sbci	r25, 0xFF	; 255
 da2:	08 95       	ret

00000da4 <__fp_split3>:
 da4:	57 fd       	sbrc	r21, 7
 da6:	90 58       	subi	r25, 0x80	; 128
 da8:	44 0f       	add	r20, r20
 daa:	55 1f       	adc	r21, r21
 dac:	59 f0       	breq	.+22     	; 0xdc4 <__fp_splitA+0x10>
 dae:	5f 3f       	cpi	r21, 0xFF	; 255
 db0:	71 f0       	breq	.+28     	; 0xdce <__fp_splitA+0x1a>
 db2:	47 95       	ror	r20

00000db4 <__fp_splitA>:
 db4:	88 0f       	add	r24, r24
 db6:	97 fb       	bst	r25, 7
 db8:	99 1f       	adc	r25, r25
 dba:	61 f0       	breq	.+24     	; 0xdd4 <__fp_splitA+0x20>
 dbc:	9f 3f       	cpi	r25, 0xFF	; 255
 dbe:	79 f0       	breq	.+30     	; 0xdde <__fp_splitA+0x2a>
 dc0:	87 95       	ror	r24
 dc2:	08 95       	ret
 dc4:	12 16       	cp	r1, r18
 dc6:	13 06       	cpc	r1, r19
 dc8:	14 06       	cpc	r1, r20
 dca:	55 1f       	adc	r21, r21
 dcc:	f2 cf       	rjmp	.-28     	; 0xdb2 <__fp_split3+0xe>
 dce:	46 95       	lsr	r20
 dd0:	f1 df       	rcall	.-30     	; 0xdb4 <__fp_splitA>
 dd2:	08 c0       	rjmp	.+16     	; 0xde4 <__fp_splitA+0x30>
 dd4:	16 16       	cp	r1, r22
 dd6:	17 06       	cpc	r1, r23
 dd8:	18 06       	cpc	r1, r24
 dda:	99 1f       	adc	r25, r25
 ddc:	f1 cf       	rjmp	.-30     	; 0xdc0 <__fp_splitA+0xc>
 dde:	86 95       	lsr	r24
 de0:	71 05       	cpc	r23, r1
 de2:	61 05       	cpc	r22, r1
 de4:	08 94       	sec
 de6:	08 95       	ret

00000de8 <__fp_zero>:
 de8:	e8 94       	clt

00000dea <__fp_szero>:
 dea:	bb 27       	eor	r27, r27
 dec:	66 27       	eor	r22, r22
 dee:	77 27       	eor	r23, r23
 df0:	cb 01       	movw	r24, r22
 df2:	97 f9       	bld	r25, 7
 df4:	08 95       	ret

00000df6 <__gesf2>:
 df6:	0e 94 86 06 	call	0xd0c	; 0xd0c <__fp_cmp>
 dfa:	08 f4       	brcc	.+2      	; 0xdfe <__gesf2+0x8>
 dfc:	8f ef       	ldi	r24, 0xFF	; 255
 dfe:	08 95       	ret

00000e00 <__mulsf3>:
 e00:	0e 94 13 07 	call	0xe26	; 0xe26 <__mulsf3x>
 e04:	0c 94 c1 06 	jmp	0xd82	; 0xd82 <__fp_round>
 e08:	0e 94 b3 06 	call	0xd66	; 0xd66 <__fp_pscA>
 e0c:	38 f0       	brcs	.+14     	; 0xe1c <__mulsf3+0x1c>
 e0e:	0e 94 ba 06 	call	0xd74	; 0xd74 <__fp_pscB>
 e12:	20 f0       	brcs	.+8      	; 0xe1c <__mulsf3+0x1c>
 e14:	95 23       	and	r25, r21
 e16:	11 f0       	breq	.+4      	; 0xe1c <__mulsf3+0x1c>
 e18:	0c 94 aa 06 	jmp	0xd54	; 0xd54 <__fp_inf>
 e1c:	0c 94 b0 06 	jmp	0xd60	; 0xd60 <__fp_nan>
 e20:	11 24       	eor	r1, r1
 e22:	0c 94 f5 06 	jmp	0xdea	; 0xdea <__fp_szero>

00000e26 <__mulsf3x>:
 e26:	0e 94 d2 06 	call	0xda4	; 0xda4 <__fp_split3>
 e2a:	70 f3       	brcs	.-36     	; 0xe08 <__mulsf3+0x8>

00000e2c <__mulsf3_pse>:
 e2c:	95 9f       	mul	r25, r21
 e2e:	c1 f3       	breq	.-16     	; 0xe20 <__mulsf3+0x20>
 e30:	95 0f       	add	r25, r21
 e32:	50 e0       	ldi	r21, 0x00	; 0
 e34:	55 1f       	adc	r21, r21
 e36:	62 9f       	mul	r22, r18
 e38:	f0 01       	movw	r30, r0
 e3a:	72 9f       	mul	r23, r18
 e3c:	bb 27       	eor	r27, r27
 e3e:	f0 0d       	add	r31, r0
 e40:	b1 1d       	adc	r27, r1
 e42:	63 9f       	mul	r22, r19
 e44:	aa 27       	eor	r26, r26
 e46:	f0 0d       	add	r31, r0
 e48:	b1 1d       	adc	r27, r1
 e4a:	aa 1f       	adc	r26, r26
 e4c:	64 9f       	mul	r22, r20
 e4e:	66 27       	eor	r22, r22
 e50:	b0 0d       	add	r27, r0
 e52:	a1 1d       	adc	r26, r1
 e54:	66 1f       	adc	r22, r22
 e56:	82 9f       	mul	r24, r18
 e58:	22 27       	eor	r18, r18
 e5a:	b0 0d       	add	r27, r0
 e5c:	a1 1d       	adc	r26, r1
 e5e:	62 1f       	adc	r22, r18
 e60:	73 9f       	mul	r23, r19
 e62:	b0 0d       	add	r27, r0
 e64:	a1 1d       	adc	r26, r1
 e66:	62 1f       	adc	r22, r18
 e68:	83 9f       	mul	r24, r19
 e6a:	a0 0d       	add	r26, r0
 e6c:	61 1d       	adc	r22, r1
 e6e:	22 1f       	adc	r18, r18
 e70:	74 9f       	mul	r23, r20
 e72:	33 27       	eor	r19, r19
 e74:	a0 0d       	add	r26, r0
 e76:	61 1d       	adc	r22, r1
 e78:	23 1f       	adc	r18, r19
 e7a:	84 9f       	mul	r24, r20
 e7c:	60 0d       	add	r22, r0
 e7e:	21 1d       	adc	r18, r1
 e80:	82 2f       	mov	r24, r18
 e82:	76 2f       	mov	r23, r22
 e84:	6a 2f       	mov	r22, r26
 e86:	11 24       	eor	r1, r1
 e88:	9f 57       	subi	r25, 0x7F	; 127
 e8a:	50 40       	sbci	r21, 0x00	; 0
 e8c:	9a f0       	brmi	.+38     	; 0xeb4 <__mulsf3_pse+0x88>
 e8e:	f1 f0       	breq	.+60     	; 0xecc <__mulsf3_pse+0xa0>
 e90:	88 23       	and	r24, r24
 e92:	4a f0       	brmi	.+18     	; 0xea6 <__mulsf3_pse+0x7a>
 e94:	ee 0f       	add	r30, r30
 e96:	ff 1f       	adc	r31, r31
 e98:	bb 1f       	adc	r27, r27
 e9a:	66 1f       	adc	r22, r22
 e9c:	77 1f       	adc	r23, r23
 e9e:	88 1f       	adc	r24, r24
 ea0:	91 50       	subi	r25, 0x01	; 1
 ea2:	50 40       	sbci	r21, 0x00	; 0
 ea4:	a9 f7       	brne	.-22     	; 0xe90 <__mulsf3_pse+0x64>
 ea6:	9e 3f       	cpi	r25, 0xFE	; 254
 ea8:	51 05       	cpc	r21, r1
 eaa:	80 f0       	brcs	.+32     	; 0xecc <__mulsf3_pse+0xa0>
 eac:	0c 94 aa 06 	jmp	0xd54	; 0xd54 <__fp_inf>
 eb0:	0c 94 f5 06 	jmp	0xdea	; 0xdea <__fp_szero>
 eb4:	5f 3f       	cpi	r21, 0xFF	; 255
 eb6:	e4 f3       	brlt	.-8      	; 0xeb0 <__mulsf3_pse+0x84>
 eb8:	98 3e       	cpi	r25, 0xE8	; 232
 eba:	d4 f3       	brlt	.-12     	; 0xeb0 <__mulsf3_pse+0x84>
 ebc:	86 95       	lsr	r24
 ebe:	77 95       	ror	r23
 ec0:	67 95       	ror	r22
 ec2:	b7 95       	ror	r27
 ec4:	f7 95       	ror	r31
 ec6:	e7 95       	ror	r30
 ec8:	9f 5f       	subi	r25, 0xFF	; 255
 eca:	c1 f7       	brne	.-16     	; 0xebc <__mulsf3_pse+0x90>
 ecc:	fe 2b       	or	r31, r30
 ece:	88 0f       	add	r24, r24
 ed0:	91 1d       	adc	r25, r1
 ed2:	96 95       	lsr	r25
 ed4:	87 95       	ror	r24
 ed6:	97 f9       	bld	r25, 7
 ed8:	08 95       	ret

00000eda <__itoa_ncheck>:
 eda:	bb 27       	eor	r27, r27
 edc:	4a 30       	cpi	r20, 0x0A	; 10
 ede:	31 f4       	brne	.+12     	; 0xeec <__itoa_ncheck+0x12>
 ee0:	99 23       	and	r25, r25
 ee2:	22 f4       	brpl	.+8      	; 0xeec <__itoa_ncheck+0x12>
 ee4:	bd e2       	ldi	r27, 0x2D	; 45
 ee6:	90 95       	com	r25
 ee8:	81 95       	neg	r24
 eea:	9f 4f       	sbci	r25, 0xFF	; 255
 eec:	0c 94 79 07 	jmp	0xef2	; 0xef2 <__utoa_common>

00000ef0 <__utoa_ncheck>:
 ef0:	bb 27       	eor	r27, r27

00000ef2 <__utoa_common>:
 ef2:	fb 01       	movw	r30, r22
 ef4:	55 27       	eor	r21, r21
 ef6:	aa 27       	eor	r26, r26
 ef8:	88 0f       	add	r24, r24
 efa:	99 1f       	adc	r25, r25
 efc:	aa 1f       	adc	r26, r26
 efe:	a4 17       	cp	r26, r20
 f00:	10 f0       	brcs	.+4      	; 0xf06 <__utoa_common+0x14>
 f02:	a4 1b       	sub	r26, r20
 f04:	83 95       	inc	r24
 f06:	50 51       	subi	r21, 0x10	; 16
 f08:	b9 f7       	brne	.-18     	; 0xef8 <__utoa_common+0x6>
 f0a:	a0 5d       	subi	r26, 0xD0	; 208
 f0c:	aa 33       	cpi	r26, 0x3A	; 58
 f0e:	08 f0       	brcs	.+2      	; 0xf12 <__utoa_common+0x20>
 f10:	a9 5d       	subi	r26, 0xD9	; 217
 f12:	a1 93       	st	Z+, r26
 f14:	00 97       	sbiw	r24, 0x00	; 0
 f16:	79 f7       	brne	.-34     	; 0xef6 <__utoa_common+0x4>
 f18:	b1 11       	cpse	r27, r1
 f1a:	b1 93       	st	Z+, r27
 f1c:	11 92       	st	Z+, r1
 f1e:	cb 01       	movw	r24, r22
 f20:	0c 94 92 07 	jmp	0xf24	; 0xf24 <strrev>

00000f24 <strrev>:
 f24:	dc 01       	movw	r26, r24
 f26:	fc 01       	movw	r30, r24
 f28:	67 2f       	mov	r22, r23
 f2a:	71 91       	ld	r23, Z+
 f2c:	77 23       	and	r23, r23
 f2e:	e1 f7       	brne	.-8      	; 0xf28 <strrev+0x4>
 f30:	32 97       	sbiw	r30, 0x02	; 2
 f32:	04 c0       	rjmp	.+8      	; 0xf3c <strrev+0x18>
 f34:	7c 91       	ld	r23, X
 f36:	6d 93       	st	X+, r22
 f38:	70 83       	st	Z, r23
 f3a:	62 91       	ld	r22, -Z
 f3c:	ae 17       	cp	r26, r30
 f3e:	bf 07       	cpc	r27, r31
 f40:	c8 f3       	brcs	.-14     	; 0xf34 <strrev+0x10>
 f42:	08 95       	ret

00000f44 <_exit>:
 f44:	f8 94       	cli

00000f46 <__stop_program>:
 f46:	ff cf       	rjmp	.-2      	; 0xf46 <__stop_program>
